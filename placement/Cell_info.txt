Cell Name : AND2_X1
P Vertex : ['Z_neg', 'VDD', 'Z']
N Vertex : ['net_0', 'VSS', 'Z_neg', 'Z']
Edge : ['A2', 'A1', 'Z_neg']
Tr_info : [[['Z_neg', 'A2', 'VDD'], ['VDD', 'A1', 'Z_neg'], ['Z', 'Z_neg', 'VDD']], [['net_0', 'A2', 'VSS'], ['Z_neg', 'A1', 'net_0'], ['Z', 'Z_neg', 'VSS']]]
P matrix = [[0, 2, 0], [2, 0, 1], [0, 1, 0]]
N matrix = [[0, 1, 1, 0], [1, 0, 0, 1], [1, 0, 0, 0], [0, 1, 0, 0]]
P odd degree count : 2
N odd degree count : 2
P start point : [1, 2]
N start point : [2, 3]
Is dummy need : False
P dummy count : 0
N dummy count : 0
P euler path candidates : [[2, 1, 0, 1], [1, 0, 1, 2], [2, 1, 0, 1], [1, 0, 1, 2]]
N euler path candidates : [[3, 1, 0, 2], [2, 0, 1, 3], [3, 1, 0, 2], [2, 0, 1, 3]]
P loop is : True
P loop number : [[1], [1]]
P loop count : [[2], [2]]
P loop point : [[[1, 3]], [[0, 2]]]
N loop is : False
N loop number : [[], []]
N loop count : [[], []]
N loop point : []
P poly ordering : [['Z_neg', 'A2', 'A1'], ['A2', 'A1', 'Z_neg'], ['Z_neg', 'A1', 'A2'], ['A1', 'A2', 'Z_neg']]
N poly ordering : [['Z_neg', 'A2', 'A1'], ['A1', 'A2', 'Z_neg'], ['Z_neg', 'A2', 'A1'], ['A1', 'A2', 'Z_neg']]
Poly ordering : [['Z_neg', 'A2', 'A1'], ['A1', 'A2', 'Z_neg']]
P diffusion chain : [['Z', 'VDD', 'Z_neg', 'VDD'], ['VDD', 'Z_neg', 'VDD', 'Z']]
N diffusion chain : [['Z', 'VSS', 'net_0', 'Z_neg'], ['Z_neg', 'net_0', 'VSS', 'Z']]
Diffusion sharing : [1, 1]
P Diffusion weight : [8, 8]
N Diffusion weight : [6, 6]
Total diffusion weight : [13, 13]
END

Cell Name : AND3_X1
P Vertex : ['Z_neg', 'VDD', 'Z']
N Vertex : ['net_1', 'VSS', 'net_0', 'Z_neg', 'Z']
Edge : ['A3', 'A2', 'A1', 'Z_neg']
Tr_info : [[['Z_neg', 'A3', 'VDD'], ['VDD', 'A2', 'Z_neg'], ['Z_neg', 'A1', 'VDD'], ['Z', 'Z_neg', 'VDD']], [['net_1', 'A3', 'VSS'], ['net_0', 'A2', 'net_1'], ['Z_neg', 'A1', 'net_0'], ['Z', 'Z_neg', 'VSS']]]
P matrix = [[0, 3, 0], [3, 0, 1], [0, 1, 0]]
N matrix = [[0, 1, 1, 0, 0], [1, 0, 0, 0, 1], [1, 0, 0, 1, 0], [0, 0, 1, 0, 0], [0, 1, 0, 0, 0]]
P odd degree count : 2
N odd degree count : 2
P start point : [0, 2]
N start point : [3, 4]
Is dummy need : False
P dummy count : 0
N dummy count : 0
P euler path candidates : [[2, 1, 0, 1, 0], [0, 1, 0, 1, 2], [2, 1, 0, 1, 0], [0, 1, 0, 1, 2]]
N euler path candidates : [[4, 1, 0, 2, 3], [3, 2, 0, 1, 4], [4, 1, 0, 2, 3], [3, 2, 0, 1, 4]]
P loop is : True
P loop number : [[1, 0], [0, 1]]
P loop count : [[2, 2], [2, 2]]
P loop point : [[[1, 3], [2, 4]], [[0, 2], [1, 3]]]
N loop is : False
N loop number : [[], []]
N loop count : [[], []]
N loop point : []
P poly ordering : [['Z_neg', 'A3', 'A2', 'A1'], ['A3', 'A2', 'A1', 'Z_neg'], ['Z_neg', 'A1', 'A2', 'A3'], ['A1', 'A2', 'A3', 'Z_neg']]
N poly ordering : [['Z_neg', 'A3', 'A2', 'A1'], ['A1', 'A2', 'A3', 'Z_neg'], ['Z_neg', 'A3', 'A2', 'A1'], ['A1', 'A2', 'A3', 'Z_neg']]
Poly ordering : [['Z_neg', 'A3', 'A2', 'A1'], ['A1', 'A2', 'A3', 'Z_neg']]
P diffusion chain : [['Z', 'VDD', 'Z_neg', 'VDD', 'Z_neg'], ['Z_neg', 'VDD', 'Z_neg', 'VDD', 'Z']]
N diffusion chain : [['Z', 'VSS', 'net_1', 'net_0', 'Z_neg'], ['Z_neg', 'net_0', 'net_1', 'VSS', 'Z']]
Diffusion sharing : [2, 2]
P Diffusion weight : [11, 11]
N Diffusion weight : [7, 7]
Total diffusion weight : [16, 16]
END

Cell Name : AND4_X1
P Vertex : ['Z_neg', 'VDD', 'Z']
N Vertex : ['net_2', 'VSS', 'net_1', 'net_0', 'Z_neg', 'Z']
Edge : ['A4', 'A3', 'A2', 'A1', 'Z_neg']
Tr_info : [[['Z_neg', 'A4', 'VDD'], ['VDD', 'A3', 'Z_neg'], ['Z_neg', 'A2', 'VDD'], ['VDD', 'A1', 'Z_neg'], ['Z', 'Z_neg', 'VDD']], [['net_2', 'A4', 'VSS'], ['net_1', 'A3', 'net_2'], ['net_0', 'A2', 'net_1'], ['Z_neg', 'A1', 'net_0'], ['Z', 'Z_neg', 'VSS']]]
P matrix = [[0, 4, 0], [4, 0, 1], [0, 1, 0]]
N matrix = [[0, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0], [0, 0, 1, 0, 1, 0], [0, 0, 0, 1, 0, 0], [0, 1, 0, 0, 0, 0]]
P odd degree count : 2
N odd degree count : 2
P start point : [1, 2]
N start point : [4, 5]
Is dummy need : False
P dummy count : 0
N dummy count : 0
P euler path candidates : [[2, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 2], [2, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 2], [2, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 2], [2, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 2]]
N euler path candidates : [[5, 1, 0, 2, 3, 4], [4, 3, 2, 0, 1, 5], [5, 1, 0, 2, 3, 4], [4, 3, 2, 0, 1, 5]]
P loop is : True
P loop number : [[1, 0], [1, 0]]
P loop count : [[3, 2], [3, 2]]
P loop point : [[[1, 3, 5], [2, 4]], [[0, 2, 4], [1, 3]]]
N loop is : False
N loop number : [[], []]
N loop count : [[], []]
N loop point : []
P poly ordering : [['Z_neg', 'A4', 'A3', 'A2', 'A1'], ['A4', 'A3', 'A2', 'A1', 'Z_neg'], ['Z_neg', 'A4', 'A3', 'A2', 'A1'], ['A4', 'A3', 'A2', 'A1', 'Z_neg'], ['Z_neg', 'A1', 'A2', 'A3', 'A4'], ['A1', 'A2', 'A3', 'A4', 'Z_neg'], ['Z_neg', 'A1', 'A2', 'A3', 'A4'], ['A1', 'A2', 'A3', 'A4', 'Z_neg']]
N poly ordering : [['Z_neg', 'A4', 'A3', 'A2', 'A1'], ['A1', 'A2', 'A3', 'A4', 'Z_neg'], ['Z_neg', 'A4', 'A3', 'A2', 'A1'], ['A1', 'A2', 'A3', 'A4', 'Z_neg']]
Poly ordering : [['Z_neg', 'A4', 'A3', 'A2', 'A1'], ['A1', 'A2', 'A3', 'A4', 'Z_neg']]
P diffusion chain : [['Z', 'VDD', 'Z_neg', 'VDD', 'Z_neg', 'VDD'], ['VDD', 'Z_neg', 'VDD', 'Z_neg', 'VDD', 'Z']]
N diffusion chain : [['Z', 'VSS', 'net_2', 'net_1', 'net_0', 'Z_neg'], ['Z_neg', 'net_0', 'net_1', 'net_2', 'VSS', 'Z']]
Diffusion sharing : [1, 1]
P Diffusion weight : [12, 12]
N Diffusion weight : [8, 8]
Total diffusion weight : [19, 19]
END

Cell Name : AOI21_X1
P Vertex : ['ZN', 'net_1', 'VDD']
N Vertex : ['net_0', 'VSS', 'ZN']
Edge : ['A2', 'A1', 'B']
Tr_info : [[['ZN', 'A2', 'net_1'], ['net_1', 'A1', 'ZN'], ['VDD', 'B', 'net_1']], [['net_0', 'A2', 'VSS'], ['ZN', 'A1', 'net_0'], ['VSS', 'B', 'ZN']]]
P matrix = [[0, 2, 0], [2, 0, 1], [0, 1, 0]]
N matrix = [[0, 1, 1], [1, 0, 1], [1, 1, 0]]
P odd degree count : 2
N odd degree count : 0
P start point : [1, 2]
N start point : [0, 1, 2]
Is dummy need : False
P dummy count : 0
N dummy count : 0
P euler path candidates : [[2, 1, 0, 1], [1, 0, 1, 2], [2, 1, 0, 1], [1, 0, 1, 2]]
N euler path candidates : [[0, 2, 1, 0], [1, 2, 0, 1], [2, 1, 0, 2], [0, 1, 2, 0], [1, 0, 2, 1], [2, 0, 1, 2], [0, 2, 1, 0], [1, 2, 0, 1], [2, 1, 0, 2], [0, 1, 2, 0], [1, 0, 2, 1], [2, 0, 1, 2]]
P loop is : True
P loop number : [[1], [1]]
P loop count : [[2], [2]]
P loop point : [[[1, 3]], [[0, 2]]]
N loop is : True
N loop number : [[0], [1], [2]]
N loop count : [[2], [2], [2]]
N loop point : [[[0, 3]], [[0, 3]], [[0, 3]]]
P poly ordering : [['B', 'A2', 'A1'], ['A2', 'A1', 'B'], ['B', 'A1', 'A2'], ['A1', 'A2', 'B']]
N poly ordering : [['A1', 'B', 'A2'], ['B', 'A1', 'A2'], ['B', 'A2', 'A1'], ['A2', 'B', 'A1'], ['A2', 'A1', 'B'], ['A1', 'A2', 'B'], ['A1', 'B', 'A2'], ['B', 'A1', 'A2'], ['B', 'A2', 'A1'], ['A2', 'B', 'A1'], ['A2', 'A1', 'B'], ['A1', 'A2', 'B']]
Poly ordering : [['B', 'A2', 'A1'], ['A1', 'A2', 'B'], ['B', 'A1', 'A2'], ['A2', 'A1', 'B']]
P diffusion chain : [['VDD', 'net_1', 'ZN', 'net_1'], ['net_1', 'ZN', 'net_1', 'VDD'], ['VDD', 'net_1', 'ZN', 'net_1'], ['net_1', 'ZN', 'net_1', 'VDD']]
N diffusion chain : [['ZN', 'VSS', 'net_0', 'ZN'], ['ZN', 'net_0', 'VSS', 'ZN'], ['VSS', 'ZN', 'net_0', 'VSS'], ['VSS', 'net_0', 'ZN', 'VSS']]
Diffusion sharing : [0, 0, 0, 0]
P Diffusion weight : [10, 10, 10, 10]
N Diffusion weight : [6, 6, 8, 8]
Total diffusion weight : [16, 16, 18, 18]
END

Cell Name : AOI22_X1
P Vertex : ['net_2', 'VDD', 'ZN']
N Vertex : ['net_1', 'VSS', 'ZN', 'net_0']
Edge : ['B2', 'B1', 'A1', 'A2']
Tr_info : [[['net_2', 'B2', 'VDD'], ['VDD', 'B1', 'net_2'], ['ZN', 'A1', 'net_2'], ['net_2', 'A2', 'ZN']], [['net_1', 'B2', 'VSS'], ['ZN', 'B1', 'net_1'], ['net_0', 'A1', 'ZN'], ['VSS', 'A2', 'net_0']]]
P matrix = [[0, 2, 2], [2, 0, 0], [2, 0, 0]]
N matrix = [[0, 1, 1, 0], [1, 0, 0, 1], [1, 0, 0, 1], [0, 1, 1, 0]]
P odd degree count : 0
N odd degree count : 0
P start point : [0, 1, 2]
N start point : [0, 1, 2, 3]
Is dummy need : False
P dummy count : 0
N dummy count : 0
P euler path candidates : [[0, 2, 0, 1, 0], [1, 0, 2, 0, 1], [2, 0, 1, 0, 2], [0, 1, 0, 2, 0], [1, 0, 2, 0, 1], [2, 0, 1, 0, 2], [0, 2, 0, 1, 0], [1, 0, 2, 0, 1], [2, 0, 1, 0, 2], [0, 1, 0, 2, 0], [1, 0, 2, 0, 1], [2, 0, 1, 0, 2]]
N euler path candidates : [[0, 2, 3, 1, 0], [1, 3, 2, 0, 1], [2, 3, 1, 0, 2], [3, 2, 0, 1, 3], [0, 1, 3, 2, 0], [1, 0, 2, 3, 1], [2, 0, 1, 3, 2], [3, 1, 0, 2, 3], [0, 2, 3, 1, 0], [1, 3, 2, 0, 1], [2, 3, 1, 0, 2], [3, 2, 0, 1, 3], [0, 1, 3, 2, 0], [1, 0, 2, 3, 1], [2, 0, 1, 3, 2], [3, 1, 0, 2, 3]]
P loop is : True
P loop number : [[0], [1, 0], [2, 0]]
P loop count : [[3], [2, 2], [2, 2]]
P loop point : [[[0, 2, 4]], [[0, 4], [1, 3]], [[0, 4], [1, 3]]]
N loop is : True
N loop number : [[0], [1], [2], [3]]
N loop count : [[2], [2], [2], [2]]
N loop point : [[[0, 4]], [[0, 4]], [[0, 4]], [[0, 4]]]
P poly ordering : [['A1', 'A2', 'B2', 'B1'], ['B2', 'A1', 'A2', 'B1'], ['A1', 'B2', 'B1', 'A2'], ['B2', 'B1', 'A1', 'A2'], ['B2', 'A1', 'A2', 'B1'], ['A1', 'B2', 'B1', 'A2'], ['A2', 'A1', 'B1', 'B2'], ['B1', 'A2', 'A1', 'B2'], ['A2', 'B1', 'B2', 'A1'], ['B1', 'B2', 'A2', 'A1'], ['B1', 'A2', 'A1', 'B2'], ['A2', 'B1', 'B2', 'A1']]
N poly ordering : [['B1', 'A1', 'A2', 'B2'], ['A2', 'A1', 'B1', 'B2'], ['A1', 'A2', 'B2', 'B1'], ['A1', 'B1', 'B2', 'A2'], ['B2', 'A2', 'A1', 'B1'], ['B2', 'B1', 'A1', 'A2'], ['B1', 'B2', 'A2', 'A1'], ['A2', 'B2', 'B1', 'A1'], ['B1', 'A1', 'A2', 'B2'], ['A2', 'A1', 'B1', 'B2'], ['A1', 'A2', 'B2', 'B1'], ['A1', 'B1', 'B2', 'A2'], ['B2', 'A2', 'A1', 'B1'], ['B2', 'B1', 'A1', 'A2'], ['B1', 'B2', 'A2', 'A1'], ['A2', 'B2', 'B1', 'A1']]
Poly ordering : [['A1', 'A2', 'B2', 'B1'], ['B1', 'B2', 'A2', 'A1'], ['A2', 'A1', 'B1', 'B2'], ['B2', 'B1', 'A1', 'A2']]
P diffusion chain : [['net_2', 'ZN', 'net_2', 'VDD', 'net_2'], ['net_2', 'VDD', 'net_2', 'ZN', 'net_2'], ['net_2', 'ZN', 'net_2', 'VDD', 'net_2'], ['net_2', 'VDD', 'net_2', 'ZN', 'net_2']]
N diffusion chain : [['ZN', 'net_0', 'VSS', 'net_1', 'ZN'], ['ZN', 'net_1', 'VSS', 'net_0', 'ZN'], ['VSS', 'net_0', 'ZN', 'net_1', 'VSS'], ['VSS', 'net_1', 'ZN', 'net_0', 'VSS']]
Diffusion sharing : [0, 0, 0, 0]
P Diffusion weight : [13, 13, 13, 13]
N Diffusion weight : [7, 7, 9, 9]
Total diffusion weight : [20, 20, 22, 22]
END

Cell Name : BUF_X1
P Vertex : ['Z_neg', 'VDD', 'Z']
N Vertex : ['Z_neg', 'VSS', 'Z']
Edge : ['I', 'Z_neg']
Tr_info : [[['Z_neg', 'I', 'VDD'], ['VDD', 'Z_neg', 'Z']], [['Z_neg', 'I', 'VSS'], ['VSS', 'Z_neg', 'Z']]]
P matrix = [[0, 1, 0], [1, 0, 1], [0, 1, 0]]
N matrix = [[0, 1, 0], [1, 0, 1], [0, 1, 0]]
P odd degree count : 2
N odd degree count : 2
P start point : [0, 2]
N start point : [0, 2]
Is dummy need : False
P dummy count : 0
N dummy count : 0
P euler path candidates : [[2, 1, 0], [0, 1, 2], [2, 1, 0], [0, 1, 2]]
N euler path candidates : [[2, 1, 0], [0, 1, 2], [2, 1, 0], [0, 1, 2]]
P loop is : False
P loop number : [[], []]
P loop count : [[], []]
P loop point : []
N loop is : False
N loop number : [[], []]
N loop count : [[], []]
N loop point : []
P poly ordering : [['Z_neg', 'I'], ['I', 'Z_neg'], ['Z_neg', 'I'], ['I', 'Z_neg']]
N poly ordering : [['Z_neg', 'I'], ['I', 'Z_neg'], ['Z_neg', 'I'], ['I', 'Z_neg']]
Poly ordering : [['Z_neg', 'I'], ['I', 'Z_neg']]
P diffusion chain : [['Z', 'VDD', 'Z_neg'], ['Z_neg', 'VDD', 'Z']]
N diffusion chain : [['Z', 'VSS', 'Z_neg'], ['Z_neg', 'VSS', 'Z']]
Diffusion sharing : [2, 2]
P Diffusion weight : [7, 7]
N Diffusion weight : [5, 5]
Total diffusion weight : [10, 10]
END

Cell Name : CLKBUF_X1
P Vertex : ['Z_neg', 'VDD', 'Z']
N Vertex : ['Z_neg', 'VSS', 'Z']
Edge : ['I', 'Z_neg']
Tr_info : [[['Z_neg', 'I', 'VDD'], ['VDD', 'Z_neg', 'Z']], [['Z_neg', 'I', 'VSS'], ['VSS', 'Z_neg', 'Z']]]
P matrix = [[0, 1, 0], [1, 0, 1], [0, 1, 0]]
N matrix = [[0, 1, 0], [1, 0, 1], [0, 1, 0]]
P odd degree count : 2
N odd degree count : 2
P start point : [0, 2]
N start point : [0, 2]
Is dummy need : False
P dummy count : 0
N dummy count : 0
P euler path candidates : [[2, 1, 0], [0, 1, 2], [2, 1, 0], [0, 1, 2]]
N euler path candidates : [[2, 1, 0], [0, 1, 2], [2, 1, 0], [0, 1, 2]]
P loop is : False
P loop number : [[], []]
P loop count : [[], []]
P loop point : []
N loop is : False
N loop number : [[], []]
N loop count : [[], []]
N loop point : []
P poly ordering : [['Z_neg', 'I'], ['I', 'Z_neg'], ['Z_neg', 'I'], ['I', 'Z_neg']]
N poly ordering : [['Z_neg', 'I'], ['I', 'Z_neg'], ['Z_neg', 'I'], ['I', 'Z_neg']]
Poly ordering : [['Z_neg', 'I'], ['I', 'Z_neg']]
P diffusion chain : [['Z', 'VDD', 'Z_neg'], ['Z_neg', 'VDD', 'Z']]
N diffusion chain : [['Z', 'VSS', 'Z_neg'], ['Z_neg', 'VSS', 'Z']]
Diffusion sharing : [2, 2]
P Diffusion weight : [7, 7]
N Diffusion weight : [5, 5]
Total diffusion weight : [10, 10]
END

Cell Name : DFFRNQ_X1
P Vertex : ['VDD', 'ncki', 'cki', 'net10', 'net1', 'net9', 'net2', 'net8', 'net11', 'net4', 'Q']
N Vertex : ['VSS', 'ncki', 'cki', 'net10', 'net1', 'net15', 'net12', 'net2', 'net8', 'net11', 'net0', 'net4', 'Q']
Edge : ['CLK', 'ncki', 'D', 'cki', 'net2', 'RN', 'net1', 'net4', 'net8']
Tr_info : [[['VDD', 'CLK', 'ncki'], ['cki', 'ncki', 'VDD'], ['net10', 'D', 'VDD'], ['net1', 'cki', 'net10'], ['net9', 'ncki', 'net1'], ['VDD', 'net2', 'net9'], ['net9', 'RN', 'VDD'], ['net2', 'net1', 'VDD'], ['net8', 'ncki', 'net2'], ['net11', 'cki', 'net8'], ['VDD', 'net4', 'net11'], ['net4', 'RN', 'VDD'], ['VDD', 'net8', 'net4'], ['VDD', 'net4', 'Q']], [['VSS', 'CLK', 'ncki'], ['cki', 'ncki', 'VSS'], ['net10', 'D', 'VSS'], ['net1', 'ncki', 'net10'], ['net15', 'cki', 'net1'], ['net12', 'net2', 'net15'], ['VSS', 'RN', 'net12'], ['net2', 'net1', 'VSS'], ['net8', 'cki', 'net2'], ['net11', 'ncki', 'net8'], ['VSS', 'net4', 'net11'], ['net0', 'RN', 'VSS'], ['net4', 'net8', 'net0'], ['VSS', 'net4', 'Q']]]
P matrix = [[0, 1, 1, 1, 0, 2, 1, 0, 1, 2, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0], [2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0], [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]
N matrix = [[0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]
P odd degree count : 4
N odd degree count : 4
P start point : [1, 2, 5, 10]
N start point : [1, 2, 11, 12]
Is dummy need : True
P dummy count : 0
N dummy count : 0
P euler path candidates : []
N euler path candidates : []
P loop is : False
P loop number : []
P loop count : []
P loop point : []
N loop is : False
N loop number : []
N loop count : []
N loop point : []
P poly ordering : []
N poly ordering : []
Poly ordering : []
P diffusion chain : []
N diffusion chain : []
Diffusion sharing : []
P Diffusion weight : []
N Diffusion weight : []
Total diffusion weight : []
END

Cell Name : DFFSNQ_X1
P Vertex : ['VDD', 'ncki', 'cki', 'net10', 'net1', 'net9', 'net2', 'net8', 'net_2', 'net4', 'Q']
N Vertex : ['VSS', 'ncki', 'cki', 'net10', 'net1', 'net15', 'net_0', 'net2', 'net8', 'net_3', 'net_1', 'net4', 'Q']
Edge : ['CLK', 'ncki', 'D', 'cki', 'net2', 'SN', 'net1', 'net4', 'net8']
Tr_info : [[['VDD', 'CLK', 'ncki'], ['cki', 'ncki', 'VDD'], ['net10', 'D', 'VDD'], ['net1', 'cki', 'net10'], ['net9', 'ncki', 'net1'], ['VDD', 'net2', 'net9'], ['net2', 'SN', 'VDD'], ['net2', 'net1', 'VDD'], ['net8', 'ncki', 'net2'], ['net_2', 'cki', 'net8'], ['VDD', 'net4', 'net_2'], ['net_2', 'SN', 'VDD'], ['VDD', 'net8', 'net4'], ['VDD', 'net4', 'Q']], [['VSS', 'CLK', 'ncki'], ['cki', 'ncki', 'VSS'], ['net10', 'D', 'VSS'], ['net1', 'ncki', 'net10'], ['net15', 'cki', 'net1'], ['VSS', 'net2', 'net15'], ['net_0', 'SN', 'VSS'], ['net2', 'net1', 'net_0'], ['net8', 'cki', 'net2'], ['net_3', 'ncki', 'net8'], ['net_1', 'net4', 'net_3'], ['VSS', 'SN', 'net_1'], ['net4', 'net8', 'VSS'], ['VSS', 'net4', 'Q']]]
P matrix = [[0, 1, 1, 1, 0, 1, 2, 0, 2, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0], [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0], [2, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0], [2, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]
N matrix = [[0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]
P odd degree count : 6
N odd degree count : 4
P start point : [1, 2, 6, 8, 9, 10]
N start point : [1, 2, 11, 12]
Is dummy need : True
P dummy count : 0
N dummy count : 0
P euler path candidates : []
N euler path candidates : []
P loop is : False
P loop number : []
P loop count : []
P loop point : []
N loop is : False
N loop number : []
N loop count : []
N loop point : []
P poly ordering : []
N poly ordering : []
Poly ordering : []
P diffusion chain : []
N diffusion chain : []
Diffusion sharing : []
P Diffusion weight : []
N Diffusion weight : []
Total diffusion weight : []
END

Cell Name : FA_X1
P Vertex : ['net31', 'VDD', 'net29', 'net9', 'net3', 'S', 'net1', 'net7', 'net19', 'CO']
N Vertex : ['net49', 'VSS', 'net47', 'net9', 'net42', 'S', 'net5', 'net7', 'net36', 'CO']
Edge : ['A', 'B', 'CI', 'net7', 'net9']
Tr_info : [[['net31', 'A', 'VDD'], ['net29', 'B', 'net31'], ['net9', 'CI', 'net29'], ['net3', 'net7', 'net9'], ['VDD', 'A', 'net3'], ['net3', 'B', 'VDD'], ['VDD', 'CI', 'net3'], ['S', 'net9', 'VDD'], ['VDD', 'B', 'net1'], ['net1', 'A', 'VDD'], ['net7', 'CI', 'net1'], ['net19', 'B', 'net7'], ['VDD', 'A', 'net19'], ['CO', 'net7', 'VDD']], [['net49', 'A', 'VSS'], ['net47', 'B', 'net49'], ['net9', 'CI', 'net47'], ['net42', 'net7', 'net9'], ['VSS', 'A', 'net42'], ['net42', 'B', 'VSS'], ['VSS', 'CI', 'net42'], ['S', 'net9', 'VSS'], ['VSS', 'B', 'net5'], ['net5', 'A', 'VSS'], ['net7', 'CI', 'net5'], ['net36', 'B', 'net7'], ['VSS', 'A', 'net36'], ['CO', 'net7', 'VSS']]]
P matrix = [[0, 1, 1, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 3, 1, 2, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0], [0, 3, 0, 1, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 2, 0, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0]]
N matrix = [[0, 1, 1, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 3, 1, 2, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0], [0, 3, 0, 1, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 2, 0, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0]]
P odd degree count : 4
N odd degree count : 4
P start point : [1, 5, 6, 9]
N start point : [1, 5, 6, 9]
Is dummy need : True
P dummy count : 0
N dummy count : 0
P euler path candidates : []
N euler path candidates : []
P loop is : False
P loop number : []
P loop count : []
P loop point : []
N loop is : False
N loop number : []
N loop count : []
N loop point : []
P poly ordering : []
N poly ordering : []
Poly ordering : []
P diffusion chain : []
N diffusion chain : []
Diffusion sharing : []
P Diffusion weight : []
N Diffusion weight : []
Total diffusion weight : []
END

Cell Name : HA_X1
P Vertex : ['CO', 'VDD', 'NCO', 'net_2', 'NS', 'S']
N Vertex : ['CO', 'VSS', 'net_0', 'NCO', 'NS', 'net_1', 'S']
Edge : ['NCO', 'A', 'B', 'NS']
Tr_info : [[['CO', 'NCO', 'VDD'], ['NCO', 'A', 'VDD'], ['VDD', 'B', 'NCO'], ['net_2', 'B', 'VDD'], ['NS', 'A', 'net_2'], ['VDD', 'NCO', 'NS'], ['VDD', 'NS', 'S']], [['CO', 'NCO', 'VSS'], ['net_0', 'A', 'VSS'], ['NCO', 'B', 'net_0'], ['NS', 'B', 'net_1'], ['net_1', 'A', 'NS'], ['VSS', 'NCO', 'net_1'], ['VSS', 'NS', 'S']]]
P matrix = [[0, 1, 0, 0, 0, 0], [1, 0, 2, 1, 1, 1], [0, 2, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0], [0, 1, 0, 1, 0, 0], [0, 1, 0, 0, 0, 0]]
N matrix = [[0, 1, 0, 0, 0, 0, 0], [1, 0, 1, 0, 0, 1, 1], [0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 2, 0], [0, 1, 0, 0, 2, 0, 0], [0, 1, 0, 0, 0, 0, 0]]
P odd degree count : 2
N odd degree count : 4
P start point : [0, 5]
N start point : [0, 3, 5, 6]
Is dummy need : True
P dummy count : 0
N dummy count : 0
P euler path candidates : []
N euler path candidates : []
P loop is : False
P loop number : []
P loop count : []
P loop point : []
N loop is : False
N loop number : []
N loop count : []
N loop point : []
P poly ordering : []
N poly ordering : []
Poly ordering : []
P diffusion chain : []
N diffusion chain : []
Diffusion sharing : []
P Diffusion weight : []
N Diffusion weight : []
Total diffusion weight : []
END

Cell Name : INV_X1
P Vertex : ['ZN', 'VDD']
N Vertex : ['ZN', 'VSS']
Edge : ['I']
Tr_info : [[['ZN', 'I', 'VDD']], [['ZN', 'I', 'VSS']]]
P matrix = [[0, 1], [1, 0]]
N matrix = [[0, 1], [1, 0]]
P odd degree count : 2
N odd degree count : 2
P start point : [0, 1]
N start point : [0, 1]
Is dummy need : False
P dummy count : 0
N dummy count : 0
P euler path candidates : [[1, 0], [0, 1], [1, 0], [0, 1]]
N euler path candidates : [[1, 0], [0, 1], [1, 0], [0, 1]]
P loop is : False
P loop number : [[], []]
P loop count : [[], []]
P loop point : []
N loop is : False
N loop number : [[], []]
N loop count : [[], []]
N loop point : []
P poly ordering : [['I'], ['I'], ['I'], ['I']]
N poly ordering : [['I'], ['I'], ['I'], ['I']]
Poly ordering : [['I'], ['I']]
P diffusion chain : [['VDD', 'ZN'], ['ZN', 'VDD']]
N diffusion chain : [['VSS', 'ZN'], ['ZN', 'VSS']]
Diffusion sharing : [1, 1]
P Diffusion weight : [4, 4]
N Diffusion weight : [4, 4]
Total diffusion weight : [7, 7]
END

Cell Name : LHQ_X1
P Vertex : ['net4', 'VDD', 'net7', 'net1', 'net5', 'net0', 'net6', 'Q']
N Vertex : ['net4', 'VSS', 'net7', 'net3', 'net5', 'net2', 'net6', 'Q']
Edge : ['E', 'net4', 'D', 'net7', 'net6', 'net5']
Tr_info : [[['net4', 'E', 'VDD'], ['net7', 'net4', 'VDD'], ['net1', 'D', 'VDD'], ['net5', 'net4', 'net1'], ['net0', 'net7', 'net5'], ['VDD', 'net6', 'net0'], ['net6', 'net5', 'VDD'], ['Q', 'net5', 'VDD']], [['net4', 'E', 'VSS'], ['net7', 'net4', 'VSS'], ['net3', 'D', 'VSS'], ['net5', 'net7', 'net3'], ['net2', 'net4', 'net5'], ['VSS', 'net6', 'net2'], ['net6', 'net5', 'VSS'], ['Q', 'net5', 'VSS']]]
P matrix = [[0, 1, 0, 0, 0, 0, 0, 0], [1, 0, 1, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 1, 0, 0], [0, 1, 0, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0]]
N matrix = [[0, 1, 0, 0, 0, 0, 0, 0], [1, 0, 1, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 1, 0, 0], [0, 1, 0, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0]]
P odd degree count : 4
N odd degree count : 4
P start point : [0, 2, 6, 7]
N start point : [0, 2, 6, 7]
Is dummy need : True
P dummy count : 0
N dummy count : 0
P euler path candidates : []
N euler path candidates : []
P loop is : False
P loop number : []
P loop count : []
P loop point : []
N loop is : False
N loop number : []
N loop count : []
N loop point : []
P poly ordering : []
N poly ordering : []
Poly ordering : []
P diffusion chain : []
N diffusion chain : []
Diffusion sharing : []
P Diffusion weight : []
N Diffusion weight : []
Total diffusion weight : []
END

Cell Name : MUX2_X1
P Vertex : ['sel1_n', 'VDD', 'net_0', 'int04', 'net_2', 'Z']
N Vertex : ['sel1_n', 'VSS', 'net_1', 'int04', 'net_3', 'Z']
Edge : ['S', 'I1', 'sel1_n', 'I0', 'int04']
Tr_info : [[['sel1_n', 'S', 'VDD'], ['net_0', 'I1', 'VDD'], ['int04', 'sel1_n', 'net_0'], ['net_2', 'S', 'int04'], ['VDD', 'I0', 'net_2'], ['VDD', 'int04', 'Z']], [['sel1_n', 'S', 'VSS'], ['net_1', 'I1', 'VSS'], ['int04', 'S', 'net_1'], ['net_3', 'sel1_n', 'int04'], ['VSS', 'I0', 'net_3'], ['VSS', 'int04', 'Z']]]
P matrix = [[0, 1, 0, 0, 0, 0], [1, 0, 1, 0, 1, 1], [0, 1, 0, 1, 0, 0], [0, 0, 1, 0, 1, 0], [0, 1, 0, 1, 0, 0], [0, 1, 0, 0, 0, 0]]
N matrix = [[0, 1, 0, 0, 0, 0], [1, 0, 1, 0, 1, 1], [0, 1, 0, 1, 0, 0], [0, 0, 1, 0, 1, 0], [0, 1, 0, 1, 0, 0], [0, 1, 0, 0, 0, 0]]
P odd degree count : 2
N odd degree count : 2
P start point : [0, 5]
N start point : [0, 5]
Is dummy need : False
P dummy count : 0
N dummy count : 0
P euler path candidates : [[5, 1, 4, 3, 2, 1, 0], [0, 1, 4, 3, 2, 1, 5], [5, 1, 2, 3, 4, 1, 0], [0, 1, 2, 3, 4, 1, 5], [5, 1, 4, 3, 2, 1, 0], [0, 1, 4, 3, 2, 1, 5], [5, 1, 2, 3, 4, 1, 0], [0, 1, 2, 3, 4, 1, 5]]
N euler path candidates : [[5, 1, 4, 3, 2, 1, 0], [0, 1, 4, 3, 2, 1, 5], [5, 1, 2, 3, 4, 1, 0], [0, 1, 2, 3, 4, 1, 5], [5, 1, 4, 3, 2, 1, 0], [0, 1, 4, 3, 2, 1, 5], [5, 1, 2, 3, 4, 1, 0], [0, 1, 2, 3, 4, 1, 5]]
P loop is : True
P loop number : [[1], [1]]
P loop count : [[2], [2]]
P loop point : [[[1, 5]], [[1, 5]]]
N loop is : True
N loop number : [[1], [1]]
N loop count : [[2], [2]]
N loop point : [[[1, 5]], [[1, 5]]]
P poly ordering : [['int04', 'I0', 'S', 'sel1_n', 'I1', 'S'], ['S', 'I0', 'S', 'sel1_n', 'I1', 'int04'], ['int04', 'I1', 'sel1_n', 'S', 'I0', 'S'], ['S', 'I1', 'sel1_n', 'S', 'I0', 'int04'], ['int04', 'I0', 'S', 'sel1_n', 'I1', 'S'], ['S', 'I0', 'S', 'sel1_n', 'I1', 'int04'], ['int04', 'I1', 'sel1_n', 'S', 'I0', 'S'], ['S', 'I1', 'sel1_n', 'S', 'I0', 'int04']]
N poly ordering : [['int04', 'I0', 'sel1_n', 'S', 'I1', 'S'], ['S', 'I0', 'sel1_n', 'S', 'I1', 'int04'], ['int04', 'I1', 'S', 'sel1_n', 'I0', 'S'], ['S', 'I1', 'S', 'sel1_n', 'I0', 'int04'], ['int04', 'I0', 'sel1_n', 'S', 'I1', 'S'], ['S', 'I0', 'sel1_n', 'S', 'I1', 'int04'], ['int04', 'I1', 'S', 'sel1_n', 'I0', 'S'], ['S', 'I1', 'S', 'sel1_n', 'I0', 'int04']]
Poly ordering : []
P diffusion chain : []
N diffusion chain : []
Diffusion sharing : []
P Diffusion weight : []
N Diffusion weight : []
Total diffusion weight : []
END

Cell Name : NAND2_X1
P Vertex : ['ZN', 'VDD']
N Vertex : ['net_0', 'VSS', 'ZN']
Edge : ['A2', 'A1']
Tr_info : [[['ZN', 'A2', 'VDD'], ['VDD', 'A1', 'ZN']], [['net_0', 'A2', 'VSS'], ['ZN', 'A1', 'net_0']]]
P matrix = [[0, 2], [2, 0]]
N matrix = [[0, 1, 1], [1, 0, 0], [1, 0, 0]]
P odd degree count : 0
N odd degree count : 2
P start point : [0, 1]
N start point : [1, 2]
Is dummy need : False
P dummy count : 0
N dummy count : 0
P euler path candidates : [[0, 1, 0], [1, 0, 1], [0, 1, 0], [1, 0, 1]]
N euler path candidates : [[2, 0, 1], [1, 0, 2], [2, 0, 1], [1, 0, 2]]
P loop is : True
P loop number : [[0], [1]]
P loop count : [[2], [2]]
P loop point : [[[0, 2]], [[0, 2]]]
N loop is : False
N loop number : [[], []]
N loop count : [[], []]
N loop point : []
P poly ordering : [['A2', 'A1'], ['A2', 'A1'], ['A1', 'A2'], ['A1', 'A2']]
N poly ordering : [['A1', 'A2'], ['A2', 'A1'], ['A1', 'A2'], ['A2', 'A1']]
Poly ordering : [['A1', 'A2'], ['A2', 'A1'], ['A1', 'A2']]
P diffusion chain : [['ZN', 'VDD', 'ZN'], ['ZN', 'VDD', 'ZN'], ['VDD', 'ZN', 'VDD']]
N diffusion chain : [['ZN', 'net_0', 'VSS'], ['VSS', 'net_0', 'ZN'], ['ZN', 'net_0', 'VSS']]
Diffusion sharing : [1, 1, 0]
P Diffusion weight : [7, 7, 5]
N Diffusion weight : [5, 5, 5]
Total diffusion weight : [11, 11, 10]
END

Cell Name : NAND3_X1
P Vertex : ['ZN', 'VDD']
N Vertex : ['net_1', 'VSS', 'net_0', 'ZN']
Edge : ['A3', 'A2', 'A1']
Tr_info : [[['ZN', 'A3', 'VDD'], ['VDD', 'A2', 'ZN'], ['ZN', 'A1', 'VDD']], [['net_1', 'A3', 'VSS'], ['net_0', 'A2', 'net_1'], ['ZN', 'A1', 'net_0']]]
P matrix = [[0, 3], [3, 0]]
N matrix = [[0, 1, 1, 0], [1, 0, 0, 0], [1, 0, 0, 1], [0, 0, 1, 0]]
P odd degree count : 2
N odd degree count : 2
P start point : [0, 1]
N start point : [1, 3]
Is dummy need : False
P dummy count : 0
N dummy count : 0
P euler path candidates : [[1, 0, 1, 0], [0, 1, 0, 1], [1, 0, 1, 0], [0, 1, 0, 1]]
N euler path candidates : [[3, 2, 0, 1], [1, 0, 2, 3], [3, 2, 0, 1], [1, 0, 2, 3]]
P loop is : True
P loop number : [[1, 0], [0, 1]]
P loop count : [[2, 2], [2, 2]]
P loop point : [[[0, 2], [1, 3]], [[0, 2], [1, 3]]]
N loop is : False
N loop number : [[], []]
N loop count : [[], []]
N loop point : []
P poly ordering : [['A3', 'A2', 'A1'], ['A3', 'A2', 'A1'], ['A1', 'A2', 'A3'], ['A1', 'A2', 'A3']]
N poly ordering : [['A1', 'A2', 'A3'], ['A3', 'A2', 'A1'], ['A1', 'A2', 'A3'], ['A3', 'A2', 'A1']]
Poly ordering : [['A1', 'A2', 'A3'], ['A3', 'A2', 'A1']]
P diffusion chain : [['ZN', 'VDD', 'ZN', 'VDD'], ['VDD', 'ZN', 'VDD', 'ZN']]
N diffusion chain : [['ZN', 'net_0', 'net_1', 'VSS'], ['VSS', 'net_1', 'net_0', 'ZN']]
Diffusion sharing : [1, 1]
P Diffusion weight : [8, 8]
N Diffusion weight : [6, 6]
Total diffusion weight : [13, 13]
END

Cell Name : NAND4_X1
P Vertex : ['ZN', 'VDD']
N Vertex : ['net_2', 'VSS', 'net_1', 'net_0', 'ZN']
Edge : ['A4', 'A3', 'A2', 'A1']
Tr_info : [[['ZN', 'A4', 'VDD'], ['VDD', 'A3', 'ZN'], ['ZN', 'A2', 'VDD'], ['VDD', 'A1', 'ZN']], [['net_2', 'A4', 'VSS'], ['net_1', 'A3', 'net_2'], ['net_0', 'A2', 'net_1'], ['ZN', 'A1', 'net_0']]]
P matrix = [[0, 4], [4, 0]]
N matrix = [[0, 1, 1, 0, 0], [1, 0, 0, 0, 0], [1, 0, 0, 1, 0], [0, 0, 1, 0, 1], [0, 0, 0, 1, 0]]
P odd degree count : 0
N odd degree count : 2
P start point : [0, 1]
N start point : [1, 4]
Is dummy need : False
P dummy count : 0
N dummy count : 0
P euler path candidates : [[0, 1, 0, 1, 0], [1, 0, 1, 0, 1], [0, 1, 0, 1, 0], [1, 0, 1, 0, 1], [0, 1, 0, 1, 0], [1, 0, 1, 0, 1], [0, 1, 0, 1, 0], [1, 0, 1, 0, 1]]
N euler path candidates : [[4, 3, 2, 0, 1], [1, 0, 2, 3, 4], [4, 3, 2, 0, 1], [1, 0, 2, 3, 4]]
P loop is : True
P loop number : [[0, 1], [1, 0]]
P loop count : [[3, 2], [3, 2]]
P loop point : [[[0, 2, 4], [1, 3]], [[0, 2, 4], [1, 3]]]
N loop is : False
N loop number : [[], []]
N loop count : [[], []]
N loop point : []
P poly ordering : [['A4', 'A3', 'A2', 'A1'], ['A4', 'A3', 'A2', 'A1'], ['A4', 'A3', 'A2', 'A1'], ['A4', 'A3', 'A2', 'A1'], ['A1', 'A2', 'A3', 'A4'], ['A1', 'A2', 'A3', 'A4'], ['A1', 'A2', 'A3', 'A4'], ['A1', 'A2', 'A3', 'A4']]
N poly ordering : [['A1', 'A2', 'A3', 'A4'], ['A4', 'A3', 'A2', 'A1'], ['A1', 'A2', 'A3', 'A4'], ['A4', 'A3', 'A2', 'A1']]
Poly ordering : [['A1', 'A2', 'A3', 'A4'], ['A4', 'A3', 'A2', 'A1'], ['A1', 'A2', 'A3', 'A4']]
P diffusion chain : [['ZN', 'VDD', 'ZN', 'VDD', 'ZN'], ['ZN', 'VDD', 'ZN', 'VDD', 'ZN'], ['VDD', 'ZN', 'VDD', 'ZN', 'VDD']]
N diffusion chain : [['ZN', 'net_0', 'net_1', 'net_2', 'VSS'], ['VSS', 'net_2', 'net_1', 'net_0', 'ZN'], ['ZN', 'net_0', 'net_1', 'net_2', 'VSS']]
Diffusion sharing : [1, 1, 0]
P Diffusion weight : [11, 11, 9]
N Diffusion weight : [7, 7, 7]
Total diffusion weight : [17, 17, 16]
END

Cell Name : NOR2_X1
P Vertex : ['net_0', 'ZN', 'VDD']
N Vertex : ['VSS', 'ZN']
Edge : ['A1', 'A2']
Tr_info : [[['net_0', 'A1', 'ZN'], ['VDD', 'A2', 'net_0']], [['VSS', 'A1', 'ZN'], ['VSS', 'A2', 'ZN']]]
P matrix = [[0, 1, 1], [1, 0, 0], [1, 0, 0]]
N matrix = [[0, 2], [2, 0]]
P odd degree count : 2
N odd degree count : 0
P start point : [1, 2]
N start point : [0, 1]
Is dummy need : False
P dummy count : 0
N dummy count : 0
P euler path candidates : [[2, 0, 1], [1, 0, 2], [2, 0, 1], [1, 0, 2]]
N euler path candidates : [[0, 1, 0], [1, 0, 1], [0, 1, 0], [1, 0, 1]]
P loop is : False
P loop number : [[], []]
P loop count : [[], []]
P loop point : []
N loop is : True
N loop number : [[0], [1]]
N loop count : [[2], [2]]
N loop point : [[[0, 2]], [[0, 2]]]
P poly ordering : [['A2', 'A1'], ['A1', 'A2'], ['A2', 'A1'], ['A1', 'A2']]
N poly ordering : [['A1', 'A2'], ['A1', 'A2'], ['A2', 'A1'], ['A2', 'A1']]
Poly ordering : [['A1', 'A2'], ['A1', 'A2'], ['A2', 'A1']]
P diffusion chain : [['ZN', 'net_0', 'VDD'], ['ZN', 'net_0', 'VDD'], ['VDD', 'net_0', 'ZN']]
N diffusion chain : [['VSS', 'ZN', 'VSS'], ['ZN', 'VSS', 'ZN'], ['VSS', 'ZN', 'VSS']]
Diffusion sharing : [0, 1, 0]
P Diffusion weight : [7, 7, 7]
N Diffusion weight : [7, 5, 7]
Total diffusion weight : [14, 11, 14]
END

Cell Name : NOR3_X1
P Vertex : ['net_0', 'ZN', 'net_1', 'VDD']
N Vertex : ['VSS', 'ZN']
Edge : ['A1', 'A2', 'A3']
Tr_info : [[['net_0', 'A1', 'ZN'], ['net_1', 'A2', 'net_0'], ['VDD', 'A3', 'net_1']], [['VSS', 'A1', 'ZN'], ['VSS', 'A2', 'ZN'], ['VSS', 'A3', 'ZN']]]
P matrix = [[0, 1, 1, 0], [1, 0, 0, 0], [1, 0, 0, 1], [0, 0, 1, 0]]
N matrix = [[0, 3], [3, 0]]
P odd degree count : 2
N odd degree count : 2
P start point : [1, 3]
N start point : [0, 1]
Is dummy need : False
P dummy count : 0
N dummy count : 0
P euler path candidates : [[3, 2, 0, 1], [1, 0, 2, 3], [3, 2, 0, 1], [1, 0, 2, 3]]
N euler path candidates : [[1, 0, 1, 0], [0, 1, 0, 1], [1, 0, 1, 0], [0, 1, 0, 1]]
P loop is : False
P loop number : [[], []]
P loop count : [[], []]
P loop point : []
N loop is : True
N loop number : [[1, 0], [0, 1]]
N loop count : [[2, 2], [2, 2]]
N loop point : [[[0, 2], [1, 3]], [[0, 2], [1, 3]]]
P poly ordering : [['A3', 'A2', 'A1'], ['A1', 'A2', 'A3'], ['A3', 'A2', 'A1'], ['A1', 'A2', 'A3']]
N poly ordering : [['A1', 'A2', 'A3'], ['A1', 'A2', 'A3'], ['A3', 'A2', 'A1'], ['A3', 'A2', 'A1']]
Poly ordering : [['A1', 'A2', 'A3'], ['A1', 'A2', 'A3'], ['A3', 'A2', 'A1']]
P diffusion chain : [['ZN', 'net_0', 'net_1', 'VDD'], ['ZN', 'net_0', 'net_1', 'VDD'], ['VDD', 'net_1', 'net_0', 'ZN']]
N diffusion chain : [['ZN', 'VSS', 'ZN', 'VSS'], ['VSS', 'ZN', 'VSS', 'ZN'], ['ZN', 'VSS', 'ZN', 'VSS']]
Diffusion sharing : [1, 0, 0]
P Diffusion weight : [10, 10, 10]
N Diffusion weight : [8, 8, 8]
Total diffusion weight : [17, 18, 18]
END

Cell Name : NOR4_X1
P Vertex : ['net_0', 'ZN', 'net_1', 'net_2', 'VDD']
N Vertex : ['VSS', 'ZN']
Edge : ['A1', 'A2', 'A3', 'A4']
Tr_info : [[['net_0', 'A1', 'ZN'], ['net_1', 'A2', 'net_0'], ['net_2', 'A3', 'net_1'], ['VDD', 'A4', 'net_2']], [['VSS', 'A1', 'ZN'], ['VSS', 'A2', 'ZN'], ['VSS', 'A3', 'ZN'], ['VSS', 'A4', 'ZN']]]
P matrix = [[0, 1, 1, 0, 0], [1, 0, 0, 0, 0], [1, 0, 0, 1, 0], [0, 0, 1, 0, 1], [0, 0, 0, 1, 0]]
N matrix = [[0, 4], [4, 0]]
P odd degree count : 2
N odd degree count : 0
P start point : [1, 4]
N start point : [0, 1]
Is dummy need : False
P dummy count : 0
N dummy count : 0
P euler path candidates : [[4, 3, 2, 0, 1], [1, 0, 2, 3, 4], [4, 3, 2, 0, 1], [1, 0, 2, 3, 4]]
N euler path candidates : [[0, 1, 0, 1, 0], [1, 0, 1, 0, 1], [0, 1, 0, 1, 0], [1, 0, 1, 0, 1], [0, 1, 0, 1, 0], [1, 0, 1, 0, 1], [0, 1, 0, 1, 0], [1, 0, 1, 0, 1]]
P loop is : False
P loop number : [[], []]
P loop count : [[], []]
P loop point : []
N loop is : True
N loop number : [[0, 1], [1, 0]]
N loop count : [[3, 2], [3, 2]]
N loop point : [[[0, 2, 4], [1, 3]], [[0, 2, 4], [1, 3]]]
P poly ordering : [['A4', 'A3', 'A2', 'A1'], ['A1', 'A2', 'A3', 'A4'], ['A4', 'A3', 'A2', 'A1'], ['A1', 'A2', 'A3', 'A4']]
N poly ordering : [['A1', 'A2', 'A3', 'A4'], ['A1', 'A2', 'A3', 'A4'], ['A1', 'A2', 'A3', 'A4'], ['A1', 'A2', 'A3', 'A4'], ['A4', 'A3', 'A2', 'A1'], ['A4', 'A3', 'A2', 'A1'], ['A4', 'A3', 'A2', 'A1'], ['A4', 'A3', 'A2', 'A1']]
Poly ordering : [['A1', 'A2', 'A3', 'A4'], ['A1', 'A2', 'A3', 'A4'], ['A4', 'A3', 'A2', 'A1']]
P diffusion chain : [['ZN', 'net_0', 'net_1', 'net_2', 'VDD'], ['ZN', 'net_0', 'net_1', 'net_2', 'VDD'], ['VDD', 'net_2', 'net_1', 'net_0', 'ZN']]
N diffusion chain : [['VSS', 'ZN', 'VSS', 'ZN', 'VSS'], ['ZN', 'VSS', 'ZN', 'VSS', 'ZN'], ['VSS', 'ZN', 'VSS', 'ZN', 'VSS']]
Diffusion sharing : [0, 1, 0]
P Diffusion weight : [13, 13, 13]
N Diffusion weight : [11, 9, 11]
Total diffusion weight : [24, 21, 24]
END

Cell Name : OAI21_X1
P Vertex : ['net_1', 'VDD', 'ZN']
N Vertex : ['ZN', 'net_0', 'VSS']
Edge : ['A2', 'A1', 'B']
Tr_info : [[['net_1', 'A2', 'VDD'], ['ZN', 'A1', 'net_1'], ['VDD', 'B', 'ZN']], [['ZN', 'A2', 'net_0'], ['net_0', 'A1', 'ZN'], ['VSS', 'B', 'net_0']]]
P matrix = [[0, 1, 1], [1, 0, 1], [1, 1, 0]]
N matrix = [[0, 2, 0], [2, 0, 1], [0, 1, 0]]
P odd degree count : 0
N odd degree count : 2
P start point : [0, 1, 2]
N start point : [1, 2]
Is dummy need : False
P dummy count : 0
N dummy count : 0
P euler path candidates : [[0, 2, 1, 0], [1, 2, 0, 1], [2, 1, 0, 2], [0, 1, 2, 0], [1, 0, 2, 1], [2, 0, 1, 2], [0, 2, 1, 0], [1, 2, 0, 1], [2, 1, 0, 2], [0, 1, 2, 0], [1, 0, 2, 1], [2, 0, 1, 2]]
N euler path candidates : [[2, 1, 0, 1], [1, 0, 1, 2], [2, 1, 0, 1], [1, 0, 1, 2]]
P loop is : True
P loop number : [[0], [1], [2]]
P loop count : [[2], [2], [2]]
P loop point : [[[0, 3]], [[0, 3]], [[0, 3]]]
N loop is : True
N loop number : [[1], [1]]
N loop count : [[2], [2]]
N loop point : [[[1, 3]], [[0, 2]]]
P poly ordering : [['A1', 'B', 'A2'], ['B', 'A1', 'A2'], ['B', 'A2', 'A1'], ['A2', 'B', 'A1'], ['A2', 'A1', 'B'], ['A1', 'A2', 'B'], ['A1', 'B', 'A2'], ['B', 'A1', 'A2'], ['B', 'A2', 'A1'], ['A2', 'B', 'A1'], ['A2', 'A1', 'B'], ['A1', 'A2', 'B']]
N poly ordering : [['B', 'A2', 'A1'], ['A2', 'A1', 'B'], ['B', 'A1', 'A2'], ['A1', 'A2', 'B']]
Poly ordering : [['A2', 'A1', 'B'], ['B', 'A1', 'A2'], ['B', 'A2', 'A1'], ['A1', 'A2', 'B']]
P diffusion chain : [['VDD', 'net_1', 'ZN', 'VDD'], ['VDD', 'ZN', 'net_1', 'VDD'], ['ZN', 'VDD', 'net_1', 'ZN'], ['ZN', 'net_1', 'VDD', 'ZN']]
N diffusion chain : [['net_0', 'ZN', 'net_0', 'VSS'], ['VSS', 'net_0', 'ZN', 'net_0'], ['VSS', 'net_0', 'ZN', 'net_0'], ['net_0', 'ZN', 'net_0', 'VSS']]
Diffusion sharing : [0, 0, 0, 0]
P Diffusion weight : [8, 8, 10, 10]
N Diffusion weight : [6, 6, 6, 6]
Total diffusion weight : [14, 14, 16, 16]
END

Cell Name : OAI22_X1
P Vertex : ['net_2', 'VDD', 'ZN', 'net_1']
N Vertex : ['net_0', 'VSS', 'ZN']
Edge : ['B2', 'B1', 'A1', 'A2']
Tr_info : [[['net_2', 'B2', 'VDD'], ['ZN', 'B1', 'net_2'], ['net_1', 'A1', 'ZN'], ['VDD', 'A2', 'net_1']], [['net_0', 'B2', 'VSS'], ['VSS', 'B1', 'net_0'], ['ZN', 'A1', 'net_0'], ['net_0', 'A2', 'ZN']]]
P matrix = [[0, 1, 1, 0], [1, 0, 0, 1], [1, 0, 0, 1], [0, 1, 1, 0]]
N matrix = [[0, 2, 2], [2, 0, 0], [2, 0, 0]]
P odd degree count : 0
N odd degree count : 0
P start point : [0, 1, 2, 3]
N start point : [0, 1, 2]
Is dummy need : False
P dummy count : 0
N dummy count : 0
P euler path candidates : [[0, 2, 3, 1, 0], [1, 3, 2, 0, 1], [2, 3, 1, 0, 2], [3, 2, 0, 1, 3], [0, 1, 3, 2, 0], [1, 0, 2, 3, 1], [2, 0, 1, 3, 2], [3, 1, 0, 2, 3], [0, 2, 3, 1, 0], [1, 3, 2, 0, 1], [2, 3, 1, 0, 2], [3, 2, 0, 1, 3], [0, 1, 3, 2, 0], [1, 0, 2, 3, 1], [2, 0, 1, 3, 2], [3, 1, 0, 2, 3]]
N euler path candidates : [[0, 2, 0, 1, 0], [1, 0, 2, 0, 1], [2, 0, 1, 0, 2], [0, 1, 0, 2, 0], [1, 0, 2, 0, 1], [2, 0, 1, 0, 2], [0, 2, 0, 1, 0], [1, 0, 2, 0, 1], [2, 0, 1, 0, 2], [0, 1, 0, 2, 0], [1, 0, 2, 0, 1], [2, 0, 1, 0, 2]]
P loop is : True
P loop number : [[0], [1], [2], [3]]
P loop count : [[2], [2], [2], [2]]
P loop point : [[[0, 4]], [[0, 4]], [[0, 4]], [[0, 4]]]
N loop is : True
N loop number : [[0], [1, 0], [2, 0]]
N loop count : [[3], [2, 2], [2, 2]]
N loop point : [[[0, 2, 4]], [[0, 4], [1, 3]], [[0, 4], [1, 3]]]
P poly ordering : [['B1', 'A1', 'A2', 'B2'], ['A2', 'A1', 'B1', 'B2'], ['A1', 'A2', 'B2', 'B1'], ['A1', 'B1', 'B2', 'A2'], ['B2', 'A2', 'A1', 'B1'], ['B2', 'B1', 'A1', 'A2'], ['B1', 'B2', 'A2', 'A1'], ['A2', 'B2', 'B1', 'A1'], ['B1', 'A1', 'A2', 'B2'], ['A2', 'A1', 'B1', 'B2'], ['A1', 'A2', 'B2', 'B1'], ['A1', 'B1', 'B2', 'A2'], ['B2', 'A2', 'A1', 'B1'], ['B2', 'B1', 'A1', 'A2'], ['B1', 'B2', 'A2', 'A1'], ['A2', 'B2', 'B1', 'A1']]
N poly ordering : [['A1', 'A2', 'B2', 'B1'], ['B2', 'A1', 'A2', 'B1'], ['A1', 'B2', 'B1', 'A2'], ['B2', 'B1', 'A1', 'A2'], ['B2', 'A1', 'A2', 'B1'], ['A1', 'B2', 'B1', 'A2'], ['A2', 'A1', 'B1', 'B2'], ['B1', 'A2', 'A1', 'B2'], ['A2', 'B1', 'B2', 'A1'], ['B1', 'B2', 'A2', 'A1'], ['B1', 'A2', 'A1', 'B2'], ['A2', 'B1', 'B2', 'A1']]
Poly ordering : [['B2', 'B1', 'A1', 'A2'], ['A2', 'A1', 'B1', 'B2'], ['A1', 'A2', 'B2', 'B1'], ['B1', 'B2', 'A2', 'A1']]
P diffusion chain : [['VDD', 'net_2', 'ZN', 'net_1', 'VDD'], ['VDD', 'net_1', 'ZN', 'net_2', 'VDD'], ['ZN', 'net_1', 'VDD', 'net_2', 'ZN'], ['ZN', 'net_2', 'VDD', 'net_1', 'ZN']]
N diffusion chain : [['net_0', 'VSS', 'net_0', 'ZN', 'net_0'], ['net_0', 'ZN', 'net_0', 'VSS', 'net_0'], ['net_0', 'ZN', 'net_0', 'VSS', 'net_0'], ['net_0', 'VSS', 'net_0', 'ZN', 'net_0']]
Diffusion sharing : [0, 0, 0, 0]
P Diffusion weight : [11, 11, 13, 13]
N Diffusion weight : [7, 7, 7, 7]
Total diffusion weight : [18, 18, 20, 20]
END

Cell Name : OR2_X1
P Vertex : ['net_0', 'VDD', 'Z_neg', 'Z']
N Vertex : ['Z_neg', 'VSS', 'Z']
Edge : ['A2', 'A1', 'Z_neg']
Tr_info : [[['net_0', 'A2', 'VDD'], ['Z_neg', 'A1', 'net_0'], ['Z', 'Z_neg', 'VDD']], [['Z_neg', 'A2', 'VSS'], ['VSS', 'A1', 'Z_neg'], ['Z', 'Z_neg', 'VSS']]]
P matrix = [[0, 1, 1, 0], [1, 0, 0, 1], [1, 0, 0, 0], [0, 1, 0, 0]]
N matrix = [[0, 2, 0], [2, 0, 1], [0, 1, 0]]
P odd degree count : 2
N odd degree count : 2
P start point : [2, 3]
N start point : [1, 2]
Is dummy need : False
P dummy count : 0
N dummy count : 0
P euler path candidates : [[3, 1, 0, 2], [2, 0, 1, 3], [3, 1, 0, 2], [2, 0, 1, 3]]
N euler path candidates : [[2, 1, 0, 1], [1, 0, 1, 2], [2, 1, 0, 1], [1, 0, 1, 2]]
P loop is : False
P loop number : [[], []]
P loop count : [[], []]
P loop point : []
N loop is : True
N loop number : [[1], [1]]
N loop count : [[2], [2]]
N loop point : [[[1, 3]], [[0, 2]]]
P poly ordering : [['Z_neg', 'A2', 'A1'], ['A1', 'A2', 'Z_neg'], ['Z_neg', 'A2', 'A1'], ['A1', 'A2', 'Z_neg']]
N poly ordering : [['Z_neg', 'A2', 'A1'], ['A2', 'A1', 'Z_neg'], ['Z_neg', 'A1', 'A2'], ['A1', 'A2', 'Z_neg']]
Poly ordering : [['Z_neg', 'A2', 'A1'], ['A1', 'A2', 'Z_neg']]
P diffusion chain : [['Z', 'VDD', 'net_0', 'Z_neg'], ['Z_neg', 'net_0', 'VDD', 'Z']]
N diffusion chain : [['Z', 'VSS', 'Z_neg', 'VSS'], ['VSS', 'Z_neg', 'VSS', 'Z']]
Diffusion sharing : [1, 1]
P Diffusion weight : [10, 10]
N Diffusion weight : [8, 8]
Total diffusion weight : [17, 17]
END

Cell Name : OR3_X1
P Vertex : ['net_1', 'VDD', 'net_0', 'Z_neg', 'Z']
N Vertex : ['Z_neg', 'VSS', 'Z']
Edge : ['A3', 'A2', 'A1', 'Z_neg']
Tr_info : [[['net_1', 'A3', 'VDD'], ['net_0', 'A2', 'net_1'], ['Z_neg', 'A1', 'net_0'], ['Z', 'Z_neg', 'VDD']], [['Z_neg', 'A3', 'VSS'], ['VSS', 'A2', 'Z_neg'], ['Z_neg', 'A1', 'VSS'], ['Z', 'Z_neg', 'VSS']]]
P matrix = [[0, 1, 1, 0, 0], [1, 0, 0, 0, 1], [1, 0, 0, 1, 0], [0, 0, 1, 0, 0], [0, 1, 0, 0, 0]]
N matrix = [[0, 3, 0], [3, 0, 1], [0, 1, 0]]
P odd degree count : 2
N odd degree count : 2
P start point : [3, 4]
N start point : [0, 2]
Is dummy need : False
P dummy count : 0
N dummy count : 0
P euler path candidates : [[4, 1, 0, 2, 3], [3, 2, 0, 1, 4], [4, 1, 0, 2, 3], [3, 2, 0, 1, 4]]
N euler path candidates : [[2, 1, 0, 1, 0], [0, 1, 0, 1, 2], [2, 1, 0, 1, 0], [0, 1, 0, 1, 2]]
P loop is : False
P loop number : [[], []]
P loop count : [[], []]
P loop point : []
N loop is : True
N loop number : [[1, 0], [0, 1]]
N loop count : [[2, 2], [2, 2]]
N loop point : [[[1, 3], [2, 4]], [[0, 2], [1, 3]]]
P poly ordering : [['Z_neg', 'A3', 'A2', 'A1'], ['A1', 'A2', 'A3', 'Z_neg'], ['Z_neg', 'A3', 'A2', 'A1'], ['A1', 'A2', 'A3', 'Z_neg']]
N poly ordering : [['Z_neg', 'A3', 'A2', 'A1'], ['A3', 'A2', 'A1', 'Z_neg'], ['Z_neg', 'A1', 'A2', 'A3'], ['A1', 'A2', 'A3', 'Z_neg']]
Poly ordering : [['Z_neg', 'A3', 'A2', 'A1'], ['A1', 'A2', 'A3', 'Z_neg']]
P diffusion chain : [['Z', 'VDD', 'net_1', 'net_0', 'Z_neg'], ['Z_neg', 'net_0', 'net_1', 'VDD', 'Z']]
N diffusion chain : [['Z', 'VSS', 'Z_neg', 'VSS', 'Z_neg'], ['Z_neg', 'VSS', 'Z_neg', 'VSS', 'Z']]
Diffusion sharing : [2, 2]
P Diffusion weight : [13, 13]
N Diffusion weight : [9, 9]
Total diffusion weight : [20, 20]
END

Cell Name : OR4_X1
P Vertex : ['net_2', 'VDD', 'net_1', 'net_0', 'Z_neg', 'Z']
N Vertex : ['Z_neg', 'VSS', 'Z']
Edge : ['A4', 'A3', 'A2', 'A1', 'Z_neg']
Tr_info : [[['net_2', 'A4', 'VDD'], ['net_1', 'A3', 'net_2'], ['net_0', 'A2', 'net_1'], ['Z_neg', 'A1', 'net_0'], ['Z', 'Z_neg', 'VDD']], [['Z_neg', 'A4', 'VSS'], ['VSS', 'A3', 'Z_neg'], ['Z_neg', 'A2', 'VSS'], ['VSS', 'A1', 'Z_neg'], ['Z', 'Z_neg', 'VSS']]]
P matrix = [[0, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0], [0, 0, 1, 0, 1, 0], [0, 0, 0, 1, 0, 0], [0, 1, 0, 0, 0, 0]]
N matrix = [[0, 4, 0], [4, 0, 1], [0, 1, 0]]
P odd degree count : 2
N odd degree count : 2
P start point : [4, 5]
N start point : [1, 2]
Is dummy need : False
P dummy count : 0
N dummy count : 0
P euler path candidates : [[5, 1, 0, 2, 3, 4], [4, 3, 2, 0, 1, 5], [5, 1, 0, 2, 3, 4], [4, 3, 2, 0, 1, 5]]
N euler path candidates : [[2, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 2], [2, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 2], [2, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 2], [2, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 2]]
P loop is : False
P loop number : [[], []]
P loop count : [[], []]
P loop point : []
N loop is : True
N loop number : [[1, 0], [1, 0]]
N loop count : [[3, 2], [3, 2]]
N loop point : [[[1, 3, 5], [2, 4]], [[0, 2, 4], [1, 3]]]
P poly ordering : [['Z_neg', 'A4', 'A3', 'A2', 'A1'], ['A1', 'A2', 'A3', 'A4', 'Z_neg'], ['Z_neg', 'A4', 'A3', 'A2', 'A1'], ['A1', 'A2', 'A3', 'A4', 'Z_neg']]
N poly ordering : [['Z_neg', 'A4', 'A3', 'A2', 'A1'], ['A4', 'A3', 'A2', 'A1', 'Z_neg'], ['Z_neg', 'A4', 'A3', 'A2', 'A1'], ['A4', 'A3', 'A2', 'A1', 'Z_neg'], ['Z_neg', 'A1', 'A2', 'A3', 'A4'], ['A1', 'A2', 'A3', 'A4', 'Z_neg'], ['Z_neg', 'A1', 'A2', 'A3', 'A4'], ['A1', 'A2', 'A3', 'A4', 'Z_neg']]
Poly ordering : [['Z_neg', 'A4', 'A3', 'A2', 'A1'], ['A1', 'A2', 'A3', 'A4', 'Z_neg']]
P diffusion chain : [['Z', 'VDD', 'net_2', 'net_1', 'net_0', 'Z_neg'], ['Z_neg', 'net_0', 'net_1', 'net_2', 'VDD', 'Z']]
N diffusion chain : [['Z', 'VSS', 'Z_neg', 'VSS', 'Z_neg', 'VSS'], ['VSS', 'Z_neg', 'VSS', 'Z_neg', 'VSS', 'Z']]
Diffusion sharing : [1, 1]
P Diffusion weight : [16, 16]
N Diffusion weight : [12, 12]
Total diffusion weight : [27, 27]
END

Cell Name : SDFFRNQ_X1
P Vertex : ['net3', 'VDD', 'net7', 'net6', 'net14', 'ncki', 'cki', 'net1', 'net9', 'net2', 'net8', 'net11', 'net4', 'Q']
N Vertex : ['net3', 'VSS', 'net13', 'net10', 'net5', 'ncki', 'cki', 'net1', 'net15', 'net12', 'net2', 'net8', 'net11', 'net0', 'net4', 'Q']
Edge : ['SE', 'SI', 'D', 'net3', 'CLK', 'ncki', 'cki', 'net2', 'RN', 'net1', 'net4', 'net8']
Tr_info : [[['net3', 'SE', 'VDD'], ['net7', 'SI', 'VDD'], ['net6', 'net3', 'net7'], ['net14', 'D', 'net6'], ['VDD', 'SE', 'net14'], ['ncki', 'CLK', 'VDD'], ['cki', 'ncki', 'VDD'], ['net1', 'cki', 'net6'], ['net9', 'ncki', 'net1'], ['VDD', 'net2', 'net9'], ['net9', 'RN', 'VDD'], ['VDD', 'net1', 'net2'], ['net2', 'ncki', 'net8'], ['net8', 'cki', 'net11'], ['net11', 'net4', 'VDD'], ['net4', 'RN', 'VDD'], ['VDD', 'net8', 'net4'], ['Q', 'net4', 'VDD']], [['net3', 'SE', 'VSS'], ['VSS', 'SI', 'net13'], ['net13', 'SE', 'net10'], ['net10', 'D', 'net5'], ['net5', 'net3', 'VSS'], ['ncki', 'CLK', 'VSS'], ['cki', 'ncki', 'VSS'], ['net10', 'ncki', 'net1'], ['net1', 'cki', 'net15'], ['net12', 'net2', 'net15'], ['VSS', 'RN', 'net12'], ['VSS', 'net1', 'net2'], ['net8', 'cki', 'net2'], ['net11', 'ncki', 'net8'], ['net11', 'net4', 'VSS'], ['net0', 'RN', 'VSS'], ['net4', 'net8', 'net0'], ['Q', 'net4', 'VSS']]]
P matrix = [[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 1, 0, 1, 1, 1, 0, 2, 1, 0, 1, 2, 1], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0], [0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0], [0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]
N matrix = [[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]
P odd degree count : 6
N odd degree count : 6
P start point : [0, 3, 5, 6, 8, 13]
N start point : [0, 3, 5, 6, 14, 15]
Is dummy need : True
P dummy count : 0
N dummy count : 0
P euler path candidates : []
N euler path candidates : []
P loop is : False
P loop number : []
P loop count : []
P loop point : []
N loop is : False
N loop number : []
N loop count : []
N loop point : []
P poly ordering : []
N poly ordering : []
Poly ordering : []
P diffusion chain : []
N diffusion chain : []
Diffusion sharing : []
P Diffusion weight : []
N Diffusion weight : []
Total diffusion weight : []
END

Cell Name : SDFFSNQ_X1
P Vertex : ['VDD', 'net3', 'net7', 'net6', 'net14', 'ncki', 'cki', 'net1', 'net9', 'net2', 'net8', 'net_2', 'net4', 'Q']
N Vertex : ['VSS', 'net3', 'net13', 'net5', 'net_4', 'ncki', 'cki', 'net1', 'net15', 'net_0', 'net2', 'net8', 'net_3', 'net_1', 'net4', 'Q']
Edge : ['SE', 'SI', 'net3', 'D', 'CLK', 'ncki', 'cki', 'net2', 'SN', 'net1', 'net4', 'net8']
Tr_info : [[['VDD', 'SE', 'net3'], ['net7', 'SI', 'VDD'], ['net6', 'net3', 'net7'], ['net14', 'D', 'net6'], ['VDD', 'SE', 'net14'], ['VDD', 'CLK', 'ncki'], ['cki', 'ncki', 'VDD'], ['net1', 'cki', 'net6'], ['net9', 'ncki', 'net1'], ['VDD', 'net2', 'net9'], ['net2', 'SN', 'VDD'], ['net2', 'net1', 'VDD'], ['net8', 'ncki', 'net2'], ['net_2', 'cki', 'net8'], ['VDD', 'net4', 'net_2'], ['net_2', 'SN', 'VDD'], ['VDD', 'net8', 'net4'], ['VDD', 'net4', 'Q']], [['VSS', 'SE', 'net3'], ['net13', 'SI', 'VSS'], ['net5', 'net3', 'VSS'], ['net_4', 'D', 'net5'], ['net13', 'SE', 'net_4'], ['VSS', 'CLK', 'ncki'], ['cki', 'ncki', 'VSS'], ['net1', 'ncki', 'net_4'], ['net15', 'cki', 'net1'], ['VSS', 'net2', 'net15'], ['net_0', 'SN', 'VSS'], ['net2', 'net1', 'net_0'], ['net8', 'cki', 'net2'], ['net_3', 'ncki', 'net8'], ['net_1', 'net4', 'net_3'], ['VSS', 'SN', 'net_1'], ['net4', 'net8', 'VSS'], ['VSS', 'net4', 'Q']]]
P matrix = [[0, 1, 1, 0, 1, 1, 1, 0, 1, 2, 0, 2, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0], [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0], [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]
N matrix = [[0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]
P odd degree count : 8
N odd degree count : 6
P start point : [1, 3, 5, 6, 9, 11, 12, 13]
N start point : [1, 4, 5, 6, 14, 15]
Is dummy need : True
P dummy count : 0
N dummy count : 0
P euler path candidates : []
N euler path candidates : []
P loop is : False
P loop number : []
P loop count : []
P loop point : []
N loop is : False
N loop number : []
N loop count : []
N loop point : []
P poly ordering : []
N poly ordering : []
Poly ordering : []
P diffusion chain : []
N diffusion chain : []
Diffusion sharing : []
P Diffusion weight : []
N Diffusion weight : []
Total diffusion weight : []
END

Cell Name : TBUF_X1
P Vertex : ['VDD', 'NEN', 'NI_P', 'NI_N', 'Z']
N Vertex : ['VSS', 'NEN', 'NI_N', 'NI_P', 'Z']
Edge : ['EN', 'NEN', 'I', 'NI_P', 'NI_N']
Tr_info : [[['VDD', 'EN', 'NEN'], ['NI_P', 'EN', 'VDD'], ['NI_N', 'NEN', 'NI_P'], ['NI_P', 'I', 'VDD'], ['VDD', 'NI_P', 'Z']], [['VSS', 'EN', 'NEN'], ['VSS', 'NEN', 'NI_N'], ['NI_N', 'EN', 'NI_P'], ['NI_N', 'I', 'VSS'], ['Z', 'NI_N', 'VSS']]]
P matrix = [[0, 1, 2, 0, 1], [1, 0, 0, 0, 0], [2, 0, 0, 1, 0], [0, 0, 1, 0, 0], [1, 0, 0, 0, 0]]
N matrix = [[0, 1, 2, 0, 1], [1, 0, 0, 0, 0], [2, 0, 0, 1, 0], [0, 0, 1, 0, 0], [1, 0, 0, 0, 0]]
P odd degree count : 4
N odd degree count : 4
P start point : [1, 2, 3, 4]
N start point : [1, 2, 3, 4]
Is dummy need : True
P dummy count : 0
N dummy count : 0
P euler path candidates : []
N euler path candidates : []
P loop is : False
P loop number : []
P loop count : []
P loop point : []
N loop is : False
N loop number : []
N loop count : []
N loop point : []
P poly ordering : []
N poly ordering : []
Poly ordering : []
P diffusion chain : []
N diffusion chain : []
Diffusion sharing : []
P Diffusion weight : []
N Diffusion weight : []
Total diffusion weight : []
END

Cell Name : XNOR2_X1
P Vertex : ['ZN', 'VDD', 'net_0', 'x2', 'net_2', 'x1']
N Vertex : ['ZN', 'VSS', 'x2', 'net_1', 'x1']
Edge : ['x1', 'A1', 'A2', 'x2']
Tr_info : [[['ZN', 'x1', 'VDD'], ['net_0', 'A1', 'x2'], ['VDD', 'A2', 'net_0'], ['net_2', 'A1', 'x1'], ['net_2', 'A2', 'x1'], ['VDD', 'x2', 'net_2']], [['ZN', 'x1', 'VSS'], ['VSS', 'A1', 'x2'], ['VSS', 'A2', 'x2'], ['net_1', 'A1', 'x1'], ['VSS', 'A2', 'net_1'], ['VSS', 'x2', 'x1']]]
P matrix = [[0, 1, 0, 0, 0, 0], [1, 0, 1, 0, 1, 0], [0, 1, 0, 1, 0, 0], [0, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 2], [0, 0, 0, 0, 2, 0]]
N matrix = [[0, 1, 0, 0, 0], [1, 0, 2, 1, 1], [0, 2, 0, 0, 0], [0, 1, 0, 0, 1], [0, 1, 0, 1, 0]]
P odd degree count : 4
N odd degree count : 2
P start point : [0, 1, 3, 4]
N start point : [0, 1]
Is dummy need : True
P dummy count : 0
N dummy count : 0
P euler path candidates : []
N euler path candidates : []
P loop is : False
P loop number : []
P loop count : []
P loop point : []
N loop is : False
N loop number : []
N loop count : []
N loop point : []
P poly ordering : []
N poly ordering : []
Poly ordering : []
P diffusion chain : []
N diffusion chain : []
Diffusion sharing : []
P Diffusion weight : []
N Diffusion weight : []
Total diffusion weight : []
END

Cell Name : XOR2_X1
P Vertex : ['net_2', 'VDD', 'x1', 'net_1', 'Z']
N Vertex : ['x1', 'VSS', 'Z', 'net_0']
Edge : ['A2', 'A1', 'x1']
Tr_info : [[['net_2', 'A2', 'VDD'], ['x1', 'A1', 'net_2'], ['net_1', 'x1', 'VDD'], ['net_1', 'A1', 'Z'], ['Z', 'A2', 'net_1']], [['x1', 'A2', 'VSS'], ['VSS', 'A1', 'x1'], ['Z', 'x1', 'VSS'], ['net_0', 'A1', 'Z'], ['VSS', 'A2', 'net_0']]]
P matrix = [[0, 1, 1, 0, 0], [1, 0, 0, 1, 0], [1, 0, 0, 0, 0], [0, 1, 0, 0, 2], [0, 0, 0, 2, 0]]
N matrix = [[0, 2, 0, 0], [2, 0, 1, 1], [0, 1, 0, 1], [0, 1, 1, 0]]
P odd degree count : 2
N odd degree count : 0
P start point : [2, 3]
N start point : [0, 1, 2, 3]
Is dummy need : False
P dummy count : 0
N dummy count : 0
P euler path candidates : [[3, 4, 3, 1, 0, 2], [2, 0, 1, 3, 4, 3], [3, 4, 3, 1, 0, 2], [2, 0, 1, 3, 4, 3]]
N euler path candidates : [[0, 1, 3, 2, 1, 0], [1, 3, 2, 1, 0, 1], [2, 3, 1, 0, 1, 2], [3, 2, 1, 0, 1, 3], [0, 1, 2, 3, 1, 0], [0, 1, 2, 3, 1, 0], [1, 2, 3, 1, 0, 1], [1, 0, 1, 2, 3, 1], [2, 1, 0, 1, 3, 2], [3, 1, 0, 1, 2, 3], [0, 1, 3, 2, 1, 0], [1, 3, 2, 1, 0, 1], [2, 3, 1, 0, 1, 2], [3, 2, 1, 0, 1, 3], [0, 1, 2, 3, 1, 0], [0, 1, 2, 3, 1, 0], [1, 2, 3, 1, 0, 1], [1, 0, 1, 2, 3, 1], [2, 1, 0, 1, 3, 2], [3, 1, 0, 1, 2, 3]]
P loop is : True
P loop number : [[3], [3]]
P loop count : [[2], [2]]
P loop point : [[[0, 2]], [[3, 5]]]
N loop is : True
N loop number : [[0, 1], [1], [2, 1], [3, 1]]
N loop count : [[2, 2], [3], [2, 2], [2, 2]]
N loop point : [[[0, 5], [1, 4]], [[0, 3, 5]], [[0, 5], [2, 4]], [[0, 5], [2, 4]]]
P poly ordering : [['A1', 'A2', 'x1', 'A2', 'A1'], ['A1', 'A2', 'x1', 'A1', 'A2'], ['A2', 'A1', 'x1', 'A2', 'A1'], ['A1', 'A2', 'x1', 'A2', 'A1']]
N poly ordering : [['A2', 'A2', 'A1', 'x1', 'A1'], ['A2', 'A1', 'x1', 'A2', 'A1'], ['A1', 'A2', 'A2', 'A1', 'x1'], ['A1', 'x1', 'A2', 'A1', 'A2'], ['A2', 'x1', 'A1', 'A2', 'A1'], ['A2', 'x1', 'A1', 'A2', 'A1'], ['x1', 'A1', 'A2', 'A2', 'A1'], ['A2', 'A1', 'x1', 'A1', 'A2'], ['x1', 'A2', 'A1', 'A2', 'A1'], ['A2', 'A2', 'A1', 'x1', 'A1'], ['A1', 'A2', 'A1', 'x1', 'A2'], ['A2', 'A1', 'x1', 'A1', 'A2'], ['A1', 'A2', 'A1', 'A2', 'x1'], ['A1', 'x1', 'A1', 'A2', 'A2'], ['A1', 'x1', 'A1', 'A2', 'A2'], ['A1', 'x1', 'A1', 'A2', 'A2'], ['x1', 'A1', 'A2', 'A1', 'A2'], ['A1', 'A2', 'x1', 'A1', 'A2'], ['x1', 'A1', 'A2', 'A2', 'A1'], ['A2', 'A1', 'A2', 'x1', 'A1']]
Poly ordering : [['A2', 'A1', 'x1', 'A2', 'A1'], ['A1', 'A2', 'x1', 'A1', 'A2']]
P diffusion chain : [['net_1', 'Z', 'net_1', 'VDD', 'net_2', 'x1'], ['x1', 'net_2', 'VDD', 'net_1', 'Z', 'net_1']]
N diffusion chain : [['VSS', 'net_0', 'Z', 'VSS', 'x1', 'VSS'], ['VSS', 'x1', 'VSS', 'Z', 'net_0', 'VSS']]
Diffusion sharing : [0, 0]
P Diffusion weight : [16, 16]
N Diffusion weight : [12, 12]
Total diffusion weight : [28, 28]
END

Cell Name : FA_X1
P Vertex : ['net31', 'VDD', 'net29', 'net9', 'net3', 'S', 'net1', 'net7', 'net19', 'CO']
N Vertex : ['net49', 'VSS', 'net47', 'net9', 'net42', 'S', 'net5', 'net7', 'net36', 'CO']
Edge : ['A', 'B', 'CI', 'net7', 'net9', 'dummy']
Tr_info : [[['net31', 'A', 'VDD'], ['net29', 'B', 'net31'], ['net9', 'CI', 'net29'], ['net3', 'net7', 'net9'], ['VDD', 'A', 'net3'], ['net3', 'B', 'VDD'], ['VDD', 'CI', 'net3'], ['S', 'net9', 'VDD'], ['VDD', 'B', 'net1'], ['net1', 'A', 'VDD'], ['net7', 'CI', 'net1'], ['net19', 'B', 'net7'], ['VDD', 'A', 'net19'], ['CO', 'net7', 'VDD'], ['net1', 'dummy', 'CO']], [['net49', 'A', 'VSS'], ['net47', 'B', 'net49'], ['net9', 'CI', 'net47'], ['net42', 'net7', 'net9'], ['VSS', 'A', 'net42'], ['net42', 'B', 'VSS'], ['VSS', 'CI', 'net42'], ['S', 'net9', 'VSS'], ['VSS', 'B', 'net5'], ['net5', 'A', 'VSS'], ['net7', 'CI', 'net5'], ['net36', 'B', 'net7'], ['VSS', 'A', 'net36'], ['CO', 'net7', 'VSS'], ['net5', 'dummy', 'CO']]]
P matrix = [[0, 1, 1, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 3, 1, 2, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0], [0, 3, 0, 1, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 2, 0, 0, 0, 0, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0]]
N matrix = [[0, 1, 1, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 3, 1, 2, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0], [0, 3, 0, 1, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 2, 0, 0, 0, 0, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0]]
P odd degree count : 2
N odd degree count : 2
P start point : [1, 5]
N start point : [1, 5]
Is dummy need : False
P dummy count : 1
N dummy count : 1
P euler path candidates : [[5, 1, 9, 6, 7, 8, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1], [1, 9, 6, 7, 8, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 5], [5, 1, 8, 7, 6, 9, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1], [5, 1, 6, 1, 8, 7, 6, 9, 1, 4, 1, 4, 3, 2, 0, 1], [5, 1, 4, 1, 6, 1, 8, 7, 6, 9, 1, 4, 3, 2, 0, 1], [5, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 8, 7, 6, 9, 1], [5, 1, 9, 6, 7, 8, 1, 4, 1, 6, 1, 4, 3, 2, 0, 1], [5, 1, 9, 6, 7, 8, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1], [5, 1, 9, 6, 7, 8, 1, 6, 1, 0, 2, 3, 4, 1, 4, 1], [5, 1, 9, 6, 7, 8, 1, 6, 1, 4, 1, 0, 2, 3, 4, 1], [5, 1, 9, 6, 1, 8, 7, 6, 1, 4, 1, 4, 3, 2, 0, 1], [1, 8, 7, 6, 9, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 5], [1, 6, 1, 8, 7, 6, 9, 1, 4, 1, 4, 3, 2, 0, 1, 5], [1, 4, 1, 6, 1, 8, 7, 6, 9, 1, 4, 3, 2, 0, 1, 5], [1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 8, 7, 6, 9, 1, 5], [1, 9, 6, 7, 8, 1, 4, 1, 6, 1, 4, 3, 2, 0, 1, 5], [1, 9, 6, 7, 8, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 5], [1, 9, 6, 7, 8, 1, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5], [1, 9, 6, 7, 8, 1, 6, 1, 4, 1, 0, 2, 3, 4, 1, 5], [1, 9, 6, 1, 8, 7, 6, 1, 4, 1, 4, 3, 2, 0, 1, 5], [5, 1, 9, 6, 7, 8, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1], [1, 9, 6, 7, 8, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 5], [5, 1, 8, 7, 6, 9, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1], [5, 1, 6, 1, 8, 7, 6, 9, 1, 4, 1, 4, 3, 2, 0, 1], [5, 1, 4, 1, 6, 1, 8, 7, 6, 9, 1, 4, 3, 2, 0, 1], [5, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 8, 7, 6, 9, 1], [5, 1, 9, 6, 7, 8, 1, 4, 1, 6, 1, 4, 3, 2, 0, 1], [5, 1, 9, 6, 7, 8, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1], [5, 1, 9, 6, 7, 8, 1, 6, 1, 0, 2, 3, 4, 1, 4, 1], [5, 1, 9, 6, 7, 8, 1, 6, 1, 4, 1, 0, 2, 3, 4, 1], [5, 1, 9, 6, 1, 8, 7, 6, 1, 4, 1, 4, 3, 2, 0, 1], [1, 8, 7, 6, 9, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 5], [1, 6, 1, 8, 7, 6, 9, 1, 4, 1, 4, 3, 2, 0, 1, 5], [1, 4, 1, 6, 1, 8, 7, 6, 9, 1, 4, 3, 2, 0, 1, 5], [1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 8, 7, 6, 9, 1, 5], [1, 9, 6, 7, 8, 1, 4, 1, 6, 1, 4, 3, 2, 0, 1, 5], [1, 9, 6, 7, 8, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 5], [1, 9, 6, 7, 8, 1, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5], [1, 9, 6, 7, 8, 1, 6, 1, 4, 1, 0, 2, 3, 4, 1, 5], [1, 9, 6, 1, 8, 7, 6, 1, 4, 1, 4, 3, 2, 0, 1, 5]]
N euler path candidates : [[5, 1, 9, 6, 7, 8, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1], [1, 9, 6, 7, 8, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 5], [5, 1, 8, 7, 6, 9, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1], [5, 1, 6, 1, 8, 7, 6, 9, 1, 4, 1, 4, 3, 2, 0, 1], [5, 1, 4, 1, 6, 1, 8, 7, 6, 9, 1, 4, 3, 2, 0, 1], [5, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 8, 7, 6, 9, 1], [5, 1, 9, 6, 7, 8, 1, 4, 1, 6, 1, 4, 3, 2, 0, 1], [5, 1, 9, 6, 7, 8, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1], [5, 1, 9, 6, 7, 8, 1, 6, 1, 0, 2, 3, 4, 1, 4, 1], [5, 1, 9, 6, 7, 8, 1, 6, 1, 4, 1, 0, 2, 3, 4, 1], [5, 1, 9, 6, 1, 8, 7, 6, 1, 4, 1, 4, 3, 2, 0, 1], [1, 8, 7, 6, 9, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 5], [1, 6, 1, 8, 7, 6, 9, 1, 4, 1, 4, 3, 2, 0, 1, 5], [1, 4, 1, 6, 1, 8, 7, 6, 9, 1, 4, 3, 2, 0, 1, 5], [1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 8, 7, 6, 9, 1, 5], [1, 9, 6, 7, 8, 1, 4, 1, 6, 1, 4, 3, 2, 0, 1, 5], [1, 9, 6, 7, 8, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 5], [1, 9, 6, 7, 8, 1, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5], [1, 9, 6, 7, 8, 1, 6, 1, 4, 1, 0, 2, 3, 4, 1, 5], [1, 9, 6, 1, 8, 7, 6, 1, 4, 1, 4, 3, 2, 0, 1, 5], [5, 1, 9, 6, 7, 8, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1], [1, 9, 6, 7, 8, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 5], [5, 1, 8, 7, 6, 9, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1], [5, 1, 6, 1, 8, 7, 6, 9, 1, 4, 1, 4, 3, 2, 0, 1], [5, 1, 4, 1, 6, 1, 8, 7, 6, 9, 1, 4, 3, 2, 0, 1], [5, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 8, 7, 6, 9, 1], [5, 1, 9, 6, 7, 8, 1, 4, 1, 6, 1, 4, 3, 2, 0, 1], [5, 1, 9, 6, 7, 8, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1], [5, 1, 9, 6, 7, 8, 1, 6, 1, 0, 2, 3, 4, 1, 4, 1], [5, 1, 9, 6, 7, 8, 1, 6, 1, 4, 1, 0, 2, 3, 4, 1], [5, 1, 9, 6, 1, 8, 7, 6, 1, 4, 1, 4, 3, 2, 0, 1], [1, 8, 7, 6, 9, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 5], [1, 6, 1, 8, 7, 6, 9, 1, 4, 1, 4, 3, 2, 0, 1, 5], [1, 4, 1, 6, 1, 8, 7, 6, 9, 1, 4, 3, 2, 0, 1, 5], [1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 8, 7, 6, 9, 1, 5], [1, 9, 6, 7, 8, 1, 4, 1, 6, 1, 4, 3, 2, 0, 1, 5], [1, 9, 6, 7, 8, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 5], [1, 9, 6, 7, 8, 1, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5], [1, 9, 6, 7, 8, 1, 6, 1, 4, 1, 0, 2, 3, 4, 1, 5], [1, 9, 6, 1, 8, 7, 6, 1, 4, 1, 4, 3, 2, 0, 1, 5]]
P loop is : True
P loop number : [[1, 6, 4], [1, 6, 4]]
P loop count : [[5, 2, 2], [5, 2, 2]]
P loop point : [[[1, 6, 8, 10, 15], [3, 7], [9, 11]], [[0, 5, 7, 9, 14], [2, 6], [8, 10]]]
N loop is : True
N loop number : [[1, 6, 4], [1, 6, 4]]
N loop count : [[5, 2, 2], [5, 2, 2]]
N loop point : [[[1, 6, 8, 10, 15], [3, 7], [9, 11]], [[0, 5, 7, 9, 14], [2, 6], [8, 10]]]
P poly ordering : [['net9', 'net7', 'dummy', 'CI', 'B', 'A', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['net7', 'dummy', 'CI', 'B', 'A', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['net9', 'A', 'B', 'CI', 'dummy', 'net7', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['net9', 'B', 'A', 'A', 'B', 'CI', 'dummy', 'net7', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['net9', 'A', 'B', 'B', 'A', 'A', 'B', 'CI', 'dummy', 'net7', 'CI', 'net7', 'CI', 'B', 'A'], ['net9', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'B', 'A', 'A', 'B', 'CI', 'dummy', 'net7'], ['net9', 'net7', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'B', 'A', 'CI', 'net7', 'CI', 'B', 'A'], ['net9', 'net7', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'B', 'A'], ['net9', 'net7', 'dummy', 'CI', 'B', 'A', 'B', 'A', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI'], ['net9', 'net7', 'dummy', 'CI', 'B', 'A', 'B', 'A', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI'], ['net9', 'net7', 'dummy', 'B', 'A', 'B', 'CI', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['A', 'B', 'CI', 'dummy', 'net7', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['B', 'A', 'A', 'B', 'CI', 'dummy', 'net7', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['A', 'B', 'B', 'A', 'A', 'B', 'CI', 'dummy', 'net7', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'B', 'A', 'A', 'B', 'CI', 'dummy', 'net7', 'net9'], ['net7', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'B', 'A', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['net7', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'B', 'A', 'net9'], ['net7', 'dummy', 'CI', 'B', 'A', 'B', 'A', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9'], ['net7', 'dummy', 'CI', 'B', 'A', 'B', 'A', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'net9'], ['net7', 'dummy', 'B', 'A', 'B', 'CI', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['net9', 'net7', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['net7', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['net9', 'A', 'B', 'CI', 'dummy', 'net7', 'A', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['net9', 'A', 'B', 'A', 'B', 'CI', 'dummy', 'net7', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['net9', 'CI', 'B', 'A', 'B', 'A', 'B', 'CI', 'dummy', 'net7', 'A', 'net7', 'CI', 'B', 'A'], ['net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A', 'B', 'A', 'B', 'CI', 'dummy', 'net7'], ['net9', 'net7', 'dummy', 'CI', 'B', 'A', 'CI', 'B', 'A', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['net9', 'net7', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A', 'B'], ['net9', 'net7', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['net9', 'net7', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A'], ['net9', 'net7', 'dummy', 'A', 'A', 'B', 'CI', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['A', 'B', 'CI', 'dummy', 'net7', 'A', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['A', 'B', 'A', 'B', 'CI', 'dummy', 'net7', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['CI', 'B', 'A', 'B', 'A', 'B', 'CI', 'dummy', 'net7', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A', 'B', 'A', 'B', 'CI', 'dummy', 'net7', 'net9'], ['net7', 'dummy', 'CI', 'B', 'A', 'CI', 'B', 'A', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['net7', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A', 'B', 'net9'], ['net7', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['net7', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'net9'], ['net7', 'dummy', 'A', 'A', 'B', 'CI', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net9']]
N poly ordering : [['net9', 'net7', 'dummy', 'CI', 'B', 'A', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['net7', 'dummy', 'CI', 'B', 'A', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['net9', 'A', 'B', 'CI', 'dummy', 'net7', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['net9', 'B', 'A', 'A', 'B', 'CI', 'dummy', 'net7', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['net9', 'A', 'B', 'B', 'A', 'A', 'B', 'CI', 'dummy', 'net7', 'CI', 'net7', 'CI', 'B', 'A'], ['net9', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'B', 'A', 'A', 'B', 'CI', 'dummy', 'net7'], ['net9', 'net7', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'B', 'A', 'CI', 'net7', 'CI', 'B', 'A'], ['net9', 'net7', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'B', 'A'], ['net9', 'net7', 'dummy', 'CI', 'B', 'A', 'B', 'A', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI'], ['net9', 'net7', 'dummy', 'CI', 'B', 'A', 'B', 'A', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI'], ['net9', 'net7', 'dummy', 'B', 'A', 'B', 'CI', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['A', 'B', 'CI', 'dummy', 'net7', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['B', 'A', 'A', 'B', 'CI', 'dummy', 'net7', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['A', 'B', 'B', 'A', 'A', 'B', 'CI', 'dummy', 'net7', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'B', 'A', 'A', 'B', 'CI', 'dummy', 'net7', 'net9'], ['net7', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'B', 'A', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['net7', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'B', 'A', 'net9'], ['net7', 'dummy', 'CI', 'B', 'A', 'B', 'A', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9'], ['net7', 'dummy', 'CI', 'B', 'A', 'B', 'A', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'net9'], ['net7', 'dummy', 'B', 'A', 'B', 'CI', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['net9', 'net7', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['net7', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['net9', 'A', 'B', 'CI', 'dummy', 'net7', 'A', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['net9', 'A', 'B', 'A', 'B', 'CI', 'dummy', 'net7', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['net9', 'CI', 'B', 'A', 'B', 'A', 'B', 'CI', 'dummy', 'net7', 'A', 'net7', 'CI', 'B', 'A'], ['net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A', 'B', 'A', 'B', 'CI', 'dummy', 'net7'], ['net9', 'net7', 'dummy', 'CI', 'B', 'A', 'CI', 'B', 'A', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['net9', 'net7', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A', 'B'], ['net9', 'net7', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['net9', 'net7', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A'], ['net9', 'net7', 'dummy', 'A', 'A', 'B', 'CI', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['A', 'B', 'CI', 'dummy', 'net7', 'A', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['A', 'B', 'A', 'B', 'CI', 'dummy', 'net7', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['CI', 'B', 'A', 'B', 'A', 'B', 'CI', 'dummy', 'net7', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A', 'B', 'A', 'B', 'CI', 'dummy', 'net7', 'net9'], ['net7', 'dummy', 'CI', 'B', 'A', 'CI', 'B', 'A', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['net7', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A', 'B', 'net9'], ['net7', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['net7', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'net9'], ['net7', 'dummy', 'A', 'A', 'B', 'CI', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net9']]
Poly ordering : [['net9', 'net7', 'dummy', 'CI', 'B', 'A', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A', 'B', 'A', 'B', 'CI', 'dummy', 'net7', 'net9'], ['net7', 'dummy', 'CI', 'B', 'A', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A', 'B', 'A', 'B', 'CI', 'dummy', 'net7'], ['net9', 'A', 'B', 'CI', 'dummy', 'net7', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['net9', 'B', 'A', 'A', 'B', 'CI', 'dummy', 'net7', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['net9', 'A', 'B', 'B', 'A', 'A', 'B', 'CI', 'dummy', 'net7', 'CI', 'net7', 'CI', 'B', 'A'], ['net9', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'B', 'A', 'A', 'B', 'CI', 'dummy', 'net7'], ['net7', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['net9', 'net7', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'B', 'A', 'CI', 'net7', 'CI', 'B', 'A'], ['net9', 'net7', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'B', 'A'], ['net9', 'net7', 'dummy', 'CI', 'B', 'A', 'B', 'A', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI'], ['net9', 'net7', 'dummy', 'CI', 'B', 'A', 'B', 'A', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI'], ['net9', 'net7', 'dummy', 'B', 'A', 'B', 'CI', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['A', 'B', 'CI', 'dummy', 'net7', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['B', 'A', 'A', 'B', 'CI', 'dummy', 'net7', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['A', 'B', 'B', 'A', 'A', 'B', 'CI', 'dummy', 'net7', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'B', 'A', 'A', 'B', 'CI', 'dummy', 'net7', 'net9'], ['net9', 'net7', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['net7', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'B', 'A', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['net7', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'B', 'A', 'net9'], ['net7', 'dummy', 'CI', 'B', 'A', 'B', 'A', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9'], ['net7', 'dummy', 'CI', 'B', 'A', 'B', 'A', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'net9'], ['net7', 'dummy', 'B', 'A', 'B', 'CI', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'B', 'A', 'A', 'B', 'CI', 'dummy', 'net7', 'net9'], ['net9', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'B', 'A', 'A', 'B', 'CI', 'dummy', 'net7'], ['net9', 'A', 'B', 'CI', 'dummy', 'net7', 'A', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['net9', 'A', 'B', 'A', 'B', 'CI', 'dummy', 'net7', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['net9', 'CI', 'B', 'A', 'B', 'A', 'B', 'CI', 'dummy', 'net7', 'A', 'net7', 'CI', 'B', 'A'], ['net7', 'dummy', 'CI', 'B', 'A', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['net9', 'net7', 'dummy', 'CI', 'B', 'A', 'CI', 'B', 'A', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['net9', 'net7', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A', 'B'], ['net9', 'net7', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['net9', 'net7', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A'], ['net9', 'net7', 'dummy', 'A', 'A', 'B', 'CI', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['A', 'B', 'CI', 'dummy', 'net7', 'A', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['A', 'B', 'A', 'B', 'CI', 'dummy', 'net7', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['CI', 'B', 'A', 'B', 'A', 'B', 'CI', 'dummy', 'net7', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['net9', 'net7', 'dummy', 'CI', 'B', 'A', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['net7', 'dummy', 'CI', 'B', 'A', 'CI', 'B', 'A', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['net7', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A', 'B', 'net9'], ['net7', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['net7', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'net9'], ['net7', 'dummy', 'A', 'A', 'B', 'CI', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net9']]
P diffusion chain : [['S', 'VDD', 'CO', 'net1', 'net7', 'net19', 'VDD', 'net1', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD'], ['VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD', 'net1', 'VDD', 'net19', 'net7', 'net1', 'CO', 'VDD', 'S'], ['VDD', 'CO', 'net1', 'net7', 'net19', 'VDD', 'net1', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'S'], ['S', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD', 'net1', 'VDD', 'net19', 'net7', 'net1', 'CO', 'VDD'], ['S', 'VDD', 'net19', 'net7', 'net1', 'CO', 'VDD', 'net1', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD'], ['S', 'VDD', 'net1', 'VDD', 'net19', 'net7', 'net1', 'CO', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD'], ['S', 'VDD', 'net3', 'VDD', 'net1', 'VDD', 'net19', 'net7', 'net1', 'CO', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD'], ['S', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD', 'net1', 'VDD', 'net19', 'net7', 'net1', 'CO', 'VDD'], ['VDD', 'CO', 'net1', 'net7', 'net19', 'VDD', 'net1', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'S'], ['S', 'VDD', 'CO', 'net1', 'net7', 'net19', 'VDD', 'net3', 'VDD', 'net1', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD'], ['S', 'VDD', 'CO', 'net1', 'net7', 'net19', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD', 'net1', 'VDD'], ['S', 'VDD', 'CO', 'net1', 'net7', 'net19', 'VDD', 'net1', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD'], ['S', 'VDD', 'CO', 'net1', 'net7', 'net19', 'VDD', 'net1', 'VDD', 'net3', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD'], ['S', 'VDD', 'CO', 'net1', 'VDD', 'net19', 'net7', 'net1', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD'], ['VDD', 'net19', 'net7', 'net1', 'CO', 'VDD', 'net1', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'S'], ['VDD', 'net1', 'VDD', 'net19', 'net7', 'net1', 'CO', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'S'], ['VDD', 'net3', 'VDD', 'net1', 'VDD', 'net19', 'net7', 'net1', 'CO', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'S'], ['VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD', 'net1', 'VDD', 'net19', 'net7', 'net1', 'CO', 'VDD', 'S'], ['S', 'VDD', 'CO', 'net1', 'net7', 'net19', 'VDD', 'net1', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD'], ['VDD', 'CO', 'net1', 'net7', 'net19', 'VDD', 'net3', 'VDD', 'net1', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'S'], ['VDD', 'CO', 'net1', 'net7', 'net19', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD', 'net1', 'VDD', 'S'], ['VDD', 'CO', 'net1', 'net7', 'net19', 'VDD', 'net1', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD', 'S'], ['VDD', 'CO', 'net1', 'net7', 'net19', 'VDD', 'net1', 'VDD', 'net3', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'S'], ['VDD', 'CO', 'net1', 'VDD', 'net19', 'net7', 'net1', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'S'], ['VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD', 'net1', 'VDD', 'net19', 'net7', 'net1', 'CO', 'VDD', 'S'], ['S', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD', 'net1', 'VDD', 'net19', 'net7', 'net1', 'CO', 'VDD'], ['S', 'VDD', 'net19', 'net7', 'net1', 'CO', 'VDD', 'net1', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD'], ['S', 'VDD', 'net1', 'VDD', 'net19', 'net7', 'net1', 'CO', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD'], ['S', 'VDD', 'net3', 'VDD', 'net1', 'VDD', 'net19', 'net7', 'net1', 'CO', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD'], ['VDD', 'CO', 'net1', 'net7', 'net19', 'VDD', 'net1', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'S'], ['S', 'VDD', 'CO', 'net1', 'net7', 'net19', 'VDD', 'net3', 'VDD', 'net1', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD'], ['S', 'VDD', 'CO', 'net1', 'net7', 'net19', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD', 'net1', 'VDD'], ['S', 'VDD', 'CO', 'net1', 'net7', 'net19', 'VDD', 'net1', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD'], ['S', 'VDD', 'CO', 'net1', 'net7', 'net19', 'VDD', 'net1', 'VDD', 'net3', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD'], ['S', 'VDD', 'CO', 'net1', 'VDD', 'net19', 'net7', 'net1', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD'], ['VDD', 'net19', 'net7', 'net1', 'CO', 'VDD', 'net1', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'S'], ['VDD', 'net1', 'VDD', 'net19', 'net7', 'net1', 'CO', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'S'], ['VDD', 'net3', 'VDD', 'net1', 'VDD', 'net19', 'net7', 'net1', 'CO', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'S'], ['S', 'VDD', 'CO', 'net1', 'net7', 'net19', 'VDD', 'net1', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD'], ['VDD', 'CO', 'net1', 'net7', 'net19', 'VDD', 'net3', 'VDD', 'net1', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'S'], ['VDD', 'CO', 'net1', 'net7', 'net19', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD', 'net1', 'VDD', 'S'], ['VDD', 'CO', 'net1', 'net7', 'net19', 'VDD', 'net1', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD', 'S'], ['VDD', 'CO', 'net1', 'net7', 'net19', 'VDD', 'net1', 'VDD', 'net3', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'S'], ['VDD', 'CO', 'net1', 'VDD', 'net19', 'net7', 'net1', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'S']]
N diffusion chain : [['S', 'VSS', 'CO', 'net5', 'net7', 'net36', 'VSS', 'net5', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS'], ['VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS', 'net5', 'VSS', 'net36', 'net7', 'net5', 'CO', 'VSS', 'S'], ['VSS', 'CO', 'net5', 'net7', 'net36', 'VSS', 'net5', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'S'], ['S', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS', 'net5', 'VSS', 'net36', 'net7', 'net5', 'CO', 'VSS'], ['S', 'VSS', 'net36', 'net7', 'net5', 'CO', 'VSS', 'net5', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS'], ['S', 'VSS', 'net5', 'VSS', 'net36', 'net7', 'net5', 'CO', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS'], ['S', 'VSS', 'net42', 'VSS', 'net5', 'VSS', 'net36', 'net7', 'net5', 'CO', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS'], ['S', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS', 'net5', 'VSS', 'net36', 'net7', 'net5', 'CO', 'VSS'], ['VSS', 'CO', 'net5', 'net7', 'net36', 'VSS', 'net5', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'S'], ['S', 'VSS', 'CO', 'net5', 'net7', 'net36', 'VSS', 'net42', 'VSS', 'net5', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS'], ['S', 'VSS', 'CO', 'net5', 'net7', 'net36', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS', 'net5', 'VSS'], ['S', 'VSS', 'CO', 'net5', 'net7', 'net36', 'VSS', 'net5', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS'], ['S', 'VSS', 'CO', 'net5', 'net7', 'net36', 'VSS', 'net5', 'VSS', 'net42', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS'], ['S', 'VSS', 'CO', 'net5', 'VSS', 'net36', 'net7', 'net5', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS'], ['VSS', 'net36', 'net7', 'net5', 'CO', 'VSS', 'net5', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'S'], ['VSS', 'net5', 'VSS', 'net36', 'net7', 'net5', 'CO', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'S'], ['VSS', 'net42', 'VSS', 'net5', 'VSS', 'net36', 'net7', 'net5', 'CO', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'S'], ['VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS', 'net5', 'VSS', 'net36', 'net7', 'net5', 'CO', 'VSS', 'S'], ['S', 'VSS', 'CO', 'net5', 'net7', 'net36', 'VSS', 'net5', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS'], ['VSS', 'CO', 'net5', 'net7', 'net36', 'VSS', 'net42', 'VSS', 'net5', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'S'], ['VSS', 'CO', 'net5', 'net7', 'net36', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS', 'net5', 'VSS', 'S'], ['VSS', 'CO', 'net5', 'net7', 'net36', 'VSS', 'net5', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS', 'S'], ['VSS', 'CO', 'net5', 'net7', 'net36', 'VSS', 'net5', 'VSS', 'net42', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'S'], ['VSS', 'CO', 'net5', 'VSS', 'net36', 'net7', 'net5', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'S'], ['VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS', 'net5', 'VSS', 'net36', 'net7', 'net5', 'CO', 'VSS', 'S'], ['S', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS', 'net5', 'VSS', 'net36', 'net7', 'net5', 'CO', 'VSS'], ['S', 'VSS', 'net36', 'net7', 'net5', 'CO', 'VSS', 'net5', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS'], ['S', 'VSS', 'net5', 'VSS', 'net36', 'net7', 'net5', 'CO', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS'], ['S', 'VSS', 'net42', 'VSS', 'net5', 'VSS', 'net36', 'net7', 'net5', 'CO', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS'], ['VSS', 'CO', 'net5', 'net7', 'net36', 'VSS', 'net5', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'S'], ['S', 'VSS', 'CO', 'net5', 'net7', 'net36', 'VSS', 'net42', 'VSS', 'net5', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS'], ['S', 'VSS', 'CO', 'net5', 'net7', 'net36', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS', 'net5', 'VSS'], ['S', 'VSS', 'CO', 'net5', 'net7', 'net36', 'VSS', 'net5', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS'], ['S', 'VSS', 'CO', 'net5', 'net7', 'net36', 'VSS', 'net5', 'VSS', 'net42', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS'], ['S', 'VSS', 'CO', 'net5', 'VSS', 'net36', 'net7', 'net5', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS'], ['VSS', 'net36', 'net7', 'net5', 'CO', 'VSS', 'net5', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'S'], ['VSS', 'net5', 'VSS', 'net36', 'net7', 'net5', 'CO', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'S'], ['VSS', 'net42', 'VSS', 'net5', 'VSS', 'net36', 'net7', 'net5', 'CO', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'S'], ['S', 'VSS', 'CO', 'net5', 'net7', 'net36', 'VSS', 'net5', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS'], ['VSS', 'CO', 'net5', 'net7', 'net36', 'VSS', 'net42', 'VSS', 'net5', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'S'], ['VSS', 'CO', 'net5', 'net7', 'net36', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS', 'net5', 'VSS', 'S'], ['VSS', 'CO', 'net5', 'net7', 'net36', 'VSS', 'net5', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS', 'S'], ['VSS', 'CO', 'net5', 'net7', 'net36', 'VSS', 'net5', 'VSS', 'net42', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'S'], ['VSS', 'CO', 'net5', 'VSS', 'net36', 'net7', 'net5', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'S']]
Diffusion sharing : [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
P Diffusion weight : [38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38]
N Diffusion weight : [26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26]
Total diffusion weight : [60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60]
END

Cell Name : FA_X1
P Vertex : ['net31', 'VDD', 'net29', 'net9', 'net3', 'S', 'net1', 'net7', 'net19', 'CO']
N Vertex : ['net49', 'VSS', 'net47', 'net9', 'net42', 'S', 'net5', 'net7', 'net36', 'CO']
Edge : ['A', 'B', 'CI', 'net7', 'net9', 'dummy']
Tr_info : [[['net31', 'A', 'VDD'], ['net29', 'B', 'net31'], ['net9', 'CI', 'net29'], ['net3', 'net7', 'net9'], ['VDD', 'A', 'net3'], ['net3', 'B', 'VDD'], ['VDD', 'CI', 'net3'], ['S', 'net9', 'VDD'], ['VDD', 'B', 'net1'], ['net1', 'A', 'VDD'], ['net7', 'CI', 'net1'], ['net19', 'B', 'net7'], ['VDD', 'A', 'net19'], ['CO', 'net7', 'VDD'], ['net1', 'dummy', 'CO']], [['net49', 'A', 'VSS'], ['net47', 'B', 'net49'], ['net9', 'CI', 'net47'], ['net42', 'net7', 'net9'], ['VSS', 'A', 'net42'], ['net42', 'B', 'VSS'], ['VSS', 'CI', 'net42'], ['S', 'net9', 'VSS'], ['VSS', 'B', 'net5'], ['net5', 'A', 'VSS'], ['net7', 'CI', 'net5'], ['net36', 'B', 'net7'], ['VSS', 'A', 'net36'], ['CO', 'net7', 'VSS'], ['VSS', 'dummy', 'net5']]]
P matrix = [[0, 1, 1, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 3, 1, 2, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0], [0, 3, 0, 1, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 2, 0, 0, 0, 0, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0]]
N matrix = [[0, 1, 1, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 3, 1, 3, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0], [0, 3, 0, 1, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 3, 0, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0]]
P odd degree count : 2
N odd degree count : 2
P start point : [1, 5]
N start point : [5, 9]
Is dummy need : False
P dummy count : 1
N dummy count : 1
P euler path candidates : [[5, 1, 9, 6, 7, 8, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1], [1, 9, 6, 7, 8, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 5], [5, 1, 8, 7, 6, 9, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1], [5, 1, 6, 1, 8, 7, 6, 9, 1, 4, 1, 4, 3, 2, 0, 1], [5, 1, 4, 1, 6, 1, 8, 7, 6, 9, 1, 4, 3, 2, 0, 1], [5, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 8, 7, 6, 9, 1], [5, 1, 9, 6, 7, 8, 1, 4, 1, 6, 1, 4, 3, 2, 0, 1], [5, 1, 9, 6, 7, 8, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1], [5, 1, 9, 6, 7, 8, 1, 6, 1, 0, 2, 3, 4, 1, 4, 1], [5, 1, 9, 6, 7, 8, 1, 6, 1, 4, 1, 0, 2, 3, 4, 1], [5, 1, 9, 6, 1, 8, 7, 6, 1, 4, 1, 4, 3, 2, 0, 1], [1, 8, 7, 6, 9, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 5], [1, 6, 1, 8, 7, 6, 9, 1, 4, 1, 4, 3, 2, 0, 1, 5], [1, 4, 1, 6, 1, 8, 7, 6, 9, 1, 4, 3, 2, 0, 1, 5], [1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 8, 7, 6, 9, 1, 5], [1, 9, 6, 7, 8, 1, 4, 1, 6, 1, 4, 3, 2, 0, 1, 5], [1, 9, 6, 7, 8, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 5], [1, 9, 6, 7, 8, 1, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5], [1, 9, 6, 7, 8, 1, 6, 1, 4, 1, 0, 2, 3, 4, 1, 5], [1, 9, 6, 1, 8, 7, 6, 1, 4, 1, 4, 3, 2, 0, 1, 5], [5, 1, 9, 6, 7, 8, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1], [1, 9, 6, 7, 8, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 5], [5, 1, 8, 7, 6, 9, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1], [5, 1, 6, 1, 8, 7, 6, 9, 1, 4, 1, 4, 3, 2, 0, 1], [5, 1, 4, 1, 6, 1, 8, 7, 6, 9, 1, 4, 3, 2, 0, 1], [5, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 8, 7, 6, 9, 1], [5, 1, 9, 6, 7, 8, 1, 4, 1, 6, 1, 4, 3, 2, 0, 1], [5, 1, 9, 6, 7, 8, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1], [5, 1, 9, 6, 7, 8, 1, 6, 1, 0, 2, 3, 4, 1, 4, 1], [5, 1, 9, 6, 7, 8, 1, 6, 1, 4, 1, 0, 2, 3, 4, 1], [5, 1, 9, 6, 1, 8, 7, 6, 1, 4, 1, 4, 3, 2, 0, 1], [1, 8, 7, 6, 9, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 5], [1, 6, 1, 8, 7, 6, 9, 1, 4, 1, 4, 3, 2, 0, 1, 5], [1, 4, 1, 6, 1, 8, 7, 6, 9, 1, 4, 3, 2, 0, 1, 5], [1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 8, 7, 6, 9, 1, 5], [1, 9, 6, 7, 8, 1, 4, 1, 6, 1, 4, 3, 2, 0, 1, 5], [1, 9, 6, 7, 8, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 5], [1, 9, 6, 7, 8, 1, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5], [1, 9, 6, 7, 8, 1, 6, 1, 4, 1, 0, 2, 3, 4, 1, 5], [1, 9, 6, 1, 8, 7, 6, 1, 4, 1, 4, 3, 2, 0, 1, 5]]
N euler path candidates : [[9, 1, 8, 7, 6, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 5], [5, 1, 8, 7, 6, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 9], [9, 1, 6, 7, 8, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 5], [9, 1, 6, 1, 6, 7, 8, 1, 4, 1, 4, 3, 2, 0, 1, 5], [9, 1, 4, 1, 6, 1, 6, 7, 8, 1, 4, 3, 2, 0, 1, 5], [9, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 6, 7, 8, 1, 5], [9, 1, 8, 7, 6, 1, 4, 1, 6, 1, 4, 3, 2, 0, 1, 5], [9, 1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 5], [9, 1, 8, 7, 6, 1, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5], [9, 1, 8, 7, 6, 1, 6, 1, 4, 1, 0, 2, 3, 4, 1, 5], [5, 1, 6, 7, 8, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 9], [5, 1, 6, 1, 6, 7, 8, 1, 4, 1, 4, 3, 2, 0, 1, 9], [5, 1, 4, 1, 6, 1, 6, 7, 8, 1, 4, 3, 2, 0, 1, 9], [5, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 6, 7, 8, 1, 9], [5, 1, 8, 7, 6, 1, 4, 1, 6, 1, 4, 3, 2, 0, 1, 9], [5, 1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 9], [5, 1, 8, 7, 6, 1, 6, 1, 0, 2, 3, 4, 1, 4, 1, 9], [5, 1, 8, 7, 6, 1, 6, 1, 4, 1, 0, 2, 3, 4, 1, 9], [9, 1, 8, 7, 6, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 5], [5, 1, 8, 7, 6, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 9], [9, 1, 6, 7, 8, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 5], [9, 1, 6, 1, 6, 7, 8, 1, 4, 1, 4, 3, 2, 0, 1, 5], [9, 1, 4, 1, 6, 1, 6, 7, 8, 1, 4, 3, 2, 0, 1, 5], [9, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 6, 7, 8, 1, 5], [9, 1, 8, 7, 6, 1, 4, 1, 6, 1, 4, 3, 2, 0, 1, 5], [9, 1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 5], [9, 1, 8, 7, 6, 1, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5], [9, 1, 8, 7, 6, 1, 6, 1, 4, 1, 0, 2, 3, 4, 1, 5], [5, 1, 6, 7, 8, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 9], [5, 1, 6, 1, 6, 7, 8, 1, 4, 1, 4, 3, 2, 0, 1, 9], [5, 1, 4, 1, 6, 1, 6, 7, 8, 1, 4, 3, 2, 0, 1, 9], [5, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 6, 7, 8, 1, 9], [5, 1, 8, 7, 6, 1, 4, 1, 6, 1, 4, 3, 2, 0, 1, 9], [5, 1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 9], [5, 1, 8, 7, 6, 1, 6, 1, 0, 2, 3, 4, 1, 4, 1, 9], [5, 1, 8, 7, 6, 1, 6, 1, 4, 1, 0, 2, 3, 4, 1, 9]]
P loop is : True
P loop number : [[1, 6, 4], [1, 6, 4]]
P loop count : [[5, 2, 2], [5, 2, 2]]
P loop point : [[[1, 6, 8, 10, 15], [3, 7], [9, 11]], [[0, 5, 7, 9, 14], [2, 6], [8, 10]]]
N loop is : True
N loop number : [[1, 6, 4], [1, 6, 4]]
N loop count : [[5, 2, 2], [5, 2, 2]]
N loop point : [[[1, 5, 7, 9, 14], [4, 6], [8, 10]], [[1, 5, 7, 9, 14], [4, 6], [8, 10]]]
P poly ordering : [['net9', 'net7', 'dummy', 'CI', 'B', 'A', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['net7', 'dummy', 'CI', 'B', 'A', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['net9', 'A', 'B', 'CI', 'dummy', 'net7', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['net9', 'B', 'A', 'A', 'B', 'CI', 'dummy', 'net7', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['net9', 'A', 'B', 'B', 'A', 'A', 'B', 'CI', 'dummy', 'net7', 'CI', 'net7', 'CI', 'B', 'A'], ['net9', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'B', 'A', 'A', 'B', 'CI', 'dummy', 'net7'], ['net9', 'net7', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'B', 'A', 'CI', 'net7', 'CI', 'B', 'A'], ['net9', 'net7', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'B', 'A'], ['net9', 'net7', 'dummy', 'CI', 'B', 'A', 'B', 'A', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI'], ['net9', 'net7', 'dummy', 'CI', 'B', 'A', 'B', 'A', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI'], ['net9', 'net7', 'dummy', 'B', 'A', 'B', 'CI', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['A', 'B', 'CI', 'dummy', 'net7', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['B', 'A', 'A', 'B', 'CI', 'dummy', 'net7', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['A', 'B', 'B', 'A', 'A', 'B', 'CI', 'dummy', 'net7', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'B', 'A', 'A', 'B', 'CI', 'dummy', 'net7', 'net9'], ['net7', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'B', 'A', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['net7', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'B', 'A', 'net9'], ['net7', 'dummy', 'CI', 'B', 'A', 'B', 'A', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9'], ['net7', 'dummy', 'CI', 'B', 'A', 'B', 'A', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'net9'], ['net7', 'dummy', 'B', 'A', 'B', 'CI', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['net9', 'net7', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['net7', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['net9', 'A', 'B', 'CI', 'dummy', 'net7', 'A', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['net9', 'A', 'B', 'A', 'B', 'CI', 'dummy', 'net7', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['net9', 'CI', 'B', 'A', 'B', 'A', 'B', 'CI', 'dummy', 'net7', 'A', 'net7', 'CI', 'B', 'A'], ['net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A', 'B', 'A', 'B', 'CI', 'dummy', 'net7'], ['net9', 'net7', 'dummy', 'CI', 'B', 'A', 'CI', 'B', 'A', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['net9', 'net7', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A', 'B'], ['net9', 'net7', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['net9', 'net7', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A'], ['net9', 'net7', 'dummy', 'A', 'A', 'B', 'CI', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['A', 'B', 'CI', 'dummy', 'net7', 'A', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['A', 'B', 'A', 'B', 'CI', 'dummy', 'net7', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['CI', 'B', 'A', 'B', 'A', 'B', 'CI', 'dummy', 'net7', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A', 'B', 'A', 'B', 'CI', 'dummy', 'net7', 'net9'], ['net7', 'dummy', 'CI', 'B', 'A', 'CI', 'B', 'A', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['net7', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A', 'B', 'net9'], ['net7', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['net7', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'net9'], ['net7', 'dummy', 'A', 'A', 'B', 'CI', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net9']]
N poly ordering : [['net7', 'A', 'B', 'CI', 'B', 'A', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['net9', 'A', 'B', 'CI', 'B', 'A', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['net7', 'B', 'CI', 'B', 'A', 'A', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['net7', 'B', 'A', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['net7', 'A', 'B', 'B', 'A', 'dummy', 'CI', 'B', 'A', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['net7', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'B', 'A', 'dummy', 'CI', 'B', 'A', 'net9'], ['net7', 'A', 'B', 'CI', 'B', 'A', 'B', 'A', 'dummy', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['net7', 'A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'A', 'dummy', 'net9'], ['net7', 'A', 'B', 'CI', 'B', 'A', 'dummy', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9'], ['net7', 'A', 'B', 'CI', 'B', 'A', 'dummy', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'net9'], ['net9', 'B', 'CI', 'B', 'A', 'A', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['net9', 'B', 'A', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['net9', 'A', 'B', 'B', 'A', 'dummy', 'CI', 'B', 'A', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['net9', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'B', 'A', 'dummy', 'CI', 'B', 'A', 'net7'], ['net9', 'A', 'B', 'CI', 'B', 'A', 'B', 'A', 'dummy', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['net9', 'A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'A', 'dummy', 'net7'], ['net9', 'A', 'B', 'CI', 'B', 'A', 'dummy', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net7'], ['net9', 'A', 'B', 'CI', 'B', 'A', 'dummy', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'net7'], ['net7', 'A', 'B', 'CI', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['net9', 'A', 'B', 'CI', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['net7', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['net7', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['net7', 'CI', 'B', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['net7', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'net9'], ['net7', 'A', 'B', 'CI', 'dummy', 'CI', 'B', 'A', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['net7', 'A', 'B', 'CI', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A', 'B', 'net9'], ['net7', 'A', 'B', 'CI', 'dummy', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['net7', 'A', 'B', 'CI', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'net9'], ['net9', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['net9', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['net9', 'CI', 'B', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'net7'], ['net9', 'A', 'B', 'CI', 'dummy', 'CI', 'B', 'A', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['net9', 'A', 'B', 'CI', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A', 'B', 'net7'], ['net9', 'A', 'B', 'CI', 'dummy', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['net9', 'A', 'B', 'CI', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'net7']]
Poly ordering : [['net7', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net9']]
P diffusion chain : [['VDD', 'CO', 'net1', 'net7', 'net19', 'VDD', 'net1', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'S']]
N diffusion chain : [['CO', 'VSS', 'net5', 'net7', 'net36', 'VSS', 'net5', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'S']]
Diffusion sharing : [3]
P Diffusion weight : [38]
N Diffusion weight : [26]
Total diffusion weight : [61]
END

Cell Name : FA_X1
P Vertex : ['net31', 'VDD', 'net29', 'net9', 'net3', 'S', 'net1', 'net7', 'net19', 'CO']
N Vertex : ['net49', 'VSS', 'net47', 'net9', 'net42', 'S', 'net5', 'net7', 'net36', 'CO']
Edge : ['A', 'B', 'CI', 'net7', 'net9', 'dummy']
Tr_info : [[['net31', 'A', 'VDD'], ['net29', 'B', 'net31'], ['net9', 'CI', 'net29'], ['net3', 'net7', 'net9'], ['VDD', 'A', 'net3'], ['net3', 'B', 'VDD'], ['VDD', 'CI', 'net3'], ['S', 'net9', 'VDD'], ['VDD', 'B', 'net1'], ['net1', 'A', 'VDD'], ['net7', 'CI', 'net1'], ['net19', 'B', 'net7'], ['VDD', 'A', 'net19'], ['CO', 'net7', 'VDD'], ['S', 'dummy', 'CO']], [['net49', 'A', 'VSS'], ['net47', 'B', 'net49'], ['net9', 'CI', 'net47'], ['net42', 'net7', 'net9'], ['VSS', 'A', 'net42'], ['net42', 'B', 'VSS'], ['VSS', 'CI', 'net42'], ['S', 'net9', 'VSS'], ['VSS', 'B', 'net5'], ['net5', 'A', 'VSS'], ['net7', 'CI', 'net5'], ['net36', 'B', 'net7'], ['VSS', 'A', 'net36'], ['CO', 'net7', 'VSS'], ['S', 'dummy', 'CO']]]
P matrix = [[0, 1, 1, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 3, 1, 2, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0], [0, 3, 0, 1, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 2, 0, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0]]
N matrix = [[0, 1, 1, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 3, 1, 2, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0], [0, 3, 0, 1, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 2, 0, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0]]
P odd degree count : 2
N odd degree count : 2
P start point : [1, 6]
N start point : [1, 6]
Is dummy need : False
P dummy count : 1
N dummy count : 1
P euler path candidates : [[6, 7, 8, 1, 6, 1, 9, 5, 1, 4, 1, 4, 3, 2, 0, 1], [1, 8, 7, 6, 1, 9, 5, 1, 4, 1, 4, 3, 2, 0, 1, 6], [6, 1, 8, 7, 6, 1, 9, 5, 1, 4, 1, 4, 3, 2, 0, 1], [6, 7, 8, 1, 5, 9, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1], [6, 7, 8, 1, 4, 1, 5, 9, 1, 6, 1, 4, 3, 2, 0, 1], [6, 7, 8, 1, 0, 2, 3, 4, 1, 4, 1, 5, 9, 1, 6, 1], [6, 7, 8, 1, 6, 1, 5, 9, 1, 4, 1, 4, 3, 2, 0, 1], [6, 7, 8, 1, 6, 1, 4, 1, 5, 9, 1, 4, 3, 2, 0, 1], [6, 7, 8, 1, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 9, 1], [6, 7, 8, 1, 6, 1, 9, 5, 1, 0, 2, 3, 4, 1, 4, 1], [6, 7, 8, 1, 6, 1, 9, 5, 1, 4, 1, 0, 2, 3, 4, 1], [1, 6, 7, 8, 1, 9, 5, 1, 4, 1, 4, 3, 2, 0, 1, 6], [1, 5, 9, 1, 6, 7, 8, 1, 4, 1, 4, 3, 2, 0, 1, 6], [1, 4, 1, 5, 9, 1, 6, 7, 8, 1, 4, 3, 2, 0, 1, 6], [1, 0, 2, 3, 4, 1, 4, 1, 5, 9, 1, 6, 7, 8, 1, 6], [1, 8, 7, 6, 1, 5, 9, 1, 4, 1, 4, 3, 2, 0, 1, 6], [1, 8, 7, 6, 1, 4, 1, 5, 9, 1, 4, 3, 2, 0, 1, 6], [1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 9, 1, 6], [1, 8, 7, 6, 1, 9, 5, 1, 0, 2, 3, 4, 1, 4, 1, 6], [1, 8, 7, 6, 1, 9, 5, 1, 4, 1, 0, 2, 3, 4, 1, 6], [1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 9, 1, 6], [6, 7, 8, 1, 6, 1, 9, 5, 1, 4, 1, 4, 3, 2, 0, 1], [1, 8, 7, 6, 1, 9, 5, 1, 4, 1, 4, 3, 2, 0, 1, 6], [6, 1, 8, 7, 6, 1, 9, 5, 1, 4, 1, 4, 3, 2, 0, 1], [6, 7, 8, 1, 5, 9, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1], [6, 7, 8, 1, 4, 1, 5, 9, 1, 6, 1, 4, 3, 2, 0, 1], [6, 7, 8, 1, 0, 2, 3, 4, 1, 4, 1, 5, 9, 1, 6, 1], [6, 7, 8, 1, 6, 1, 5, 9, 1, 4, 1, 4, 3, 2, 0, 1], [6, 7, 8, 1, 6, 1, 4, 1, 5, 9, 1, 4, 3, 2, 0, 1], [6, 7, 8, 1, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 9, 1], [6, 7, 8, 1, 6, 1, 9, 5, 1, 0, 2, 3, 4, 1, 4, 1], [6, 7, 8, 1, 6, 1, 9, 5, 1, 4, 1, 0, 2, 3, 4, 1], [1, 6, 7, 8, 1, 9, 5, 1, 4, 1, 4, 3, 2, 0, 1, 6], [1, 5, 9, 1, 6, 7, 8, 1, 4, 1, 4, 3, 2, 0, 1, 6], [1, 4, 1, 5, 9, 1, 6, 7, 8, 1, 4, 3, 2, 0, 1, 6], [1, 0, 2, 3, 4, 1, 4, 1, 5, 9, 1, 6, 7, 8, 1, 6], [1, 8, 7, 6, 1, 5, 9, 1, 4, 1, 4, 3, 2, 0, 1, 6], [1, 8, 7, 6, 1, 4, 1, 5, 9, 1, 4, 3, 2, 0, 1, 6], [1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 9, 1, 6], [1, 8, 7, 6, 1, 9, 5, 1, 0, 2, 3, 4, 1, 4, 1, 6], [1, 8, 7, 6, 1, 9, 5, 1, 4, 1, 0, 2, 3, 4, 1, 6], [1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 9, 1, 6]]
N euler path candidates : [[6, 7, 8, 1, 6, 1, 9, 5, 1, 4, 1, 4, 3, 2, 0, 1], [1, 8, 7, 6, 1, 9, 5, 1, 4, 1, 4, 3, 2, 0, 1, 6], [6, 1, 8, 7, 6, 1, 9, 5, 1, 4, 1, 4, 3, 2, 0, 1], [6, 7, 8, 1, 5, 9, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1], [6, 7, 8, 1, 4, 1, 5, 9, 1, 6, 1, 4, 3, 2, 0, 1], [6, 7, 8, 1, 0, 2, 3, 4, 1, 4, 1, 5, 9, 1, 6, 1], [6, 7, 8, 1, 6, 1, 5, 9, 1, 4, 1, 4, 3, 2, 0, 1], [6, 7, 8, 1, 6, 1, 4, 1, 5, 9, 1, 4, 3, 2, 0, 1], [6, 7, 8, 1, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 9, 1], [6, 7, 8, 1, 6, 1, 9, 5, 1, 0, 2, 3, 4, 1, 4, 1], [6, 7, 8, 1, 6, 1, 9, 5, 1, 4, 1, 0, 2, 3, 4, 1], [1, 6, 7, 8, 1, 9, 5, 1, 4, 1, 4, 3, 2, 0, 1, 6], [1, 5, 9, 1, 6, 7, 8, 1, 4, 1, 4, 3, 2, 0, 1, 6], [1, 4, 1, 5, 9, 1, 6, 7, 8, 1, 4, 3, 2, 0, 1, 6], [1, 0, 2, 3, 4, 1, 4, 1, 5, 9, 1, 6, 7, 8, 1, 6], [1, 8, 7, 6, 1, 5, 9, 1, 4, 1, 4, 3, 2, 0, 1, 6], [1, 8, 7, 6, 1, 4, 1, 5, 9, 1, 4, 3, 2, 0, 1, 6], [1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 9, 1, 6], [1, 8, 7, 6, 1, 9, 5, 1, 0, 2, 3, 4, 1, 4, 1, 6], [1, 8, 7, 6, 1, 9, 5, 1, 4, 1, 0, 2, 3, 4, 1, 6], [1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 9, 1, 6], [6, 7, 8, 1, 6, 1, 9, 5, 1, 4, 1, 4, 3, 2, 0, 1], [1, 8, 7, 6, 1, 9, 5, 1, 4, 1, 4, 3, 2, 0, 1, 6], [6, 1, 8, 7, 6, 1, 9, 5, 1, 4, 1, 4, 3, 2, 0, 1], [6, 7, 8, 1, 5, 9, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1], [6, 7, 8, 1, 4, 1, 5, 9, 1, 6, 1, 4, 3, 2, 0, 1], [6, 7, 8, 1, 0, 2, 3, 4, 1, 4, 1, 5, 9, 1, 6, 1], [6, 7, 8, 1, 6, 1, 5, 9, 1, 4, 1, 4, 3, 2, 0, 1], [6, 7, 8, 1, 6, 1, 4, 1, 5, 9, 1, 4, 3, 2, 0, 1], [6, 7, 8, 1, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 9, 1], [6, 7, 8, 1, 6, 1, 9, 5, 1, 0, 2, 3, 4, 1, 4, 1], [6, 7, 8, 1, 6, 1, 9, 5, 1, 4, 1, 0, 2, 3, 4, 1], [1, 6, 7, 8, 1, 9, 5, 1, 4, 1, 4, 3, 2, 0, 1, 6], [1, 5, 9, 1, 6, 7, 8, 1, 4, 1, 4, 3, 2, 0, 1, 6], [1, 4, 1, 5, 9, 1, 6, 7, 8, 1, 4, 3, 2, 0, 1, 6], [1, 0, 2, 3, 4, 1, 4, 1, 5, 9, 1, 6, 7, 8, 1, 6], [1, 8, 7, 6, 1, 5, 9, 1, 4, 1, 4, 3, 2, 0, 1, 6], [1, 8, 7, 6, 1, 4, 1, 5, 9, 1, 4, 3, 2, 0, 1, 6], [1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 9, 1, 6], [1, 8, 7, 6, 1, 9, 5, 1, 0, 2, 3, 4, 1, 4, 1, 6], [1, 8, 7, 6, 1, 9, 5, 1, 4, 1, 0, 2, 3, 4, 1, 6], [1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 9, 1, 6]]
P loop is : True
P loop number : [[6, 1, 4], [1, 6, 4]]
P loop count : [[2, 5, 2], [5, 2, 2]]
P loop point : [[[0, 4], [3, 5, 8, 10, 15], [9, 11]], [[0, 4, 7, 9, 14], [3, 15], [8, 10]]]
N loop is : True
N loop number : [[6, 1, 4], [1, 6, 4]]
N loop count : [[2, 5, 2], [5, 2, 2]]
N loop point : [[[0, 4], [3, 5, 8, 10, 15], [9, 11]], [[0, 4, 7, 9, 14], [3, 15], [8, 10]]]
P poly ordering : [['CI', 'B', 'A', 'B', 'A', 'net7', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['A', 'B', 'CI', 'B', 'net7', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['B', 'A', 'B', 'CI', 'A', 'net7', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['CI', 'B', 'A', 'net9', 'dummy', 'net7', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['CI', 'B', 'A', 'A', 'B', 'net9', 'dummy', 'net7', 'B', 'A', 'CI', 'net7', 'CI', 'B', 'A'], ['CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'net7', 'B', 'A'], ['CI', 'B', 'A', 'B', 'A', 'net9', 'dummy', 'net7', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['CI', 'B', 'A', 'B', 'A', 'A', 'B', 'net9', 'dummy', 'net7', 'CI', 'net7', 'CI', 'B', 'A'], ['CI', 'B', 'A', 'B', 'A', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'net7'], ['CI', 'B', 'A', 'B', 'A', 'net7', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI'], ['CI', 'B', 'A', 'B', 'A', 'net7', 'dummy', 'net9', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI'], ['B', 'CI', 'B', 'A', 'net7', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['net9', 'dummy', 'net7', 'B', 'CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['A', 'B', 'net9', 'dummy', 'net7', 'B', 'CI', 'B', 'A', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'net7', 'B', 'CI', 'B', 'A', 'A'], ['A', 'B', 'CI', 'B', 'net9', 'dummy', 'net7', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['A', 'B', 'CI', 'B', 'A', 'B', 'net9', 'dummy', 'net7', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'net7', 'A'], ['A', 'B', 'CI', 'B', 'net7', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'A'], ['A', 'B', 'CI', 'B', 'net7', 'dummy', 'net9', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'A'], ['A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'net7', 'A'], ['CI', 'B', 'A', 'A', 'B', 'net7', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['A', 'B', 'CI', 'A', 'net7', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['A', 'A', 'B', 'CI', 'B', 'net7', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['CI', 'B', 'A', 'net9', 'dummy', 'net7', 'A', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['CI', 'B', 'A', 'CI', 'B', 'net9', 'dummy', 'net7', 'A', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9', 'dummy', 'net7', 'A', 'B'], ['CI', 'B', 'A', 'A', 'B', 'net9', 'dummy', 'net7', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['CI', 'B', 'A', 'A', 'B', 'CI', 'B', 'net9', 'dummy', 'net7', 'A', 'net7', 'CI', 'B', 'A'], ['CI', 'B', 'A', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9', 'dummy', 'net7'], ['CI', 'B', 'A', 'A', 'B', 'net7', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['CI', 'B', 'A', 'A', 'B', 'net7', 'dummy', 'net9', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A'], ['A', 'CI', 'B', 'A', 'net7', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['net9', 'dummy', 'net7', 'A', 'CI', 'B', 'A', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['CI', 'B', 'net9', 'dummy', 'net7', 'A', 'CI', 'B', 'A', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9', 'dummy', 'net7', 'A', 'CI', 'B', 'A', 'B'], ['A', 'B', 'CI', 'A', 'net9', 'dummy', 'net7', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['A', 'B', 'CI', 'A', 'CI', 'B', 'net9', 'dummy', 'net7', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['A', 'B', 'CI', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9', 'dummy', 'net7', 'B'], ['A', 'B', 'CI', 'A', 'net7', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'B'], ['A', 'B', 'CI', 'A', 'net7', 'dummy', 'net9', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B'], ['A', 'B', 'CI', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9', 'dummy', 'net7', 'B']]
N poly ordering : [['CI', 'B', 'A', 'B', 'A', 'net7', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['A', 'B', 'CI', 'B', 'net7', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['B', 'A', 'B', 'CI', 'A', 'net7', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['CI', 'B', 'A', 'net9', 'dummy', 'net7', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['CI', 'B', 'A', 'A', 'B', 'net9', 'dummy', 'net7', 'B', 'A', 'CI', 'net7', 'CI', 'B', 'A'], ['CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'net7', 'B', 'A'], ['CI', 'B', 'A', 'B', 'A', 'net9', 'dummy', 'net7', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['CI', 'B', 'A', 'B', 'A', 'A', 'B', 'net9', 'dummy', 'net7', 'CI', 'net7', 'CI', 'B', 'A'], ['CI', 'B', 'A', 'B', 'A', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'net7'], ['CI', 'B', 'A', 'B', 'A', 'net7', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI'], ['CI', 'B', 'A', 'B', 'A', 'net7', 'dummy', 'net9', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI'], ['B', 'CI', 'B', 'A', 'net7', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['net9', 'dummy', 'net7', 'B', 'CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['A', 'B', 'net9', 'dummy', 'net7', 'B', 'CI', 'B', 'A', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'net7', 'B', 'CI', 'B', 'A', 'A'], ['A', 'B', 'CI', 'B', 'net9', 'dummy', 'net7', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['A', 'B', 'CI', 'B', 'A', 'B', 'net9', 'dummy', 'net7', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'net7', 'A'], ['A', 'B', 'CI', 'B', 'net7', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'A'], ['A', 'B', 'CI', 'B', 'net7', 'dummy', 'net9', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'A'], ['A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'net7', 'A'], ['CI', 'B', 'A', 'A', 'B', 'net7', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['A', 'B', 'CI', 'A', 'net7', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['A', 'A', 'B', 'CI', 'B', 'net7', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['CI', 'B', 'A', 'net9', 'dummy', 'net7', 'A', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['CI', 'B', 'A', 'CI', 'B', 'net9', 'dummy', 'net7', 'A', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9', 'dummy', 'net7', 'A', 'B'], ['CI', 'B', 'A', 'A', 'B', 'net9', 'dummy', 'net7', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['CI', 'B', 'A', 'A', 'B', 'CI', 'B', 'net9', 'dummy', 'net7', 'A', 'net7', 'CI', 'B', 'A'], ['CI', 'B', 'A', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9', 'dummy', 'net7'], ['CI', 'B', 'A', 'A', 'B', 'net7', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['CI', 'B', 'A', 'A', 'B', 'net7', 'dummy', 'net9', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A'], ['A', 'CI', 'B', 'A', 'net7', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['net9', 'dummy', 'net7', 'A', 'CI', 'B', 'A', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['CI', 'B', 'net9', 'dummy', 'net7', 'A', 'CI', 'B', 'A', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9', 'dummy', 'net7', 'A', 'CI', 'B', 'A', 'B'], ['A', 'B', 'CI', 'A', 'net9', 'dummy', 'net7', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['A', 'B', 'CI', 'A', 'CI', 'B', 'net9', 'dummy', 'net7', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['A', 'B', 'CI', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9', 'dummy', 'net7', 'B'], ['A', 'B', 'CI', 'A', 'net7', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'B'], ['A', 'B', 'CI', 'A', 'net7', 'dummy', 'net9', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B'], ['A', 'B', 'CI', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9', 'dummy', 'net7', 'B']]
Poly ordering : [['CI', 'B', 'A', 'B', 'A', 'net7', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['A', 'B', 'CI', 'B', 'net7', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['B', 'A', 'B', 'CI', 'A', 'net7', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9', 'dummy', 'net7', 'A', 'CI', 'B', 'A', 'B'], ['CI', 'B', 'A', 'net9', 'dummy', 'net7', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['CI', 'B', 'A', 'A', 'B', 'net9', 'dummy', 'net7', 'B', 'A', 'CI', 'net7', 'CI', 'B', 'A'], ['CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'net7', 'B', 'A'], ['CI', 'B', 'A', 'B', 'A', 'net9', 'dummy', 'net7', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['CI', 'B', 'A', 'B', 'A', 'A', 'B', 'net9', 'dummy', 'net7', 'CI', 'net7', 'CI', 'B', 'A'], ['CI', 'B', 'A', 'B', 'A', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'net7'], ['CI', 'B', 'A', 'B', 'A', 'net7', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI'], ['CI', 'B', 'A', 'B', 'A', 'net7', 'dummy', 'net9', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI'], ['B', 'CI', 'B', 'A', 'net7', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['net9', 'dummy', 'net7', 'B', 'CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['A', 'B', 'net9', 'dummy', 'net7', 'B', 'CI', 'B', 'A', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'net7', 'B', 'CI', 'B', 'A', 'A'], ['A', 'A', 'B', 'CI', 'B', 'net7', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['A', 'B', 'CI', 'B', 'net9', 'dummy', 'net7', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['A', 'B', 'CI', 'B', 'A', 'B', 'net9', 'dummy', 'net7', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'net7', 'A'], ['A', 'B', 'CI', 'B', 'net7', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'A'], ['A', 'B', 'CI', 'B', 'net7', 'dummy', 'net9', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'A'], ['CI', 'B', 'A', 'A', 'B', 'net7', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['A', 'B', 'CI', 'A', 'net7', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'net7', 'B', 'CI', 'B', 'A', 'A'], ['CI', 'B', 'A', 'net9', 'dummy', 'net7', 'A', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['CI', 'B', 'A', 'CI', 'B', 'net9', 'dummy', 'net7', 'A', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9', 'dummy', 'net7', 'A', 'B'], ['CI', 'B', 'A', 'A', 'B', 'net9', 'dummy', 'net7', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['CI', 'B', 'A', 'A', 'B', 'CI', 'B', 'net9', 'dummy', 'net7', 'A', 'net7', 'CI', 'B', 'A'], ['CI', 'B', 'A', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9', 'dummy', 'net7'], ['CI', 'B', 'A', 'A', 'B', 'net7', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['CI', 'B', 'A', 'A', 'B', 'net7', 'dummy', 'net9', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A'], ['A', 'CI', 'B', 'A', 'net7', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['net9', 'dummy', 'net7', 'A', 'CI', 'B', 'A', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['CI', 'B', 'net9', 'dummy', 'net7', 'A', 'CI', 'B', 'A', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['B', 'A', 'B', 'CI', 'A', 'net7', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['A', 'B', 'CI', 'A', 'net9', 'dummy', 'net7', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['A', 'B', 'CI', 'A', 'CI', 'B', 'net9', 'dummy', 'net7', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['A', 'B', 'CI', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9', 'dummy', 'net7', 'B'], ['A', 'B', 'CI', 'A', 'net7', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'B'], ['A', 'B', 'CI', 'A', 'net7', 'dummy', 'net9', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B']]
P diffusion chain : [['net1', 'net7', 'net19', 'VDD', 'net1', 'VDD', 'CO', 'S', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD'], ['VDD', 'net19', 'net7', 'net1', 'VDD', 'CO', 'S', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'net1'], ['net1', 'VDD', 'net19', 'net7', 'net1', 'VDD', 'CO', 'S', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD'], ['VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD', 'S', 'CO', 'VDD', 'net1', 'net7', 'net19', 'VDD', 'net1'], ['net1', 'net7', 'net19', 'VDD', 'S', 'CO', 'VDD', 'net1', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD'], ['net1', 'net7', 'net19', 'VDD', 'net3', 'VDD', 'S', 'CO', 'VDD', 'net1', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD'], ['net1', 'net7', 'net19', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD', 'S', 'CO', 'VDD', 'net1', 'VDD'], ['net1', 'net7', 'net19', 'VDD', 'net1', 'VDD', 'S', 'CO', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD'], ['net1', 'net7', 'net19', 'VDD', 'net1', 'VDD', 'net3', 'VDD', 'S', 'CO', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD'], ['net1', 'net7', 'net19', 'VDD', 'net1', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD', 'S', 'CO', 'VDD'], ['net1', 'net7', 'net19', 'VDD', 'net1', 'VDD', 'CO', 'S', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD'], ['net1', 'net7', 'net19', 'VDD', 'net1', 'VDD', 'CO', 'S', 'VDD', 'net3', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD'], ['VDD', 'net1', 'net7', 'net19', 'VDD', 'CO', 'S', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'net1'], ['VDD', 'S', 'CO', 'VDD', 'net1', 'net7', 'net19', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'net1'], ['VDD', 'net3', 'VDD', 'S', 'CO', 'VDD', 'net1', 'net7', 'net19', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'net1'], ['VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD', 'S', 'CO', 'VDD', 'net1', 'net7', 'net19', 'VDD', 'net1'], ['net1', 'VDD', 'net19', 'net7', 'net1', 'VDD', 'CO', 'S', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD'], ['VDD', 'net19', 'net7', 'net1', 'VDD', 'S', 'CO', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'net1'], ['VDD', 'net19', 'net7', 'net1', 'VDD', 'net3', 'VDD', 'S', 'CO', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'net1'], ['VDD', 'net19', 'net7', 'net1', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD', 'S', 'CO', 'VDD', 'net1'], ['VDD', 'net19', 'net7', 'net1', 'VDD', 'CO', 'S', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD', 'net1'], ['VDD', 'net19', 'net7', 'net1', 'VDD', 'CO', 'S', 'VDD', 'net3', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net1'], ['net1', 'net7', 'net19', 'VDD', 'net1', 'VDD', 'CO', 'S', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD'], ['VDD', 'net19', 'net7', 'net1', 'VDD', 'CO', 'S', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'net1'], ['VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD', 'S', 'CO', 'VDD', 'net1', 'net7', 'net19', 'VDD', 'net1'], ['net1', 'net7', 'net19', 'VDD', 'S', 'CO', 'VDD', 'net1', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD'], ['net1', 'net7', 'net19', 'VDD', 'net3', 'VDD', 'S', 'CO', 'VDD', 'net1', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD'], ['net1', 'net7', 'net19', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD', 'S', 'CO', 'VDD', 'net1', 'VDD'], ['net1', 'net7', 'net19', 'VDD', 'net1', 'VDD', 'S', 'CO', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD'], ['net1', 'net7', 'net19', 'VDD', 'net1', 'VDD', 'net3', 'VDD', 'S', 'CO', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD'], ['net1', 'net7', 'net19', 'VDD', 'net1', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD', 'S', 'CO', 'VDD'], ['net1', 'net7', 'net19', 'VDD', 'net1', 'VDD', 'CO', 'S', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD'], ['net1', 'net7', 'net19', 'VDD', 'net1', 'VDD', 'CO', 'S', 'VDD', 'net3', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD'], ['VDD', 'net1', 'net7', 'net19', 'VDD', 'CO', 'S', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'net1'], ['VDD', 'S', 'CO', 'VDD', 'net1', 'net7', 'net19', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'net1'], ['VDD', 'net3', 'VDD', 'S', 'CO', 'VDD', 'net1', 'net7', 'net19', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'net1'], ['net1', 'VDD', 'net19', 'net7', 'net1', 'VDD', 'CO', 'S', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD'], ['VDD', 'net19', 'net7', 'net1', 'VDD', 'S', 'CO', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'net1'], ['VDD', 'net19', 'net7', 'net1', 'VDD', 'net3', 'VDD', 'S', 'CO', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'net1'], ['VDD', 'net19', 'net7', 'net1', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD', 'S', 'CO', 'VDD', 'net1'], ['VDD', 'net19', 'net7', 'net1', 'VDD', 'CO', 'S', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD', 'net1'], ['VDD', 'net19', 'net7', 'net1', 'VDD', 'CO', 'S', 'VDD', 'net3', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net1']]
N diffusion chain : [['net5', 'net7', 'net36', 'VSS', 'net5', 'VSS', 'CO', 'S', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS'], ['VSS', 'net36', 'net7', 'net5', 'VSS', 'CO', 'S', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'net5'], ['net5', 'VSS', 'net36', 'net7', 'net5', 'VSS', 'CO', 'S', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS'], ['VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS', 'S', 'CO', 'VSS', 'net5', 'net7', 'net36', 'VSS', 'net5'], ['net5', 'net7', 'net36', 'VSS', 'S', 'CO', 'VSS', 'net5', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS'], ['net5', 'net7', 'net36', 'VSS', 'net42', 'VSS', 'S', 'CO', 'VSS', 'net5', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS'], ['net5', 'net7', 'net36', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS', 'S', 'CO', 'VSS', 'net5', 'VSS'], ['net5', 'net7', 'net36', 'VSS', 'net5', 'VSS', 'S', 'CO', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS'], ['net5', 'net7', 'net36', 'VSS', 'net5', 'VSS', 'net42', 'VSS', 'S', 'CO', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS'], ['net5', 'net7', 'net36', 'VSS', 'net5', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS', 'S', 'CO', 'VSS'], ['net5', 'net7', 'net36', 'VSS', 'net5', 'VSS', 'CO', 'S', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS'], ['net5', 'net7', 'net36', 'VSS', 'net5', 'VSS', 'CO', 'S', 'VSS', 'net42', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS'], ['VSS', 'net5', 'net7', 'net36', 'VSS', 'CO', 'S', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'net5'], ['VSS', 'S', 'CO', 'VSS', 'net5', 'net7', 'net36', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'net5'], ['VSS', 'net42', 'VSS', 'S', 'CO', 'VSS', 'net5', 'net7', 'net36', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'net5'], ['VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS', 'S', 'CO', 'VSS', 'net5', 'net7', 'net36', 'VSS', 'net5'], ['net5', 'VSS', 'net36', 'net7', 'net5', 'VSS', 'CO', 'S', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS'], ['VSS', 'net36', 'net7', 'net5', 'VSS', 'S', 'CO', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'net5'], ['VSS', 'net36', 'net7', 'net5', 'VSS', 'net42', 'VSS', 'S', 'CO', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'net5'], ['VSS', 'net36', 'net7', 'net5', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS', 'S', 'CO', 'VSS', 'net5'], ['VSS', 'net36', 'net7', 'net5', 'VSS', 'CO', 'S', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS', 'net5'], ['VSS', 'net36', 'net7', 'net5', 'VSS', 'CO', 'S', 'VSS', 'net42', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net5'], ['net5', 'net7', 'net36', 'VSS', 'net5', 'VSS', 'CO', 'S', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS'], ['VSS', 'net36', 'net7', 'net5', 'VSS', 'CO', 'S', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'net5'], ['VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS', 'S', 'CO', 'VSS', 'net5', 'net7', 'net36', 'VSS', 'net5'], ['net5', 'net7', 'net36', 'VSS', 'S', 'CO', 'VSS', 'net5', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS'], ['net5', 'net7', 'net36', 'VSS', 'net42', 'VSS', 'S', 'CO', 'VSS', 'net5', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS'], ['net5', 'net7', 'net36', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS', 'S', 'CO', 'VSS', 'net5', 'VSS'], ['net5', 'net7', 'net36', 'VSS', 'net5', 'VSS', 'S', 'CO', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS'], ['net5', 'net7', 'net36', 'VSS', 'net5', 'VSS', 'net42', 'VSS', 'S', 'CO', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS'], ['net5', 'net7', 'net36', 'VSS', 'net5', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS', 'S', 'CO', 'VSS'], ['net5', 'net7', 'net36', 'VSS', 'net5', 'VSS', 'CO', 'S', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS'], ['net5', 'net7', 'net36', 'VSS', 'net5', 'VSS', 'CO', 'S', 'VSS', 'net42', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS'], ['VSS', 'net5', 'net7', 'net36', 'VSS', 'CO', 'S', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'net5'], ['VSS', 'S', 'CO', 'VSS', 'net5', 'net7', 'net36', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'net5'], ['VSS', 'net42', 'VSS', 'S', 'CO', 'VSS', 'net5', 'net7', 'net36', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'net5'], ['net5', 'VSS', 'net36', 'net7', 'net5', 'VSS', 'CO', 'S', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS'], ['VSS', 'net36', 'net7', 'net5', 'VSS', 'S', 'CO', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'net5'], ['VSS', 'net36', 'net7', 'net5', 'VSS', 'net42', 'VSS', 'S', 'CO', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'net5'], ['VSS', 'net36', 'net7', 'net5', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS', 'S', 'CO', 'VSS', 'net5'], ['VSS', 'net36', 'net7', 'net5', 'VSS', 'CO', 'S', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS', 'net5'], ['VSS', 'net36', 'net7', 'net5', 'VSS', 'CO', 'S', 'VSS', 'net42', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net5']]
Diffusion sharing : [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
P Diffusion weight : [38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38]
N Diffusion weight : [26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26]
Total diffusion weight : [60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60]
END

Cell Name : FA_X1
P Vertex : ['net31', 'VDD', 'net29', 'net9', 'net3', 'S', 'net1', 'net7', 'net19', 'CO']
N Vertex : ['net49', 'VSS', 'net47', 'net9', 'net42', 'S', 'net5', 'net7', 'net36', 'CO']
Edge : ['A', 'B', 'CI', 'net7', 'net9', 'dummy']
Tr_info : [[['net31', 'A', 'VDD'], ['net29', 'B', 'net31'], ['net9', 'CI', 'net29'], ['net3', 'net7', 'net9'], ['VDD', 'A', 'net3'], ['net3', 'B', 'VDD'], ['VDD', 'CI', 'net3'], ['S', 'net9', 'VDD'], ['VDD', 'B', 'net1'], ['net1', 'A', 'VDD'], ['net7', 'CI', 'net1'], ['net19', 'B', 'net7'], ['VDD', 'A', 'net19'], ['CO', 'net7', 'VDD'], ['S', 'dummy', 'CO']], [['net49', 'A', 'VSS'], ['net47', 'B', 'net49'], ['net9', 'CI', 'net47'], ['net42', 'net7', 'net9'], ['VSS', 'A', 'net42'], ['net42', 'B', 'VSS'], ['VSS', 'CI', 'net42'], ['S', 'net9', 'VSS'], ['VSS', 'B', 'net5'], ['net5', 'A', 'VSS'], ['net7', 'CI', 'net5'], ['net36', 'B', 'net7'], ['VSS', 'A', 'net36'], ['CO', 'net7', 'VSS'], ['VSS', 'dummy', 'CO']]]
P matrix = [[0, 1, 1, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 3, 1, 2, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0], [0, 3, 0, 1, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 2, 0, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0]]
N matrix = [[0, 1, 1, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 3, 1, 2, 0, 1, 2], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0], [0, 3, 0, 1, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 2, 0, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0], [0, 2, 0, 0, 0, 0, 0, 0, 0, 0]]
P odd degree count : 2
N odd degree count : 2
P start point : [1, 6]
N start point : [5, 6]
Is dummy need : False
P dummy count : 1
N dummy count : 1
P euler path candidates : [[6, 7, 8, 1, 6, 1, 9, 5, 1, 4, 1, 4, 3, 2, 0, 1], [1, 8, 7, 6, 1, 9, 5, 1, 4, 1, 4, 3, 2, 0, 1, 6], [6, 1, 8, 7, 6, 1, 9, 5, 1, 4, 1, 4, 3, 2, 0, 1], [6, 7, 8, 1, 5, 9, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1], [6, 7, 8, 1, 4, 1, 5, 9, 1, 6, 1, 4, 3, 2, 0, 1], [6, 7, 8, 1, 0, 2, 3, 4, 1, 4, 1, 5, 9, 1, 6, 1], [6, 7, 8, 1, 6, 1, 5, 9, 1, 4, 1, 4, 3, 2, 0, 1], [6, 7, 8, 1, 6, 1, 4, 1, 5, 9, 1, 4, 3, 2, 0, 1], [6, 7, 8, 1, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 9, 1], [6, 7, 8, 1, 6, 1, 9, 5, 1, 0, 2, 3, 4, 1, 4, 1], [6, 7, 8, 1, 6, 1, 9, 5, 1, 4, 1, 0, 2, 3, 4, 1], [1, 6, 7, 8, 1, 9, 5, 1, 4, 1, 4, 3, 2, 0, 1, 6], [1, 5, 9, 1, 6, 7, 8, 1, 4, 1, 4, 3, 2, 0, 1, 6], [1, 4, 1, 5, 9, 1, 6, 7, 8, 1, 4, 3, 2, 0, 1, 6], [1, 0, 2, 3, 4, 1, 4, 1, 5, 9, 1, 6, 7, 8, 1, 6], [1, 8, 7, 6, 1, 5, 9, 1, 4, 1, 4, 3, 2, 0, 1, 6], [1, 8, 7, 6, 1, 4, 1, 5, 9, 1, 4, 3, 2, 0, 1, 6], [1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 9, 1, 6], [1, 8, 7, 6, 1, 9, 5, 1, 0, 2, 3, 4, 1, 4, 1, 6], [1, 8, 7, 6, 1, 9, 5, 1, 4, 1, 0, 2, 3, 4, 1, 6], [1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 9, 1, 6], [6, 7, 8, 1, 6, 1, 9, 5, 1, 4, 1, 4, 3, 2, 0, 1], [1, 8, 7, 6, 1, 9, 5, 1, 4, 1, 4, 3, 2, 0, 1, 6], [6, 1, 8, 7, 6, 1, 9, 5, 1, 4, 1, 4, 3, 2, 0, 1], [6, 7, 8, 1, 5, 9, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1], [6, 7, 8, 1, 4, 1, 5, 9, 1, 6, 1, 4, 3, 2, 0, 1], [6, 7, 8, 1, 0, 2, 3, 4, 1, 4, 1, 5, 9, 1, 6, 1], [6, 7, 8, 1, 6, 1, 5, 9, 1, 4, 1, 4, 3, 2, 0, 1], [6, 7, 8, 1, 6, 1, 4, 1, 5, 9, 1, 4, 3, 2, 0, 1], [6, 7, 8, 1, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 9, 1], [6, 7, 8, 1, 6, 1, 9, 5, 1, 0, 2, 3, 4, 1, 4, 1], [6, 7, 8, 1, 6, 1, 9, 5, 1, 4, 1, 0, 2, 3, 4, 1], [1, 6, 7, 8, 1, 9, 5, 1, 4, 1, 4, 3, 2, 0, 1, 6], [1, 5, 9, 1, 6, 7, 8, 1, 4, 1, 4, 3, 2, 0, 1, 6], [1, 4, 1, 5, 9, 1, 6, 7, 8, 1, 4, 3, 2, 0, 1, 6], [1, 0, 2, 3, 4, 1, 4, 1, 5, 9, 1, 6, 7, 8, 1, 6], [1, 8, 7, 6, 1, 5, 9, 1, 4, 1, 4, 3, 2, 0, 1, 6], [1, 8, 7, 6, 1, 4, 1, 5, 9, 1, 4, 3, 2, 0, 1, 6], [1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 9, 1, 6], [1, 8, 7, 6, 1, 9, 5, 1, 0, 2, 3, 4, 1, 4, 1, 6], [1, 8, 7, 6, 1, 9, 5, 1, 4, 1, 0, 2, 3, 4, 1, 6], [1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 9, 1, 6]]
N euler path candidates : [[6, 7, 8, 1, 9, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 5], [5, 1, 9, 1, 8, 7, 6, 1, 4, 1, 4, 3, 2, 0, 1, 6], [6, 1, 9, 1, 8, 7, 6, 1, 4, 1, 4, 3, 2, 0, 1, 5], [6, 7, 8, 1, 6, 1, 9, 1, 4, 1, 4, 3, 2, 0, 1, 5], [6, 7, 8, 1, 4, 1, 6, 1, 9, 1, 4, 3, 2, 0, 1, 5], [6, 7, 8, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 9, 1, 5], [6, 7, 8, 1, 9, 1, 4, 1, 6, 1, 4, 3, 2, 0, 1, 5], [6, 7, 8, 1, 9, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 5], [6, 7, 8, 1, 9, 1, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5], [6, 7, 8, 1, 9, 1, 6, 1, 4, 1, 0, 2, 3, 4, 1, 5], [5, 1, 6, 7, 8, 1, 9, 1, 4, 1, 4, 3, 2, 0, 1, 6], [5, 1, 4, 1, 6, 7, 8, 1, 9, 1, 4, 3, 2, 0, 1, 6], [5, 1, 0, 2, 3, 4, 1, 4, 1, 6, 7, 8, 1, 9, 1, 6], [5, 1, 9, 1, 6, 7, 8, 1, 4, 1, 4, 3, 2, 0, 1, 6], [5, 1, 9, 1, 4, 1, 6, 7, 8, 1, 4, 3, 2, 0, 1, 6], [5, 1, 9, 1, 0, 2, 3, 4, 1, 4, 1, 6, 7, 8, 1, 6], [5, 1, 9, 1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 6], [5, 1, 9, 1, 8, 7, 6, 1, 4, 1, 0, 2, 3, 4, 1, 6], [5, 1, 9, 1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 6], [6, 7, 8, 1, 9, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 5], [5, 1, 9, 1, 8, 7, 6, 1, 4, 1, 4, 3, 2, 0, 1, 6], [6, 1, 9, 1, 8, 7, 6, 1, 4, 1, 4, 3, 2, 0, 1, 5], [6, 7, 8, 1, 6, 1, 9, 1, 4, 1, 4, 3, 2, 0, 1, 5], [6, 7, 8, 1, 4, 1, 6, 1, 9, 1, 4, 3, 2, 0, 1, 5], [6, 7, 8, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 9, 1, 5], [6, 7, 8, 1, 9, 1, 4, 1, 6, 1, 4, 3, 2, 0, 1, 5], [6, 7, 8, 1, 9, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 5], [6, 7, 8, 1, 9, 1, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5], [6, 7, 8, 1, 9, 1, 6, 1, 4, 1, 0, 2, 3, 4, 1, 5], [5, 1, 6, 7, 8, 1, 9, 1, 4, 1, 4, 3, 2, 0, 1, 6], [5, 1, 4, 1, 6, 7, 8, 1, 9, 1, 4, 3, 2, 0, 1, 6], [5, 1, 0, 2, 3, 4, 1, 4, 1, 6, 7, 8, 1, 9, 1, 6], [5, 1, 9, 1, 6, 7, 8, 1, 4, 1, 4, 3, 2, 0, 1, 6], [5, 1, 9, 1, 4, 1, 6, 7, 8, 1, 4, 3, 2, 0, 1, 6], [5, 1, 9, 1, 0, 2, 3, 4, 1, 4, 1, 6, 7, 8, 1, 6], [5, 1, 9, 1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 6], [5, 1, 9, 1, 8, 7, 6, 1, 4, 1, 0, 2, 3, 4, 1, 6], [5, 1, 9, 1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 6]]
P loop is : True
P loop number : [[6, 1, 4], [1, 6, 4]]
P loop count : [[2, 5, 2], [5, 2, 2]]
P loop point : [[[0, 4], [3, 5, 8, 10, 15], [9, 11]], [[0, 4, 7, 9, 14], [3, 15], [8, 10]]]
N loop is : True
N loop number : [[6, 1, 4], [1, 6, 4]]
N loop count : [[2, 5, 2], [5, 2, 2]]
N loop point : [[[0, 6], [3, 5, 7, 9, 14], [8, 10]], [[1, 3, 7, 9, 14], [6, 15], [8, 10]]]
P poly ordering : [['CI', 'B', 'A', 'B', 'A', 'net7', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['A', 'B', 'CI', 'B', 'net7', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['B', 'A', 'B', 'CI', 'A', 'net7', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['CI', 'B', 'A', 'net9', 'dummy', 'net7', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['CI', 'B', 'A', 'A', 'B', 'net9', 'dummy', 'net7', 'B', 'A', 'CI', 'net7', 'CI', 'B', 'A'], ['CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'net7', 'B', 'A'], ['CI', 'B', 'A', 'B', 'A', 'net9', 'dummy', 'net7', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['CI', 'B', 'A', 'B', 'A', 'A', 'B', 'net9', 'dummy', 'net7', 'CI', 'net7', 'CI', 'B', 'A'], ['CI', 'B', 'A', 'B', 'A', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'net7'], ['CI', 'B', 'A', 'B', 'A', 'net7', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI'], ['CI', 'B', 'A', 'B', 'A', 'net7', 'dummy', 'net9', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI'], ['B', 'CI', 'B', 'A', 'net7', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['net9', 'dummy', 'net7', 'B', 'CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['A', 'B', 'net9', 'dummy', 'net7', 'B', 'CI', 'B', 'A', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'net7', 'B', 'CI', 'B', 'A', 'A'], ['A', 'B', 'CI', 'B', 'net9', 'dummy', 'net7', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['A', 'B', 'CI', 'B', 'A', 'B', 'net9', 'dummy', 'net7', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'net7', 'A'], ['A', 'B', 'CI', 'B', 'net7', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'A'], ['A', 'B', 'CI', 'B', 'net7', 'dummy', 'net9', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'A'], ['A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'net7', 'A'], ['CI', 'B', 'A', 'A', 'B', 'net7', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['A', 'B', 'CI', 'A', 'net7', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['A', 'A', 'B', 'CI', 'B', 'net7', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['CI', 'B', 'A', 'net9', 'dummy', 'net7', 'A', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['CI', 'B', 'A', 'CI', 'B', 'net9', 'dummy', 'net7', 'A', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9', 'dummy', 'net7', 'A', 'B'], ['CI', 'B', 'A', 'A', 'B', 'net9', 'dummy', 'net7', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['CI', 'B', 'A', 'A', 'B', 'CI', 'B', 'net9', 'dummy', 'net7', 'A', 'net7', 'CI', 'B', 'A'], ['CI', 'B', 'A', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9', 'dummy', 'net7'], ['CI', 'B', 'A', 'A', 'B', 'net7', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['CI', 'B', 'A', 'A', 'B', 'net7', 'dummy', 'net9', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A'], ['A', 'CI', 'B', 'A', 'net7', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['net9', 'dummy', 'net7', 'A', 'CI', 'B', 'A', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['CI', 'B', 'net9', 'dummy', 'net7', 'A', 'CI', 'B', 'A', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9', 'dummy', 'net7', 'A', 'CI', 'B', 'A', 'B'], ['A', 'B', 'CI', 'A', 'net9', 'dummy', 'net7', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['A', 'B', 'CI', 'A', 'CI', 'B', 'net9', 'dummy', 'net7', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['A', 'B', 'CI', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9', 'dummy', 'net7', 'B'], ['A', 'B', 'CI', 'A', 'net7', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'B'], ['A', 'B', 'CI', 'A', 'net7', 'dummy', 'net9', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B'], ['A', 'B', 'CI', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9', 'dummy', 'net7', 'B']]
N poly ordering : [['CI', 'B', 'A', 'net7', 'dummy', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['net9', 'net7', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['B', 'net7', 'dummy', 'A', 'B', 'CI', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['CI', 'B', 'A', 'B', 'A', 'net7', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['CI', 'B', 'A', 'A', 'B', 'B', 'A', 'net7', 'dummy', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'B', 'A', 'net7', 'dummy', 'net9'], ['CI', 'B', 'A', 'net7', 'dummy', 'A', 'B', 'B', 'A', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['CI', 'B', 'A', 'net7', 'dummy', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'B', 'A', 'net9'], ['CI', 'B', 'A', 'net7', 'dummy', 'B', 'A', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9'], ['CI', 'B', 'A', 'net7', 'dummy', 'B', 'A', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'net9'], ['net9', 'B', 'CI', 'B', 'A', 'net7', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['net9', 'A', 'B', 'B', 'CI', 'B', 'A', 'net7', 'dummy', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['net9', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'B', 'CI', 'B', 'A', 'net7', 'dummy', 'A'], ['net9', 'net7', 'dummy', 'B', 'CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['net9', 'net7', 'dummy', 'A', 'B', 'B', 'CI', 'B', 'A', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['net9', 'net7', 'dummy', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'B', 'CI', 'B', 'A', 'A'], ['net9', 'net7', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'A'], ['net9', 'net7', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'A'], ['net9', 'net7', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'A'], ['CI', 'B', 'A', 'dummy', 'net7', 'A', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['net9', 'dummy', 'net7', 'A', 'B', 'CI', 'A', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['A', 'dummy', 'net7', 'A', 'B', 'CI', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['CI', 'B', 'A', 'A', 'B', 'dummy', 'net7', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['CI', 'B', 'A', 'CI', 'B', 'A', 'B', 'dummy', 'net7', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A', 'B', 'dummy', 'net7', 'net9'], ['CI', 'B', 'A', 'dummy', 'net7', 'CI', 'B', 'A', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['CI', 'B', 'A', 'dummy', 'net7', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A', 'B', 'net9'], ['CI', 'B', 'A', 'dummy', 'net7', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['CI', 'B', 'A', 'dummy', 'net7', 'A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'net9'], ['net9', 'A', 'CI', 'B', 'A', 'dummy', 'net7', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['net9', 'CI', 'B', 'A', 'CI', 'B', 'A', 'dummy', 'net7', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A', 'CI', 'B', 'A', 'dummy', 'net7', 'B'], ['net9', 'dummy', 'net7', 'A', 'CI', 'B', 'A', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['net9', 'dummy', 'net7', 'CI', 'B', 'A', 'CI', 'B', 'A', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['net9', 'dummy', 'net7', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A', 'CI', 'B', 'A', 'B'], ['net9', 'dummy', 'net7', 'A', 'B', 'CI', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'B'], ['net9', 'dummy', 'net7', 'A', 'B', 'CI', 'A', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B'], ['net9', 'dummy', 'net7', 'A', 'B', 'CI', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'B']]
Poly ordering : [['net9', 'dummy', 'net7', 'A', 'CI', 'B', 'A', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'B']]
P diffusion chain : [['VDD', 'S', 'CO', 'VDD', 'net1', 'net7', 'net19', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'net1']]
N diffusion chain : [['S', 'VSS', 'CO', 'VSS', 'net5', 'net7', 'net36', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'net5']]
Diffusion sharing : [3]
P Diffusion weight : [38]
N Diffusion weight : [26]
Total diffusion weight : [61]
END

Cell Name : FA_X1
P Vertex : ['net31', 'VDD', 'net29', 'net9', 'net3', 'S', 'net1', 'net7', 'net19', 'CO']
N Vertex : ['net49', 'VSS', 'net47', 'net9', 'net42', 'S', 'net5', 'net7', 'net36', 'CO']
Edge : ['A', 'B', 'CI', 'net7', 'net9', 'dummy']
Tr_info : [[['net31', 'A', 'VDD'], ['net29', 'B', 'net31'], ['net9', 'CI', 'net29'], ['net3', 'net7', 'net9'], ['VDD', 'A', 'net3'], ['net3', 'B', 'VDD'], ['VDD', 'CI', 'net3'], ['S', 'net9', 'VDD'], ['VDD', 'B', 'net1'], ['net1', 'A', 'VDD'], ['net7', 'CI', 'net1'], ['net19', 'B', 'net7'], ['VDD', 'A', 'net19'], ['CO', 'net7', 'VDD'], ['S', 'dummy', 'CO']], [['net49', 'A', 'VSS'], ['net47', 'B', 'net49'], ['net9', 'CI', 'net47'], ['net42', 'net7', 'net9'], ['VSS', 'A', 'net42'], ['net42', 'B', 'VSS'], ['VSS', 'CI', 'net42'], ['S', 'net9', 'VSS'], ['VSS', 'B', 'net5'], ['net5', 'A', 'VSS'], ['net7', 'CI', 'net5'], ['net36', 'B', 'net7'], ['VSS', 'A', 'net36'], ['CO', 'net7', 'VSS'], ['VSS', 'dummy', 'S']]]
P matrix = [[0, 1, 1, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 3, 1, 2, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0], [0, 3, 0, 1, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 2, 0, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0]]
N matrix = [[0, 1, 1, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 3, 2, 2, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0], [0, 3, 0, 1, 0, 0, 0, 0, 0, 0], [0, 2, 0, 0, 0, 0, 0, 0, 0, 0], [0, 2, 0, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0]]
P odd degree count : 2
N odd degree count : 2
P start point : [1, 6]
N start point : [6, 9]
Is dummy need : False
P dummy count : 1
N dummy count : 1
P euler path candidates : [[6, 7, 8, 1, 6, 1, 9, 5, 1, 4, 1, 4, 3, 2, 0, 1], [1, 8, 7, 6, 1, 9, 5, 1, 4, 1, 4, 3, 2, 0, 1, 6], [6, 1, 8, 7, 6, 1, 9, 5, 1, 4, 1, 4, 3, 2, 0, 1], [6, 7, 8, 1, 5, 9, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1], [6, 7, 8, 1, 4, 1, 5, 9, 1, 6, 1, 4, 3, 2, 0, 1], [6, 7, 8, 1, 0, 2, 3, 4, 1, 4, 1, 5, 9, 1, 6, 1], [6, 7, 8, 1, 6, 1, 5, 9, 1, 4, 1, 4, 3, 2, 0, 1], [6, 7, 8, 1, 6, 1, 4, 1, 5, 9, 1, 4, 3, 2, 0, 1], [6, 7, 8, 1, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 9, 1], [6, 7, 8, 1, 6, 1, 9, 5, 1, 0, 2, 3, 4, 1, 4, 1], [6, 7, 8, 1, 6, 1, 9, 5, 1, 4, 1, 0, 2, 3, 4, 1], [1, 6, 7, 8, 1, 9, 5, 1, 4, 1, 4, 3, 2, 0, 1, 6], [1, 5, 9, 1, 6, 7, 8, 1, 4, 1, 4, 3, 2, 0, 1, 6], [1, 4, 1, 5, 9, 1, 6, 7, 8, 1, 4, 3, 2, 0, 1, 6], [1, 0, 2, 3, 4, 1, 4, 1, 5, 9, 1, 6, 7, 8, 1, 6], [1, 8, 7, 6, 1, 5, 9, 1, 4, 1, 4, 3, 2, 0, 1, 6], [1, 8, 7, 6, 1, 4, 1, 5, 9, 1, 4, 3, 2, 0, 1, 6], [1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 9, 1, 6], [1, 8, 7, 6, 1, 9, 5, 1, 0, 2, 3, 4, 1, 4, 1, 6], [1, 8, 7, 6, 1, 9, 5, 1, 4, 1, 0, 2, 3, 4, 1, 6], [1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 9, 1, 6], [6, 7, 8, 1, 6, 1, 9, 5, 1, 4, 1, 4, 3, 2, 0, 1], [1, 8, 7, 6, 1, 9, 5, 1, 4, 1, 4, 3, 2, 0, 1, 6], [6, 1, 8, 7, 6, 1, 9, 5, 1, 4, 1, 4, 3, 2, 0, 1], [6, 7, 8, 1, 5, 9, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1], [6, 7, 8, 1, 4, 1, 5, 9, 1, 6, 1, 4, 3, 2, 0, 1], [6, 7, 8, 1, 0, 2, 3, 4, 1, 4, 1, 5, 9, 1, 6, 1], [6, 7, 8, 1, 6, 1, 5, 9, 1, 4, 1, 4, 3, 2, 0, 1], [6, 7, 8, 1, 6, 1, 4, 1, 5, 9, 1, 4, 3, 2, 0, 1], [6, 7, 8, 1, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 9, 1], [6, 7, 8, 1, 6, 1, 9, 5, 1, 0, 2, 3, 4, 1, 4, 1], [6, 7, 8, 1, 6, 1, 9, 5, 1, 4, 1, 0, 2, 3, 4, 1], [1, 6, 7, 8, 1, 9, 5, 1, 4, 1, 4, 3, 2, 0, 1, 6], [1, 5, 9, 1, 6, 7, 8, 1, 4, 1, 4, 3, 2, 0, 1, 6], [1, 4, 1, 5, 9, 1, 6, 7, 8, 1, 4, 3, 2, 0, 1, 6], [1, 0, 2, 3, 4, 1, 4, 1, 5, 9, 1, 6, 7, 8, 1, 6], [1, 8, 7, 6, 1, 5, 9, 1, 4, 1, 4, 3, 2, 0, 1, 6], [1, 8, 7, 6, 1, 4, 1, 5, 9, 1, 4, 3, 2, 0, 1, 6], [1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 9, 1, 6], [1, 8, 7, 6, 1, 9, 5, 1, 0, 2, 3, 4, 1, 4, 1, 6], [1, 8, 7, 6, 1, 9, 5, 1, 4, 1, 0, 2, 3, 4, 1, 6], [1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 9, 1, 6]]
N euler path candidates : [[9, 1, 8, 7, 6, 1, 5, 1, 4, 1, 4, 3, 2, 0, 1, 6], [6, 7, 8, 1, 6, 1, 5, 1, 4, 1, 4, 3, 2, 0, 1, 9], [9, 1, 6, 7, 8, 1, 5, 1, 4, 1, 4, 3, 2, 0, 1, 6], [9, 1, 5, 1, 6, 7, 8, 1, 4, 1, 4, 3, 2, 0, 1, 6], [9, 1, 4, 1, 5, 1, 6, 7, 8, 1, 4, 3, 2, 0, 1, 6], [9, 1, 0, 2, 3, 4, 1, 4, 1, 5, 1, 6, 7, 8, 1, 6], [9, 1, 8, 7, 6, 1, 4, 1, 5, 1, 4, 3, 2, 0, 1, 6], [9, 1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 1, 6], [9, 1, 8, 7, 6, 1, 5, 1, 0, 2, 3, 4, 1, 4, 1, 6], [9, 1, 8, 7, 6, 1, 5, 1, 4, 1, 0, 2, 3, 4, 1, 6], [9, 1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 1, 6], [6, 1, 8, 7, 6, 1, 5, 1, 4, 1, 4, 3, 2, 0, 1, 9], [6, 7, 8, 1, 5, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 9], [6, 7, 8, 1, 4, 1, 5, 1, 6, 1, 4, 3, 2, 0, 1, 9], [6, 7, 8, 1, 0, 2, 3, 4, 1, 4, 1, 5, 1, 6, 1, 9], [6, 7, 8, 1, 6, 1, 4, 1, 5, 1, 4, 3, 2, 0, 1, 9], [6, 7, 8, 1, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 1, 9], [6, 7, 8, 1, 6, 1, 5, 1, 0, 2, 3, 4, 1, 4, 1, 9], [6, 7, 8, 1, 6, 1, 5, 1, 4, 1, 0, 2, 3, 4, 1, 9], [9, 1, 8, 7, 6, 1, 5, 1, 4, 1, 4, 3, 2, 0, 1, 6], [6, 7, 8, 1, 6, 1, 5, 1, 4, 1, 4, 3, 2, 0, 1, 9], [9, 1, 6, 7, 8, 1, 5, 1, 4, 1, 4, 3, 2, 0, 1, 6], [9, 1, 5, 1, 6, 7, 8, 1, 4, 1, 4, 3, 2, 0, 1, 6], [9, 1, 4, 1, 5, 1, 6, 7, 8, 1, 4, 3, 2, 0, 1, 6], [9, 1, 0, 2, 3, 4, 1, 4, 1, 5, 1, 6, 7, 8, 1, 6], [9, 1, 8, 7, 6, 1, 4, 1, 5, 1, 4, 3, 2, 0, 1, 6], [9, 1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 1, 6], [9, 1, 8, 7, 6, 1, 5, 1, 0, 2, 3, 4, 1, 4, 1, 6], [9, 1, 8, 7, 6, 1, 5, 1, 4, 1, 0, 2, 3, 4, 1, 6], [9, 1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 1, 6], [6, 1, 8, 7, 6, 1, 5, 1, 4, 1, 4, 3, 2, 0, 1, 9], [6, 7, 8, 1, 5, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 9], [6, 7, 8, 1, 4, 1, 5, 1, 6, 1, 4, 3, 2, 0, 1, 9], [6, 7, 8, 1, 0, 2, 3, 4, 1, 4, 1, 5, 1, 6, 1, 9], [6, 7, 8, 1, 6, 1, 4, 1, 5, 1, 4, 3, 2, 0, 1, 9], [6, 7, 8, 1, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 1, 9], [6, 7, 8, 1, 6, 1, 5, 1, 0, 2, 3, 4, 1, 4, 1, 9], [6, 7, 8, 1, 6, 1, 5, 1, 4, 1, 0, 2, 3, 4, 1, 9]]
P loop is : True
P loop number : [[6, 1, 4], [1, 6, 4]]
P loop count : [[2, 5, 2], [5, 2, 2]]
P loop point : [[[0, 4], [3, 5, 8, 10, 15], [9, 11]], [[0, 4, 7, 9, 14], [3, 15], [8, 10]]]
N loop is : True
N loop number : [[1, 6, 4], [6, 1, 4]]
N loop count : [[5, 2, 2], [2, 5, 2]]
N loop point : [[[1, 5, 7, 9, 14], [4, 15], [8, 10]], [[0, 4], [3, 5, 7, 9, 14], [8, 10]]]
P poly ordering : [['CI', 'B', 'A', 'B', 'A', 'net7', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['A', 'B', 'CI', 'B', 'net7', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['B', 'A', 'B', 'CI', 'A', 'net7', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['CI', 'B', 'A', 'net9', 'dummy', 'net7', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['CI', 'B', 'A', 'A', 'B', 'net9', 'dummy', 'net7', 'B', 'A', 'CI', 'net7', 'CI', 'B', 'A'], ['CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'net7', 'B', 'A'], ['CI', 'B', 'A', 'B', 'A', 'net9', 'dummy', 'net7', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['CI', 'B', 'A', 'B', 'A', 'A', 'B', 'net9', 'dummy', 'net7', 'CI', 'net7', 'CI', 'B', 'A'], ['CI', 'B', 'A', 'B', 'A', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'net7'], ['CI', 'B', 'A', 'B', 'A', 'net7', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI'], ['CI', 'B', 'A', 'B', 'A', 'net7', 'dummy', 'net9', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI'], ['B', 'CI', 'B', 'A', 'net7', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['net9', 'dummy', 'net7', 'B', 'CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['A', 'B', 'net9', 'dummy', 'net7', 'B', 'CI', 'B', 'A', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'net7', 'B', 'CI', 'B', 'A', 'A'], ['A', 'B', 'CI', 'B', 'net9', 'dummy', 'net7', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['A', 'B', 'CI', 'B', 'A', 'B', 'net9', 'dummy', 'net7', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'net7', 'A'], ['A', 'B', 'CI', 'B', 'net7', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'A'], ['A', 'B', 'CI', 'B', 'net7', 'dummy', 'net9', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'A'], ['A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'net7', 'A'], ['CI', 'B', 'A', 'A', 'B', 'net7', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['A', 'B', 'CI', 'A', 'net7', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['A', 'A', 'B', 'CI', 'B', 'net7', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['CI', 'B', 'A', 'net9', 'dummy', 'net7', 'A', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['CI', 'B', 'A', 'CI', 'B', 'net9', 'dummy', 'net7', 'A', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9', 'dummy', 'net7', 'A', 'B'], ['CI', 'B', 'A', 'A', 'B', 'net9', 'dummy', 'net7', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['CI', 'B', 'A', 'A', 'B', 'CI', 'B', 'net9', 'dummy', 'net7', 'A', 'net7', 'CI', 'B', 'A'], ['CI', 'B', 'A', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9', 'dummy', 'net7'], ['CI', 'B', 'A', 'A', 'B', 'net7', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['CI', 'B', 'A', 'A', 'B', 'net7', 'dummy', 'net9', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A'], ['A', 'CI', 'B', 'A', 'net7', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['net9', 'dummy', 'net7', 'A', 'CI', 'B', 'A', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['CI', 'B', 'net9', 'dummy', 'net7', 'A', 'CI', 'B', 'A', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9', 'dummy', 'net7', 'A', 'CI', 'B', 'A', 'B'], ['A', 'B', 'CI', 'A', 'net9', 'dummy', 'net7', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['A', 'B', 'CI', 'A', 'CI', 'B', 'net9', 'dummy', 'net7', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['A', 'B', 'CI', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9', 'dummy', 'net7', 'B'], ['A', 'B', 'CI', 'A', 'net7', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'B'], ['A', 'B', 'CI', 'A', 'net7', 'dummy', 'net9', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B'], ['A', 'B', 'CI', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9', 'dummy', 'net7', 'B']]
N poly ordering : [['net7', 'A', 'B', 'CI', 'B', 'net9', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['CI', 'B', 'A', 'B', 'A', 'net9', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['net7', 'B', 'CI', 'B', 'A', 'net9', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['net7', 'net9', 'dummy', 'B', 'CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['net7', 'A', 'B', 'net9', 'dummy', 'B', 'CI', 'B', 'A', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['net7', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'B', 'CI', 'B', 'A', 'A'], ['net7', 'A', 'B', 'CI', 'B', 'A', 'B', 'net9', 'dummy', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['net7', 'A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'A'], ['net7', 'A', 'B', 'CI', 'B', 'net9', 'dummy', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'A'], ['net7', 'A', 'B', 'CI', 'B', 'net9', 'dummy', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'A'], ['net7', 'A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'A'], ['B', 'A', 'B', 'CI', 'A', 'net9', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['CI', 'B', 'A', 'net9', 'dummy', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['CI', 'B', 'A', 'A', 'B', 'net9', 'dummy', 'B', 'A', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'B', 'A', 'net7'], ['CI', 'B', 'A', 'B', 'A', 'A', 'B', 'net9', 'dummy', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['CI', 'B', 'A', 'B', 'A', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'net7'], ['CI', 'B', 'A', 'B', 'A', 'net9', 'dummy', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net7'], ['CI', 'B', 'A', 'B', 'A', 'net9', 'dummy', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'net7'], ['net7', 'A', 'B', 'CI', 'A', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['CI', 'B', 'A', 'A', 'B', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['net7', 'A', 'CI', 'B', 'A', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['net7', 'dummy', 'net9', 'A', 'CI', 'B', 'A', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['net7', 'CI', 'B', 'dummy', 'net9', 'A', 'CI', 'B', 'A', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['net7', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'dummy', 'net9', 'A', 'CI', 'B', 'A', 'B'], ['net7', 'A', 'B', 'CI', 'A', 'CI', 'B', 'dummy', 'net9', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['net7', 'A', 'B', 'CI', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'dummy', 'net9', 'B'], ['net7', 'A', 'B', 'CI', 'A', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'B'], ['net7', 'A', 'B', 'CI', 'A', 'dummy', 'net9', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B'], ['net7', 'A', 'B', 'CI', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'dummy', 'net9', 'B'], ['A', 'A', 'B', 'CI', 'B', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['CI', 'B', 'A', 'dummy', 'net9', 'A', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['CI', 'B', 'A', 'CI', 'B', 'dummy', 'net9', 'A', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'dummy', 'net9', 'A', 'B', 'net7'], ['CI', 'B', 'A', 'A', 'B', 'CI', 'B', 'dummy', 'net9', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['CI', 'B', 'A', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'dummy', 'net9', 'net7'], ['CI', 'B', 'A', 'A', 'B', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['CI', 'B', 'A', 'A', 'B', 'dummy', 'net9', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'net7']]
Poly ordering : [['CI', 'B', 'A', 'B', 'A', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'net7']]
P diffusion chain : [['net1', 'net7', 'net19', 'VDD', 'net1', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD', 'S', 'CO', 'VDD']]
N diffusion chain : [['net5', 'net7', 'net36', 'VSS', 'net5', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS', 'S', 'VSS', 'CO']]
Diffusion sharing : [3]
P Diffusion weight : [38]
N Diffusion weight : [26]
Total diffusion weight : [61]
END

Cell Name : FA_X1
P Vertex : ['net31', 'VDD', 'net29', 'net9', 'net3', 'S', 'net1', 'net7', 'net19', 'CO']
N Vertex : ['net49', 'VSS', 'net47', 'net9', 'net42', 'S', 'net5', 'net7', 'net36', 'CO']
Edge : ['A', 'B', 'CI', 'net7', 'net9', 'dummy']
Tr_info : [[['net31', 'A', 'VDD'], ['net29', 'B', 'net31'], ['net9', 'CI', 'net29'], ['net3', 'net7', 'net9'], ['VDD', 'A', 'net3'], ['net3', 'B', 'VDD'], ['VDD', 'CI', 'net3'], ['S', 'net9', 'VDD'], ['VDD', 'B', 'net1'], ['net1', 'A', 'VDD'], ['net7', 'CI', 'net1'], ['net19', 'B', 'net7'], ['VDD', 'A', 'net19'], ['CO', 'net7', 'VDD'], ['S', 'dummy', 'net1']], [['net49', 'A', 'VSS'], ['net47', 'B', 'net49'], ['net9', 'CI', 'net47'], ['net42', 'net7', 'net9'], ['VSS', 'A', 'net42'], ['net42', 'B', 'VSS'], ['VSS', 'CI', 'net42'], ['S', 'net9', 'VSS'], ['VSS', 'B', 'net5'], ['net5', 'A', 'VSS'], ['net7', 'CI', 'net5'], ['net36', 'B', 'net7'], ['VSS', 'A', 'net36'], ['CO', 'net7', 'VSS'], ['S', 'dummy', 'net5']]]
P matrix = [[0, 1, 1, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 3, 1, 2, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0], [0, 3, 0, 1, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0], [0, 2, 0, 0, 0, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0]]
N matrix = [[0, 1, 1, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 3, 1, 2, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0], [0, 3, 0, 1, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0], [0, 2, 0, 0, 0, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0]]
P odd degree count : 2
N odd degree count : 2
P start point : [1, 9]
N start point : [1, 9]
Is dummy need : False
P dummy count : 1
N dummy count : 1
P euler path candidates : [[9, 1, 8, 7, 6, 1, 6, 5, 1, 4, 1, 4, 3, 2, 0, 1], [1, 8, 7, 6, 1, 6, 5, 1, 4, 1, 4, 3, 2, 0, 1, 9], [9, 1, 6, 7, 8, 1, 6, 5, 1, 4, 1, 4, 3, 2, 0, 1], [9, 1, 5, 6, 1, 6, 7, 8, 1, 4, 1, 4, 3, 2, 0, 1], [9, 1, 4, 1, 5, 6, 1, 6, 7, 8, 1, 4, 3, 2, 0, 1], [9, 1, 0, 2, 3, 4, 1, 4, 1, 5, 6, 1, 6, 7, 8, 1], [9, 1, 8, 7, 6, 1, 5, 6, 1, 4, 1, 4, 3, 2, 0, 1], [9, 1, 8, 7, 6, 1, 4, 1, 5, 6, 1, 4, 3, 2, 0, 1], [9, 1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 6, 1], [9, 1, 8, 7, 6, 1, 6, 5, 1, 0, 2, 3, 4, 1, 4, 1], [9, 1, 8, 7, 6, 1, 6, 5, 1, 4, 1, 0, 2, 3, 4, 1], [1, 6, 7, 8, 1, 6, 5, 1, 4, 1, 4, 3, 2, 0, 1, 9], [1, 5, 6, 1, 6, 7, 8, 1, 4, 1, 4, 3, 2, 0, 1, 9], [1, 4, 1, 5, 6, 1, 6, 7, 8, 1, 4, 3, 2, 0, 1, 9], [1, 0, 2, 3, 4, 1, 4, 1, 5, 6, 1, 6, 7, 8, 1, 9], [1, 8, 7, 6, 1, 5, 6, 1, 4, 1, 4, 3, 2, 0, 1, 9], [1, 8, 7, 6, 1, 4, 1, 5, 6, 1, 4, 3, 2, 0, 1, 9], [1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 6, 1, 9], [1, 8, 7, 6, 1, 6, 5, 1, 0, 2, 3, 4, 1, 4, 1, 9], [1, 8, 7, 6, 1, 6, 5, 1, 4, 1, 0, 2, 3, 4, 1, 9], [9, 1, 8, 7, 6, 1, 6, 5, 1, 4, 1, 4, 3, 2, 0, 1], [1, 8, 7, 6, 1, 6, 5, 1, 4, 1, 4, 3, 2, 0, 1, 9], [9, 1, 6, 7, 8, 1, 6, 5, 1, 4, 1, 4, 3, 2, 0, 1], [9, 1, 5, 6, 1, 6, 7, 8, 1, 4, 1, 4, 3, 2, 0, 1], [9, 1, 4, 1, 5, 6, 1, 6, 7, 8, 1, 4, 3, 2, 0, 1], [9, 1, 0, 2, 3, 4, 1, 4, 1, 5, 6, 1, 6, 7, 8, 1], [9, 1, 8, 7, 6, 1, 5, 6, 1, 4, 1, 4, 3, 2, 0, 1], [9, 1, 8, 7, 6, 1, 4, 1, 5, 6, 1, 4, 3, 2, 0, 1], [9, 1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 6, 1], [9, 1, 8, 7, 6, 1, 6, 5, 1, 0, 2, 3, 4, 1, 4, 1], [9, 1, 8, 7, 6, 1, 6, 5, 1, 4, 1, 0, 2, 3, 4, 1], [1, 6, 7, 8, 1, 6, 5, 1, 4, 1, 4, 3, 2, 0, 1, 9], [1, 5, 6, 1, 6, 7, 8, 1, 4, 1, 4, 3, 2, 0, 1, 9], [1, 4, 1, 5, 6, 1, 6, 7, 8, 1, 4, 3, 2, 0, 1, 9], [1, 0, 2, 3, 4, 1, 4, 1, 5, 6, 1, 6, 7, 8, 1, 9], [1, 8, 7, 6, 1, 5, 6, 1, 4, 1, 4, 3, 2, 0, 1, 9], [1, 8, 7, 6, 1, 4, 1, 5, 6, 1, 4, 3, 2, 0, 1, 9], [1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 6, 1, 9], [1, 8, 7, 6, 1, 6, 5, 1, 0, 2, 3, 4, 1, 4, 1, 9], [1, 8, 7, 6, 1, 6, 5, 1, 4, 1, 0, 2, 3, 4, 1, 9]]
N euler path candidates : [[9, 1, 8, 7, 6, 1, 6, 5, 1, 4, 1, 4, 3, 2, 0, 1], [1, 8, 7, 6, 1, 6, 5, 1, 4, 1, 4, 3, 2, 0, 1, 9], [9, 1, 6, 7, 8, 1, 6, 5, 1, 4, 1, 4, 3, 2, 0, 1], [9, 1, 5, 6, 1, 6, 7, 8, 1, 4, 1, 4, 3, 2, 0, 1], [9, 1, 4, 1, 5, 6, 1, 6, 7, 8, 1, 4, 3, 2, 0, 1], [9, 1, 0, 2, 3, 4, 1, 4, 1, 5, 6, 1, 6, 7, 8, 1], [9, 1, 8, 7, 6, 1, 5, 6, 1, 4, 1, 4, 3, 2, 0, 1], [9, 1, 8, 7, 6, 1, 4, 1, 5, 6, 1, 4, 3, 2, 0, 1], [9, 1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 6, 1], [9, 1, 8, 7, 6, 1, 6, 5, 1, 0, 2, 3, 4, 1, 4, 1], [9, 1, 8, 7, 6, 1, 6, 5, 1, 4, 1, 0, 2, 3, 4, 1], [1, 6, 7, 8, 1, 6, 5, 1, 4, 1, 4, 3, 2, 0, 1, 9], [1, 5, 6, 1, 6, 7, 8, 1, 4, 1, 4, 3, 2, 0, 1, 9], [1, 4, 1, 5, 6, 1, 6, 7, 8, 1, 4, 3, 2, 0, 1, 9], [1, 0, 2, 3, 4, 1, 4, 1, 5, 6, 1, 6, 7, 8, 1, 9], [1, 8, 7, 6, 1, 5, 6, 1, 4, 1, 4, 3, 2, 0, 1, 9], [1, 8, 7, 6, 1, 4, 1, 5, 6, 1, 4, 3, 2, 0, 1, 9], [1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 6, 1, 9], [1, 8, 7, 6, 1, 6, 5, 1, 0, 2, 3, 4, 1, 4, 1, 9], [1, 8, 7, 6, 1, 6, 5, 1, 4, 1, 0, 2, 3, 4, 1, 9], [9, 1, 8, 7, 6, 1, 6, 5, 1, 4, 1, 4, 3, 2, 0, 1], [1, 8, 7, 6, 1, 6, 5, 1, 4, 1, 4, 3, 2, 0, 1, 9], [9, 1, 6, 7, 8, 1, 6, 5, 1, 4, 1, 4, 3, 2, 0, 1], [9, 1, 5, 6, 1, 6, 7, 8, 1, 4, 1, 4, 3, 2, 0, 1], [9, 1, 4, 1, 5, 6, 1, 6, 7, 8, 1, 4, 3, 2, 0, 1], [9, 1, 0, 2, 3, 4, 1, 4, 1, 5, 6, 1, 6, 7, 8, 1], [9, 1, 8, 7, 6, 1, 5, 6, 1, 4, 1, 4, 3, 2, 0, 1], [9, 1, 8, 7, 6, 1, 4, 1, 5, 6, 1, 4, 3, 2, 0, 1], [9, 1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 6, 1], [9, 1, 8, 7, 6, 1, 6, 5, 1, 0, 2, 3, 4, 1, 4, 1], [9, 1, 8, 7, 6, 1, 6, 5, 1, 4, 1, 0, 2, 3, 4, 1], [1, 6, 7, 8, 1, 6, 5, 1, 4, 1, 4, 3, 2, 0, 1, 9], [1, 5, 6, 1, 6, 7, 8, 1, 4, 1, 4, 3, 2, 0, 1, 9], [1, 4, 1, 5, 6, 1, 6, 7, 8, 1, 4, 3, 2, 0, 1, 9], [1, 0, 2, 3, 4, 1, 4, 1, 5, 6, 1, 6, 7, 8, 1, 9], [1, 8, 7, 6, 1, 5, 6, 1, 4, 1, 4, 3, 2, 0, 1, 9], [1, 8, 7, 6, 1, 4, 1, 5, 6, 1, 4, 3, 2, 0, 1, 9], [1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 6, 1, 9], [1, 8, 7, 6, 1, 6, 5, 1, 0, 2, 3, 4, 1, 4, 1, 9], [1, 8, 7, 6, 1, 6, 5, 1, 4, 1, 0, 2, 3, 4, 1, 9]]
P loop is : True
P loop number : [[1, 6, 4], [1, 6, 4]]
P loop count : [[5, 2, 2], [5, 2, 2]]
P loop point : [[[1, 5, 8, 10, 15], [4, 6], [9, 11]], [[0, 4, 7, 9, 14], [3, 5], [8, 10]]]
N loop is : True
N loop number : [[1, 6, 4], [1, 6, 4]]
N loop count : [[5, 2, 2], [5, 2, 2]]
N loop point : [[[1, 5, 8, 10, 15], [4, 6], [9, 11]], [[0, 4, 7, 9, 14], [3, 5], [8, 10]]]
P poly ordering : [['net7', 'A', 'B', 'CI', 'B', 'A', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['A', 'B', 'CI', 'B', 'A', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['net7', 'B', 'CI', 'B', 'A', 'A', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['net7', 'net9', 'dummy', 'B', 'A', 'CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['net7', 'A', 'B', 'net9', 'dummy', 'B', 'A', 'CI', 'B', 'A', 'CI', 'net7', 'CI', 'B', 'A'], ['net7', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'B', 'A', 'CI', 'B', 'A'], ['net7', 'A', 'B', 'CI', 'B', 'net9', 'dummy', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['net7', 'A', 'B', 'CI', 'B', 'A', 'B', 'net9', 'dummy', 'A', 'CI', 'net7', 'CI', 'B', 'A'], ['net7', 'A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'A'], ['net7', 'A', 'B', 'CI', 'B', 'A', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI'], ['net7', 'A', 'B', 'CI', 'B', 'A', 'dummy', 'net9', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI'], ['B', 'CI', 'B', 'A', 'A', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['net9', 'dummy', 'B', 'A', 'CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['A', 'B', 'net9', 'dummy', 'B', 'A', 'CI', 'B', 'A', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'B', 'A', 'CI', 'B', 'A', 'net7'], ['A', 'B', 'CI', 'B', 'net9', 'dummy', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['A', 'B', 'CI', 'B', 'A', 'B', 'net9', 'dummy', 'A', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'A', 'net7'], ['A', 'B', 'CI', 'B', 'A', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net7'], ['A', 'B', 'CI', 'B', 'A', 'dummy', 'net9', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'net7'], ['net7', 'A', 'B', 'CI', 'A', 'B', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['A', 'B', 'CI', 'A', 'B', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['net7', 'A', 'CI', 'B', 'A', 'B', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['net7', 'net9', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['net7', 'CI', 'B', 'net9', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'A', 'net7', 'CI', 'B', 'A'], ['net7', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9', 'dummy', 'A', 'B', 'CI', 'B', 'A'], ['net7', 'A', 'B', 'CI', 'A', 'net9', 'dummy', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['net7', 'A', 'B', 'CI', 'A', 'CI', 'B', 'net9', 'dummy', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['net7', 'A', 'B', 'CI', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9', 'dummy', 'B'], ['net7', 'A', 'B', 'CI', 'A', 'B', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['net7', 'A', 'B', 'CI', 'A', 'B', 'dummy', 'net9', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A'], ['A', 'CI', 'B', 'A', 'B', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['net9', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['CI', 'B', 'net9', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'net7'], ['A', 'B', 'CI', 'A', 'net9', 'dummy', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['A', 'B', 'CI', 'A', 'CI', 'B', 'net9', 'dummy', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['A', 'B', 'CI', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9', 'dummy', 'B', 'net7'], ['A', 'B', 'CI', 'A', 'B', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['A', 'B', 'CI', 'A', 'B', 'dummy', 'net9', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'net7']]
N poly ordering : [['net7', 'A', 'B', 'CI', 'B', 'A', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['A', 'B', 'CI', 'B', 'A', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['net7', 'B', 'CI', 'B', 'A', 'A', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['net7', 'net9', 'dummy', 'B', 'A', 'CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['net7', 'A', 'B', 'net9', 'dummy', 'B', 'A', 'CI', 'B', 'A', 'CI', 'net7', 'CI', 'B', 'A'], ['net7', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'B', 'A', 'CI', 'B', 'A'], ['net7', 'A', 'B', 'CI', 'B', 'net9', 'dummy', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['net7', 'A', 'B', 'CI', 'B', 'A', 'B', 'net9', 'dummy', 'A', 'CI', 'net7', 'CI', 'B', 'A'], ['net7', 'A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'A'], ['net7', 'A', 'B', 'CI', 'B', 'A', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI'], ['net7', 'A', 'B', 'CI', 'B', 'A', 'dummy', 'net9', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI'], ['B', 'CI', 'B', 'A', 'A', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['net9', 'dummy', 'B', 'A', 'CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['A', 'B', 'net9', 'dummy', 'B', 'A', 'CI', 'B', 'A', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'B', 'A', 'CI', 'B', 'A', 'net7'], ['A', 'B', 'CI', 'B', 'net9', 'dummy', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['A', 'B', 'CI', 'B', 'A', 'B', 'net9', 'dummy', 'A', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'A', 'net7'], ['A', 'B', 'CI', 'B', 'A', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net7'], ['A', 'B', 'CI', 'B', 'A', 'dummy', 'net9', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'net7'], ['net7', 'A', 'B', 'CI', 'A', 'B', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['A', 'B', 'CI', 'A', 'B', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['net7', 'A', 'CI', 'B', 'A', 'B', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['net7', 'net9', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['net7', 'CI', 'B', 'net9', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'A', 'net7', 'CI', 'B', 'A'], ['net7', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9', 'dummy', 'A', 'B', 'CI', 'B', 'A'], ['net7', 'A', 'B', 'CI', 'A', 'net9', 'dummy', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['net7', 'A', 'B', 'CI', 'A', 'CI', 'B', 'net9', 'dummy', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['net7', 'A', 'B', 'CI', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9', 'dummy', 'B'], ['net7', 'A', 'B', 'CI', 'A', 'B', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['net7', 'A', 'B', 'CI', 'A', 'B', 'dummy', 'net9', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A'], ['A', 'CI', 'B', 'A', 'B', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['net9', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['CI', 'B', 'net9', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'net7'], ['A', 'B', 'CI', 'A', 'net9', 'dummy', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['A', 'B', 'CI', 'A', 'CI', 'B', 'net9', 'dummy', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['A', 'B', 'CI', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9', 'dummy', 'B', 'net7'], ['A', 'B', 'CI', 'A', 'B', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['A', 'B', 'CI', 'A', 'B', 'dummy', 'net9', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'net7']]
Poly ordering : [['net7', 'A', 'B', 'CI', 'B', 'A', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'net7'], ['A', 'B', 'CI', 'B', 'A', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['net7', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9', 'dummy', 'A', 'B', 'CI', 'B', 'A'], ['net7', 'B', 'CI', 'B', 'A', 'A', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['net7', 'net9', 'dummy', 'B', 'A', 'CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['net7', 'A', 'B', 'net9', 'dummy', 'B', 'A', 'CI', 'B', 'A', 'CI', 'net7', 'CI', 'B', 'A'], ['net7', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'B', 'A', 'CI', 'B', 'A'], ['A', 'B', 'CI', 'A', 'B', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['net7', 'A', 'B', 'CI', 'B', 'net9', 'dummy', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['net7', 'A', 'B', 'CI', 'B', 'A', 'B', 'net9', 'dummy', 'A', 'CI', 'net7', 'CI', 'B', 'A'], ['net7', 'A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'A'], ['net7', 'A', 'B', 'CI', 'B', 'A', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI'], ['net7', 'A', 'B', 'CI', 'B', 'A', 'dummy', 'net9', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI'], ['B', 'CI', 'B', 'A', 'A', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['net9', 'dummy', 'B', 'A', 'CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['A', 'B', 'net9', 'dummy', 'B', 'A', 'CI', 'B', 'A', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'B', 'A', 'CI', 'B', 'A', 'net7'], ['net7', 'A', 'B', 'CI', 'A', 'B', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['A', 'B', 'CI', 'B', 'net9', 'dummy', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['A', 'B', 'CI', 'B', 'A', 'B', 'net9', 'dummy', 'A', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'A', 'net7'], ['A', 'B', 'CI', 'B', 'A', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net7'], ['A', 'B', 'CI', 'B', 'A', 'dummy', 'net9', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'net7'], ['A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'B', 'A', 'CI', 'B', 'A', 'net7'], ['net7', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'B', 'A', 'CI', 'B', 'A'], ['net7', 'A', 'CI', 'B', 'A', 'B', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['net7', 'net9', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['net7', 'CI', 'B', 'net9', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'A', 'net7', 'CI', 'B', 'A'], ['A', 'B', 'CI', 'B', 'A', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['net7', 'A', 'B', 'CI', 'A', 'net9', 'dummy', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['net7', 'A', 'B', 'CI', 'A', 'CI', 'B', 'net9', 'dummy', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['net7', 'A', 'B', 'CI', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9', 'dummy', 'B'], ['net7', 'A', 'B', 'CI', 'A', 'B', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['net7', 'A', 'B', 'CI', 'A', 'B', 'dummy', 'net9', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A'], ['A', 'CI', 'B', 'A', 'B', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['net9', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['CI', 'B', 'net9', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['net7', 'A', 'B', 'CI', 'B', 'A', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['A', 'B', 'CI', 'A', 'net9', 'dummy', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['A', 'B', 'CI', 'A', 'CI', 'B', 'net9', 'dummy', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['A', 'B', 'CI', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9', 'dummy', 'B', 'net7'], ['A', 'B', 'CI', 'A', 'B', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['A', 'B', 'CI', 'A', 'B', 'dummy', 'net9', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'net7']]
P diffusion chain : [['CO', 'VDD', 'net19', 'net7', 'net1', 'VDD', 'net1', 'S', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD'], ['VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD', 'S', 'net1', 'VDD', 'net1', 'net7', 'net19', 'VDD', 'CO'], ['VDD', 'net19', 'net7', 'net1', 'VDD', 'net1', 'S', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'CO'], ['CO', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD', 'S', 'net1', 'VDD', 'net1', 'net7', 'net19', 'VDD'], ['CO', 'VDD', 'net1', 'net7', 'net19', 'VDD', 'net1', 'S', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD'], ['CO', 'VDD', 'S', 'net1', 'VDD', 'net1', 'net7', 'net19', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD'], ['CO', 'VDD', 'net3', 'VDD', 'S', 'net1', 'VDD', 'net1', 'net7', 'net19', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD'], ['CO', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD', 'S', 'net1', 'VDD', 'net1', 'net7', 'net19', 'VDD'], ['VDD', 'net19', 'net7', 'net1', 'VDD', 'net1', 'S', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'CO'], ['CO', 'VDD', 'net19', 'net7', 'net1', 'VDD', 'S', 'net1', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD'], ['CO', 'VDD', 'net19', 'net7', 'net1', 'VDD', 'net3', 'VDD', 'S', 'net1', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD'], ['CO', 'VDD', 'net19', 'net7', 'net1', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD', 'S', 'net1', 'VDD'], ['CO', 'VDD', 'net19', 'net7', 'net1', 'VDD', 'net1', 'S', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD'], ['CO', 'VDD', 'net19', 'net7', 'net1', 'VDD', 'net1', 'S', 'VDD', 'net3', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD'], ['VDD', 'net1', 'net7', 'net19', 'VDD', 'net1', 'S', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'CO'], ['VDD', 'S', 'net1', 'VDD', 'net1', 'net7', 'net19', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'CO'], ['VDD', 'net3', 'VDD', 'S', 'net1', 'VDD', 'net1', 'net7', 'net19', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'CO'], ['VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD', 'S', 'net1', 'VDD', 'net1', 'net7', 'net19', 'VDD', 'CO'], ['CO', 'VDD', 'net19', 'net7', 'net1', 'VDD', 'net1', 'S', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD'], ['VDD', 'net19', 'net7', 'net1', 'VDD', 'S', 'net1', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'CO'], ['VDD', 'net19', 'net7', 'net1', 'VDD', 'net3', 'VDD', 'S', 'net1', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'CO'], ['VDD', 'net19', 'net7', 'net1', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD', 'S', 'net1', 'VDD', 'CO'], ['VDD', 'net19', 'net7', 'net1', 'VDD', 'net1', 'S', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD', 'CO'], ['VDD', 'net19', 'net7', 'net1', 'VDD', 'net1', 'S', 'VDD', 'net3', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'CO'], ['VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD', 'S', 'net1', 'VDD', 'net1', 'net7', 'net19', 'VDD', 'CO'], ['CO', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD', 'S', 'net1', 'VDD', 'net1', 'net7', 'net19', 'VDD'], ['CO', 'VDD', 'net1', 'net7', 'net19', 'VDD', 'net1', 'S', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD'], ['CO', 'VDD', 'S', 'net1', 'VDD', 'net1', 'net7', 'net19', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD'], ['CO', 'VDD', 'net3', 'VDD', 'S', 'net1', 'VDD', 'net1', 'net7', 'net19', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD'], ['VDD', 'net19', 'net7', 'net1', 'VDD', 'net1', 'S', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'CO'], ['CO', 'VDD', 'net19', 'net7', 'net1', 'VDD', 'S', 'net1', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD'], ['CO', 'VDD', 'net19', 'net7', 'net1', 'VDD', 'net3', 'VDD', 'S', 'net1', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD'], ['CO', 'VDD', 'net19', 'net7', 'net1', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD', 'S', 'net1', 'VDD'], ['CO', 'VDD', 'net19', 'net7', 'net1', 'VDD', 'net1', 'S', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD'], ['CO', 'VDD', 'net19', 'net7', 'net1', 'VDD', 'net1', 'S', 'VDD', 'net3', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD'], ['VDD', 'net1', 'net7', 'net19', 'VDD', 'net1', 'S', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'CO'], ['VDD', 'S', 'net1', 'VDD', 'net1', 'net7', 'net19', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'CO'], ['VDD', 'net3', 'VDD', 'S', 'net1', 'VDD', 'net1', 'net7', 'net19', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'CO'], ['CO', 'VDD', 'net19', 'net7', 'net1', 'VDD', 'net1', 'S', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD'], ['VDD', 'net19', 'net7', 'net1', 'VDD', 'S', 'net1', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'CO'], ['VDD', 'net19', 'net7', 'net1', 'VDD', 'net3', 'VDD', 'S', 'net1', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'CO'], ['VDD', 'net19', 'net7', 'net1', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD', 'S', 'net1', 'VDD', 'CO'], ['VDD', 'net19', 'net7', 'net1', 'VDD', 'net1', 'S', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD', 'CO'], ['VDD', 'net19', 'net7', 'net1', 'VDD', 'net1', 'S', 'VDD', 'net3', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'CO']]
N diffusion chain : [['CO', 'VSS', 'net36', 'net7', 'net5', 'VSS', 'net5', 'S', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS'], ['VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS', 'S', 'net5', 'VSS', 'net5', 'net7', 'net36', 'VSS', 'CO'], ['VSS', 'net36', 'net7', 'net5', 'VSS', 'net5', 'S', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'CO'], ['CO', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS', 'S', 'net5', 'VSS', 'net5', 'net7', 'net36', 'VSS'], ['CO', 'VSS', 'net5', 'net7', 'net36', 'VSS', 'net5', 'S', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS'], ['CO', 'VSS', 'S', 'net5', 'VSS', 'net5', 'net7', 'net36', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS'], ['CO', 'VSS', 'net42', 'VSS', 'S', 'net5', 'VSS', 'net5', 'net7', 'net36', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS'], ['CO', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS', 'S', 'net5', 'VSS', 'net5', 'net7', 'net36', 'VSS'], ['VSS', 'net36', 'net7', 'net5', 'VSS', 'net5', 'S', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'CO'], ['CO', 'VSS', 'net36', 'net7', 'net5', 'VSS', 'S', 'net5', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS'], ['CO', 'VSS', 'net36', 'net7', 'net5', 'VSS', 'net42', 'VSS', 'S', 'net5', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS'], ['CO', 'VSS', 'net36', 'net7', 'net5', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS', 'S', 'net5', 'VSS'], ['CO', 'VSS', 'net36', 'net7', 'net5', 'VSS', 'net5', 'S', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS'], ['CO', 'VSS', 'net36', 'net7', 'net5', 'VSS', 'net5', 'S', 'VSS', 'net42', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS'], ['VSS', 'net5', 'net7', 'net36', 'VSS', 'net5', 'S', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'CO'], ['VSS', 'S', 'net5', 'VSS', 'net5', 'net7', 'net36', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'CO'], ['VSS', 'net42', 'VSS', 'S', 'net5', 'VSS', 'net5', 'net7', 'net36', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'CO'], ['VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS', 'S', 'net5', 'VSS', 'net5', 'net7', 'net36', 'VSS', 'CO'], ['CO', 'VSS', 'net36', 'net7', 'net5', 'VSS', 'net5', 'S', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS'], ['VSS', 'net36', 'net7', 'net5', 'VSS', 'S', 'net5', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'CO'], ['VSS', 'net36', 'net7', 'net5', 'VSS', 'net42', 'VSS', 'S', 'net5', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'CO'], ['VSS', 'net36', 'net7', 'net5', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS', 'S', 'net5', 'VSS', 'CO'], ['VSS', 'net36', 'net7', 'net5', 'VSS', 'net5', 'S', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS', 'CO'], ['VSS', 'net36', 'net7', 'net5', 'VSS', 'net5', 'S', 'VSS', 'net42', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'CO'], ['VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS', 'S', 'net5', 'VSS', 'net5', 'net7', 'net36', 'VSS', 'CO'], ['CO', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS', 'S', 'net5', 'VSS', 'net5', 'net7', 'net36', 'VSS'], ['CO', 'VSS', 'net5', 'net7', 'net36', 'VSS', 'net5', 'S', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS'], ['CO', 'VSS', 'S', 'net5', 'VSS', 'net5', 'net7', 'net36', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS'], ['CO', 'VSS', 'net42', 'VSS', 'S', 'net5', 'VSS', 'net5', 'net7', 'net36', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS'], ['VSS', 'net36', 'net7', 'net5', 'VSS', 'net5', 'S', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'CO'], ['CO', 'VSS', 'net36', 'net7', 'net5', 'VSS', 'S', 'net5', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS'], ['CO', 'VSS', 'net36', 'net7', 'net5', 'VSS', 'net42', 'VSS', 'S', 'net5', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS'], ['CO', 'VSS', 'net36', 'net7', 'net5', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS', 'S', 'net5', 'VSS'], ['CO', 'VSS', 'net36', 'net7', 'net5', 'VSS', 'net5', 'S', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS'], ['CO', 'VSS', 'net36', 'net7', 'net5', 'VSS', 'net5', 'S', 'VSS', 'net42', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS'], ['VSS', 'net5', 'net7', 'net36', 'VSS', 'net5', 'S', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'CO'], ['VSS', 'S', 'net5', 'VSS', 'net5', 'net7', 'net36', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'CO'], ['VSS', 'net42', 'VSS', 'S', 'net5', 'VSS', 'net5', 'net7', 'net36', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'CO'], ['CO', 'VSS', 'net36', 'net7', 'net5', 'VSS', 'net5', 'S', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS'], ['VSS', 'net36', 'net7', 'net5', 'VSS', 'S', 'net5', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'CO'], ['VSS', 'net36', 'net7', 'net5', 'VSS', 'net42', 'VSS', 'S', 'net5', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'CO'], ['VSS', 'net36', 'net7', 'net5', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS', 'S', 'net5', 'VSS', 'CO'], ['VSS', 'net36', 'net7', 'net5', 'VSS', 'net5', 'S', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS', 'CO'], ['VSS', 'net36', 'net7', 'net5', 'VSS', 'net5', 'S', 'VSS', 'net42', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'CO']]
Diffusion sharing : [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
P Diffusion weight : [38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38]
N Diffusion weight : [26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26]
Total diffusion weight : [60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60]
END

Cell Name : FA_X1
P Vertex : ['net31', 'VDD', 'net29', 'net9', 'net3', 'S', 'net1', 'net7', 'net19', 'CO']
N Vertex : ['net49', 'VSS', 'net47', 'net9', 'net42', 'S', 'net5', 'net7', 'net36', 'CO']
Edge : ['A', 'B', 'CI', 'net7', 'net9', 'dummy']
Tr_info : [[['net31', 'A', 'VDD'], ['net29', 'B', 'net31'], ['net9', 'CI', 'net29'], ['net3', 'net7', 'net9'], ['VDD', 'A', 'net3'], ['net3', 'B', 'VDD'], ['VDD', 'CI', 'net3'], ['S', 'net9', 'VDD'], ['VDD', 'B', 'net1'], ['net1', 'A', 'VDD'], ['net7', 'CI', 'net1'], ['net19', 'B', 'net7'], ['VDD', 'A', 'net19'], ['CO', 'net7', 'VDD'], ['S', 'dummy', 'net1']], [['net49', 'A', 'VSS'], ['net47', 'B', 'net49'], ['net9', 'CI', 'net47'], ['net42', 'net7', 'net9'], ['VSS', 'A', 'net42'], ['net42', 'B', 'VSS'], ['VSS', 'CI', 'net42'], ['S', 'net9', 'VSS'], ['VSS', 'B', 'net5'], ['net5', 'A', 'VSS'], ['net7', 'CI', 'net5'], ['net36', 'B', 'net7'], ['VSS', 'A', 'net36'], ['CO', 'net7', 'VSS'], ['VSS', 'dummy', 'net5']]]
P matrix = [[0, 1, 1, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 3, 1, 2, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0], [0, 3, 0, 1, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0], [0, 2, 0, 0, 0, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0]]
N matrix = [[0, 1, 1, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 3, 1, 3, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0], [0, 3, 0, 1, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 3, 0, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0]]
P odd degree count : 2
N odd degree count : 2
P start point : [1, 9]
N start point : [5, 9]
Is dummy need : False
P dummy count : 1
N dummy count : 1
P euler path candidates : [[9, 1, 8, 7, 6, 1, 6, 5, 1, 4, 1, 4, 3, 2, 0, 1], [1, 8, 7, 6, 1, 6, 5, 1, 4, 1, 4, 3, 2, 0, 1, 9], [9, 1, 6, 7, 8, 1, 6, 5, 1, 4, 1, 4, 3, 2, 0, 1], [9, 1, 5, 6, 1, 6, 7, 8, 1, 4, 1, 4, 3, 2, 0, 1], [9, 1, 4, 1, 5, 6, 1, 6, 7, 8, 1, 4, 3, 2, 0, 1], [9, 1, 0, 2, 3, 4, 1, 4, 1, 5, 6, 1, 6, 7, 8, 1], [9, 1, 8, 7, 6, 1, 5, 6, 1, 4, 1, 4, 3, 2, 0, 1], [9, 1, 8, 7, 6, 1, 4, 1, 5, 6, 1, 4, 3, 2, 0, 1], [9, 1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 6, 1], [9, 1, 8, 7, 6, 1, 6, 5, 1, 0, 2, 3, 4, 1, 4, 1], [9, 1, 8, 7, 6, 1, 6, 5, 1, 4, 1, 0, 2, 3, 4, 1], [1, 6, 7, 8, 1, 6, 5, 1, 4, 1, 4, 3, 2, 0, 1, 9], [1, 5, 6, 1, 6, 7, 8, 1, 4, 1, 4, 3, 2, 0, 1, 9], [1, 4, 1, 5, 6, 1, 6, 7, 8, 1, 4, 3, 2, 0, 1, 9], [1, 0, 2, 3, 4, 1, 4, 1, 5, 6, 1, 6, 7, 8, 1, 9], [1, 8, 7, 6, 1, 5, 6, 1, 4, 1, 4, 3, 2, 0, 1, 9], [1, 8, 7, 6, 1, 4, 1, 5, 6, 1, 4, 3, 2, 0, 1, 9], [1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 6, 1, 9], [1, 8, 7, 6, 1, 6, 5, 1, 0, 2, 3, 4, 1, 4, 1, 9], [1, 8, 7, 6, 1, 6, 5, 1, 4, 1, 0, 2, 3, 4, 1, 9], [9, 1, 8, 7, 6, 1, 6, 5, 1, 4, 1, 4, 3, 2, 0, 1], [1, 8, 7, 6, 1, 6, 5, 1, 4, 1, 4, 3, 2, 0, 1, 9], [9, 1, 6, 7, 8, 1, 6, 5, 1, 4, 1, 4, 3, 2, 0, 1], [9, 1, 5, 6, 1, 6, 7, 8, 1, 4, 1, 4, 3, 2, 0, 1], [9, 1, 4, 1, 5, 6, 1, 6, 7, 8, 1, 4, 3, 2, 0, 1], [9, 1, 0, 2, 3, 4, 1, 4, 1, 5, 6, 1, 6, 7, 8, 1], [9, 1, 8, 7, 6, 1, 5, 6, 1, 4, 1, 4, 3, 2, 0, 1], [9, 1, 8, 7, 6, 1, 4, 1, 5, 6, 1, 4, 3, 2, 0, 1], [9, 1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 6, 1], [9, 1, 8, 7, 6, 1, 6, 5, 1, 0, 2, 3, 4, 1, 4, 1], [9, 1, 8, 7, 6, 1, 6, 5, 1, 4, 1, 0, 2, 3, 4, 1], [1, 6, 7, 8, 1, 6, 5, 1, 4, 1, 4, 3, 2, 0, 1, 9], [1, 5, 6, 1, 6, 7, 8, 1, 4, 1, 4, 3, 2, 0, 1, 9], [1, 4, 1, 5, 6, 1, 6, 7, 8, 1, 4, 3, 2, 0, 1, 9], [1, 0, 2, 3, 4, 1, 4, 1, 5, 6, 1, 6, 7, 8, 1, 9], [1, 8, 7, 6, 1, 5, 6, 1, 4, 1, 4, 3, 2, 0, 1, 9], [1, 8, 7, 6, 1, 4, 1, 5, 6, 1, 4, 3, 2, 0, 1, 9], [1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 6, 1, 9], [1, 8, 7, 6, 1, 6, 5, 1, 0, 2, 3, 4, 1, 4, 1, 9], [1, 8, 7, 6, 1, 6, 5, 1, 4, 1, 0, 2, 3, 4, 1, 9]]
N euler path candidates : [[9, 1, 8, 7, 6, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 5], [5, 1, 8, 7, 6, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 9], [9, 1, 6, 7, 8, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 5], [9, 1, 6, 1, 6, 7, 8, 1, 4, 1, 4, 3, 2, 0, 1, 5], [9, 1, 4, 1, 6, 1, 6, 7, 8, 1, 4, 3, 2, 0, 1, 5], [9, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 6, 7, 8, 1, 5], [9, 1, 8, 7, 6, 1, 4, 1, 6, 1, 4, 3, 2, 0, 1, 5], [9, 1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 5], [9, 1, 8, 7, 6, 1, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5], [9, 1, 8, 7, 6, 1, 6, 1, 4, 1, 0, 2, 3, 4, 1, 5], [5, 1, 6, 7, 8, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 9], [5, 1, 6, 1, 6, 7, 8, 1, 4, 1, 4, 3, 2, 0, 1, 9], [5, 1, 4, 1, 6, 1, 6, 7, 8, 1, 4, 3, 2, 0, 1, 9], [5, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 6, 7, 8, 1, 9], [5, 1, 8, 7, 6, 1, 4, 1, 6, 1, 4, 3, 2, 0, 1, 9], [5, 1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 9], [5, 1, 8, 7, 6, 1, 6, 1, 0, 2, 3, 4, 1, 4, 1, 9], [5, 1, 8, 7, 6, 1, 6, 1, 4, 1, 0, 2, 3, 4, 1, 9], [9, 1, 8, 7, 6, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 5], [5, 1, 8, 7, 6, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 9], [9, 1, 6, 7, 8, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 5], [9, 1, 6, 1, 6, 7, 8, 1, 4, 1, 4, 3, 2, 0, 1, 5], [9, 1, 4, 1, 6, 1, 6, 7, 8, 1, 4, 3, 2, 0, 1, 5], [9, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 6, 7, 8, 1, 5], [9, 1, 8, 7, 6, 1, 4, 1, 6, 1, 4, 3, 2, 0, 1, 5], [9, 1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 5], [9, 1, 8, 7, 6, 1, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5], [9, 1, 8, 7, 6, 1, 6, 1, 4, 1, 0, 2, 3, 4, 1, 5], [5, 1, 6, 7, 8, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 9], [5, 1, 6, 1, 6, 7, 8, 1, 4, 1, 4, 3, 2, 0, 1, 9], [5, 1, 4, 1, 6, 1, 6, 7, 8, 1, 4, 3, 2, 0, 1, 9], [5, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 6, 7, 8, 1, 9], [5, 1, 8, 7, 6, 1, 4, 1, 6, 1, 4, 3, 2, 0, 1, 9], [5, 1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 9], [5, 1, 8, 7, 6, 1, 6, 1, 0, 2, 3, 4, 1, 4, 1, 9], [5, 1, 8, 7, 6, 1, 6, 1, 4, 1, 0, 2, 3, 4, 1, 9]]
P loop is : True
P loop number : [[1, 6, 4], [1, 6, 4]]
P loop count : [[5, 2, 2], [5, 2, 2]]
P loop point : [[[1, 5, 8, 10, 15], [4, 6], [9, 11]], [[0, 4, 7, 9, 14], [3, 5], [8, 10]]]
N loop is : True
N loop number : [[1, 6, 4], [1, 6, 4]]
N loop count : [[5, 2, 2], [5, 2, 2]]
N loop point : [[[1, 5, 7, 9, 14], [4, 6], [8, 10]], [[1, 5, 7, 9, 14], [4, 6], [8, 10]]]
P poly ordering : [['net7', 'A', 'B', 'CI', 'B', 'A', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['A', 'B', 'CI', 'B', 'A', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['net7', 'B', 'CI', 'B', 'A', 'A', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['net7', 'net9', 'dummy', 'B', 'A', 'CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['net7', 'A', 'B', 'net9', 'dummy', 'B', 'A', 'CI', 'B', 'A', 'CI', 'net7', 'CI', 'B', 'A'], ['net7', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'B', 'A', 'CI', 'B', 'A'], ['net7', 'A', 'B', 'CI', 'B', 'net9', 'dummy', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['net7', 'A', 'B', 'CI', 'B', 'A', 'B', 'net9', 'dummy', 'A', 'CI', 'net7', 'CI', 'B', 'A'], ['net7', 'A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'A'], ['net7', 'A', 'B', 'CI', 'B', 'A', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI'], ['net7', 'A', 'B', 'CI', 'B', 'A', 'dummy', 'net9', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI'], ['B', 'CI', 'B', 'A', 'A', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['net9', 'dummy', 'B', 'A', 'CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['A', 'B', 'net9', 'dummy', 'B', 'A', 'CI', 'B', 'A', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'B', 'A', 'CI', 'B', 'A', 'net7'], ['A', 'B', 'CI', 'B', 'net9', 'dummy', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['A', 'B', 'CI', 'B', 'A', 'B', 'net9', 'dummy', 'A', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'A', 'net7'], ['A', 'B', 'CI', 'B', 'A', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net7'], ['A', 'B', 'CI', 'B', 'A', 'dummy', 'net9', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'net7'], ['net7', 'A', 'B', 'CI', 'A', 'B', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['A', 'B', 'CI', 'A', 'B', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['net7', 'A', 'CI', 'B', 'A', 'B', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['net7', 'net9', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['net7', 'CI', 'B', 'net9', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'A', 'net7', 'CI', 'B', 'A'], ['net7', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9', 'dummy', 'A', 'B', 'CI', 'B', 'A'], ['net7', 'A', 'B', 'CI', 'A', 'net9', 'dummy', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['net7', 'A', 'B', 'CI', 'A', 'CI', 'B', 'net9', 'dummy', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['net7', 'A', 'B', 'CI', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9', 'dummy', 'B'], ['net7', 'A', 'B', 'CI', 'A', 'B', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['net7', 'A', 'B', 'CI', 'A', 'B', 'dummy', 'net9', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A'], ['A', 'CI', 'B', 'A', 'B', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['net9', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['CI', 'B', 'net9', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'net7'], ['A', 'B', 'CI', 'A', 'net9', 'dummy', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['A', 'B', 'CI', 'A', 'CI', 'B', 'net9', 'dummy', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['A', 'B', 'CI', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9', 'dummy', 'B', 'net7'], ['A', 'B', 'CI', 'A', 'B', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['A', 'B', 'CI', 'A', 'B', 'dummy', 'net9', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'net7']]
N poly ordering : [['net7', 'A', 'B', 'CI', 'B', 'A', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['net9', 'A', 'B', 'CI', 'B', 'A', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['net7', 'B', 'CI', 'B', 'A', 'A', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['net7', 'B', 'A', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['net7', 'A', 'B', 'B', 'A', 'dummy', 'CI', 'B', 'A', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['net7', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'B', 'A', 'dummy', 'CI', 'B', 'A', 'net9'], ['net7', 'A', 'B', 'CI', 'B', 'A', 'B', 'A', 'dummy', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['net7', 'A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'A', 'dummy', 'net9'], ['net7', 'A', 'B', 'CI', 'B', 'A', 'dummy', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9'], ['net7', 'A', 'B', 'CI', 'B', 'A', 'dummy', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'net9'], ['net9', 'B', 'CI', 'B', 'A', 'A', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['net9', 'B', 'A', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['net9', 'A', 'B', 'B', 'A', 'dummy', 'CI', 'B', 'A', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['net9', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'B', 'A', 'dummy', 'CI', 'B', 'A', 'net7'], ['net9', 'A', 'B', 'CI', 'B', 'A', 'B', 'A', 'dummy', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['net9', 'A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'A', 'dummy', 'net7'], ['net9', 'A', 'B', 'CI', 'B', 'A', 'dummy', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net7'], ['net9', 'A', 'B', 'CI', 'B', 'A', 'dummy', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'net7'], ['net7', 'A', 'B', 'CI', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['net9', 'A', 'B', 'CI', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['net7', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['net7', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['net7', 'CI', 'B', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['net7', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'net9'], ['net7', 'A', 'B', 'CI', 'dummy', 'CI', 'B', 'A', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['net7', 'A', 'B', 'CI', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A', 'B', 'net9'], ['net7', 'A', 'B', 'CI', 'dummy', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['net7', 'A', 'B', 'CI', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'net9'], ['net9', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['net9', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['net9', 'CI', 'B', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'net7'], ['net9', 'A', 'B', 'CI', 'dummy', 'CI', 'B', 'A', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['net9', 'A', 'B', 'CI', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A', 'B', 'net7'], ['net9', 'A', 'B', 'CI', 'dummy', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['net9', 'A', 'B', 'CI', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'net7']]
Poly ordering : [['net9', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7']]
P diffusion chain : [['VDD', 'S', 'net1', 'VDD', 'net1', 'net7', 'net19', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'CO']]
N diffusion chain : [['S', 'VSS', 'net5', 'VSS', 'net5', 'net7', 'net36', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'CO']]
Diffusion sharing : [3]
P Diffusion weight : [38]
N Diffusion weight : [26]
Total diffusion weight : [61]
END

Cell Name : FA_X1
P Vertex : ['net31', 'VDD', 'net29', 'net9', 'net3', 'S', 'net1', 'net7', 'net19', 'CO']
N Vertex : ['net49', 'VSS', 'net47', 'net9', 'net42', 'S', 'net5', 'net7', 'net36', 'CO']
Edge : ['A', 'B', 'CI', 'net7', 'net9', 'dummy']
Tr_info : [[['net31', 'A', 'VDD'], ['net29', 'B', 'net31'], ['net9', 'CI', 'net29'], ['net3', 'net7', 'net9'], ['VDD', 'A', 'net3'], ['net3', 'B', 'VDD'], ['VDD', 'CI', 'net3'], ['S', 'net9', 'VDD'], ['VDD', 'B', 'net1'], ['net1', 'A', 'VDD'], ['net7', 'CI', 'net1'], ['net19', 'B', 'net7'], ['VDD', 'A', 'net19'], ['CO', 'net7', 'VDD'], ['S', 'dummy', 'net1']], [['net49', 'A', 'VSS'], ['net47', 'B', 'net49'], ['net9', 'CI', 'net47'], ['net42', 'net7', 'net9'], ['VSS', 'A', 'net42'], ['net42', 'B', 'VSS'], ['VSS', 'CI', 'net42'], ['S', 'net9', 'VSS'], ['VSS', 'B', 'net5'], ['net5', 'A', 'VSS'], ['net7', 'CI', 'net5'], ['net36', 'B', 'net7'], ['VSS', 'A', 'net36'], ['CO', 'net7', 'VSS'], ['VSS', 'dummy', 'S']]]
P matrix = [[0, 1, 1, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 3, 1, 2, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0], [0, 3, 0, 1, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0], [0, 2, 0, 0, 0, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0]]
N matrix = [[0, 1, 1, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 3, 2, 2, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0], [0, 3, 0, 1, 0, 0, 0, 0, 0, 0], [0, 2, 0, 0, 0, 0, 0, 0, 0, 0], [0, 2, 0, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0]]
P odd degree count : 2
N odd degree count : 2
P start point : [1, 9]
N start point : [6, 9]
Is dummy need : False
P dummy count : 1
N dummy count : 1
P euler path candidates : [[9, 1, 8, 7, 6, 1, 6, 5, 1, 4, 1, 4, 3, 2, 0, 1], [1, 8, 7, 6, 1, 6, 5, 1, 4, 1, 4, 3, 2, 0, 1, 9], [9, 1, 6, 7, 8, 1, 6, 5, 1, 4, 1, 4, 3, 2, 0, 1], [9, 1, 5, 6, 1, 6, 7, 8, 1, 4, 1, 4, 3, 2, 0, 1], [9, 1, 4, 1, 5, 6, 1, 6, 7, 8, 1, 4, 3, 2, 0, 1], [9, 1, 0, 2, 3, 4, 1, 4, 1, 5, 6, 1, 6, 7, 8, 1], [9, 1, 8, 7, 6, 1, 5, 6, 1, 4, 1, 4, 3, 2, 0, 1], [9, 1, 8, 7, 6, 1, 4, 1, 5, 6, 1, 4, 3, 2, 0, 1], [9, 1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 6, 1], [9, 1, 8, 7, 6, 1, 6, 5, 1, 0, 2, 3, 4, 1, 4, 1], [9, 1, 8, 7, 6, 1, 6, 5, 1, 4, 1, 0, 2, 3, 4, 1], [1, 6, 7, 8, 1, 6, 5, 1, 4, 1, 4, 3, 2, 0, 1, 9], [1, 5, 6, 1, 6, 7, 8, 1, 4, 1, 4, 3, 2, 0, 1, 9], [1, 4, 1, 5, 6, 1, 6, 7, 8, 1, 4, 3, 2, 0, 1, 9], [1, 0, 2, 3, 4, 1, 4, 1, 5, 6, 1, 6, 7, 8, 1, 9], [1, 8, 7, 6, 1, 5, 6, 1, 4, 1, 4, 3, 2, 0, 1, 9], [1, 8, 7, 6, 1, 4, 1, 5, 6, 1, 4, 3, 2, 0, 1, 9], [1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 6, 1, 9], [1, 8, 7, 6, 1, 6, 5, 1, 0, 2, 3, 4, 1, 4, 1, 9], [1, 8, 7, 6, 1, 6, 5, 1, 4, 1, 0, 2, 3, 4, 1, 9], [9, 1, 8, 7, 6, 1, 6, 5, 1, 4, 1, 4, 3, 2, 0, 1], [1, 8, 7, 6, 1, 6, 5, 1, 4, 1, 4, 3, 2, 0, 1, 9], [9, 1, 6, 7, 8, 1, 6, 5, 1, 4, 1, 4, 3, 2, 0, 1], [9, 1, 5, 6, 1, 6, 7, 8, 1, 4, 1, 4, 3, 2, 0, 1], [9, 1, 4, 1, 5, 6, 1, 6, 7, 8, 1, 4, 3, 2, 0, 1], [9, 1, 0, 2, 3, 4, 1, 4, 1, 5, 6, 1, 6, 7, 8, 1], [9, 1, 8, 7, 6, 1, 5, 6, 1, 4, 1, 4, 3, 2, 0, 1], [9, 1, 8, 7, 6, 1, 4, 1, 5, 6, 1, 4, 3, 2, 0, 1], [9, 1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 6, 1], [9, 1, 8, 7, 6, 1, 6, 5, 1, 0, 2, 3, 4, 1, 4, 1], [9, 1, 8, 7, 6, 1, 6, 5, 1, 4, 1, 0, 2, 3, 4, 1], [1, 6, 7, 8, 1, 6, 5, 1, 4, 1, 4, 3, 2, 0, 1, 9], [1, 5, 6, 1, 6, 7, 8, 1, 4, 1, 4, 3, 2, 0, 1, 9], [1, 4, 1, 5, 6, 1, 6, 7, 8, 1, 4, 3, 2, 0, 1, 9], [1, 0, 2, 3, 4, 1, 4, 1, 5, 6, 1, 6, 7, 8, 1, 9], [1, 8, 7, 6, 1, 5, 6, 1, 4, 1, 4, 3, 2, 0, 1, 9], [1, 8, 7, 6, 1, 4, 1, 5, 6, 1, 4, 3, 2, 0, 1, 9], [1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 6, 1, 9], [1, 8, 7, 6, 1, 6, 5, 1, 0, 2, 3, 4, 1, 4, 1, 9], [1, 8, 7, 6, 1, 6, 5, 1, 4, 1, 0, 2, 3, 4, 1, 9]]
N euler path candidates : [[9, 1, 8, 7, 6, 1, 5, 1, 4, 1, 4, 3, 2, 0, 1, 6], [6, 7, 8, 1, 6, 1, 5, 1, 4, 1, 4, 3, 2, 0, 1, 9], [9, 1, 6, 7, 8, 1, 5, 1, 4, 1, 4, 3, 2, 0, 1, 6], [9, 1, 5, 1, 6, 7, 8, 1, 4, 1, 4, 3, 2, 0, 1, 6], [9, 1, 4, 1, 5, 1, 6, 7, 8, 1, 4, 3, 2, 0, 1, 6], [9, 1, 0, 2, 3, 4, 1, 4, 1, 5, 1, 6, 7, 8, 1, 6], [9, 1, 8, 7, 6, 1, 4, 1, 5, 1, 4, 3, 2, 0, 1, 6], [9, 1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 1, 6], [9, 1, 8, 7, 6, 1, 5, 1, 0, 2, 3, 4, 1, 4, 1, 6], [9, 1, 8, 7, 6, 1, 5, 1, 4, 1, 0, 2, 3, 4, 1, 6], [9, 1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 1, 6], [6, 1, 8, 7, 6, 1, 5, 1, 4, 1, 4, 3, 2, 0, 1, 9], [6, 7, 8, 1, 5, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 9], [6, 7, 8, 1, 4, 1, 5, 1, 6, 1, 4, 3, 2, 0, 1, 9], [6, 7, 8, 1, 0, 2, 3, 4, 1, 4, 1, 5, 1, 6, 1, 9], [6, 7, 8, 1, 6, 1, 4, 1, 5, 1, 4, 3, 2, 0, 1, 9], [6, 7, 8, 1, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 1, 9], [6, 7, 8, 1, 6, 1, 5, 1, 0, 2, 3, 4, 1, 4, 1, 9], [6, 7, 8, 1, 6, 1, 5, 1, 4, 1, 0, 2, 3, 4, 1, 9], [9, 1, 8, 7, 6, 1, 5, 1, 4, 1, 4, 3, 2, 0, 1, 6], [6, 7, 8, 1, 6, 1, 5, 1, 4, 1, 4, 3, 2, 0, 1, 9], [9, 1, 6, 7, 8, 1, 5, 1, 4, 1, 4, 3, 2, 0, 1, 6], [9, 1, 5, 1, 6, 7, 8, 1, 4, 1, 4, 3, 2, 0, 1, 6], [9, 1, 4, 1, 5, 1, 6, 7, 8, 1, 4, 3, 2, 0, 1, 6], [9, 1, 0, 2, 3, 4, 1, 4, 1, 5, 1, 6, 7, 8, 1, 6], [9, 1, 8, 7, 6, 1, 4, 1, 5, 1, 4, 3, 2, 0, 1, 6], [9, 1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 1, 6], [9, 1, 8, 7, 6, 1, 5, 1, 0, 2, 3, 4, 1, 4, 1, 6], [9, 1, 8, 7, 6, 1, 5, 1, 4, 1, 0, 2, 3, 4, 1, 6], [9, 1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 1, 6], [6, 1, 8, 7, 6, 1, 5, 1, 4, 1, 4, 3, 2, 0, 1, 9], [6, 7, 8, 1, 5, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 9], [6, 7, 8, 1, 4, 1, 5, 1, 6, 1, 4, 3, 2, 0, 1, 9], [6, 7, 8, 1, 0, 2, 3, 4, 1, 4, 1, 5, 1, 6, 1, 9], [6, 7, 8, 1, 6, 1, 4, 1, 5, 1, 4, 3, 2, 0, 1, 9], [6, 7, 8, 1, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 1, 9], [6, 7, 8, 1, 6, 1, 5, 1, 0, 2, 3, 4, 1, 4, 1, 9], [6, 7, 8, 1, 6, 1, 5, 1, 4, 1, 0, 2, 3, 4, 1, 9]]
P loop is : True
P loop number : [[1, 6, 4], [1, 6, 4]]
P loop count : [[5, 2, 2], [5, 2, 2]]
P loop point : [[[1, 5, 8, 10, 15], [4, 6], [9, 11]], [[0, 4, 7, 9, 14], [3, 5], [8, 10]]]
N loop is : True
N loop number : [[1, 6, 4], [6, 1, 4]]
N loop count : [[5, 2, 2], [2, 5, 2]]
N loop point : [[[1, 5, 7, 9, 14], [4, 15], [8, 10]], [[0, 4], [3, 5, 7, 9, 14], [8, 10]]]
P poly ordering : [['net7', 'A', 'B', 'CI', 'B', 'A', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['A', 'B', 'CI', 'B', 'A', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['net7', 'B', 'CI', 'B', 'A', 'A', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['net7', 'net9', 'dummy', 'B', 'A', 'CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['net7', 'A', 'B', 'net9', 'dummy', 'B', 'A', 'CI', 'B', 'A', 'CI', 'net7', 'CI', 'B', 'A'], ['net7', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'B', 'A', 'CI', 'B', 'A'], ['net7', 'A', 'B', 'CI', 'B', 'net9', 'dummy', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['net7', 'A', 'B', 'CI', 'B', 'A', 'B', 'net9', 'dummy', 'A', 'CI', 'net7', 'CI', 'B', 'A'], ['net7', 'A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'A'], ['net7', 'A', 'B', 'CI', 'B', 'A', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI'], ['net7', 'A', 'B', 'CI', 'B', 'A', 'dummy', 'net9', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI'], ['B', 'CI', 'B', 'A', 'A', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['net9', 'dummy', 'B', 'A', 'CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['A', 'B', 'net9', 'dummy', 'B', 'A', 'CI', 'B', 'A', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'B', 'A', 'CI', 'B', 'A', 'net7'], ['A', 'B', 'CI', 'B', 'net9', 'dummy', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['A', 'B', 'CI', 'B', 'A', 'B', 'net9', 'dummy', 'A', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'A', 'net7'], ['A', 'B', 'CI', 'B', 'A', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net7'], ['A', 'B', 'CI', 'B', 'A', 'dummy', 'net9', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'net7'], ['net7', 'A', 'B', 'CI', 'A', 'B', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['A', 'B', 'CI', 'A', 'B', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['net7', 'A', 'CI', 'B', 'A', 'B', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['net7', 'net9', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['net7', 'CI', 'B', 'net9', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'A', 'net7', 'CI', 'B', 'A'], ['net7', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9', 'dummy', 'A', 'B', 'CI', 'B', 'A'], ['net7', 'A', 'B', 'CI', 'A', 'net9', 'dummy', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['net7', 'A', 'B', 'CI', 'A', 'CI', 'B', 'net9', 'dummy', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['net7', 'A', 'B', 'CI', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9', 'dummy', 'B'], ['net7', 'A', 'B', 'CI', 'A', 'B', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['net7', 'A', 'B', 'CI', 'A', 'B', 'dummy', 'net9', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A'], ['A', 'CI', 'B', 'A', 'B', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['net9', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['CI', 'B', 'net9', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'net7'], ['A', 'B', 'CI', 'A', 'net9', 'dummy', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['A', 'B', 'CI', 'A', 'CI', 'B', 'net9', 'dummy', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['A', 'B', 'CI', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9', 'dummy', 'B', 'net7'], ['A', 'B', 'CI', 'A', 'B', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['A', 'B', 'CI', 'A', 'B', 'dummy', 'net9', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'net7']]
N poly ordering : [['net7', 'A', 'B', 'CI', 'B', 'net9', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['CI', 'B', 'A', 'B', 'A', 'net9', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['net7', 'B', 'CI', 'B', 'A', 'net9', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['net7', 'net9', 'dummy', 'B', 'CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['net7', 'A', 'B', 'net9', 'dummy', 'B', 'CI', 'B', 'A', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['net7', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'B', 'CI', 'B', 'A', 'A'], ['net7', 'A', 'B', 'CI', 'B', 'A', 'B', 'net9', 'dummy', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['net7', 'A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'A'], ['net7', 'A', 'B', 'CI', 'B', 'net9', 'dummy', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'A'], ['net7', 'A', 'B', 'CI', 'B', 'net9', 'dummy', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'A'], ['net7', 'A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'A'], ['B', 'A', 'B', 'CI', 'A', 'net9', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['CI', 'B', 'A', 'net9', 'dummy', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['CI', 'B', 'A', 'A', 'B', 'net9', 'dummy', 'B', 'A', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'B', 'A', 'net7'], ['CI', 'B', 'A', 'B', 'A', 'A', 'B', 'net9', 'dummy', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['CI', 'B', 'A', 'B', 'A', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'net7'], ['CI', 'B', 'A', 'B', 'A', 'net9', 'dummy', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net7'], ['CI', 'B', 'A', 'B', 'A', 'net9', 'dummy', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'net7'], ['net7', 'A', 'B', 'CI', 'A', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['CI', 'B', 'A', 'A', 'B', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['net7', 'A', 'CI', 'B', 'A', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['net7', 'dummy', 'net9', 'A', 'CI', 'B', 'A', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['net7', 'CI', 'B', 'dummy', 'net9', 'A', 'CI', 'B', 'A', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['net7', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'dummy', 'net9', 'A', 'CI', 'B', 'A', 'B'], ['net7', 'A', 'B', 'CI', 'A', 'CI', 'B', 'dummy', 'net9', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['net7', 'A', 'B', 'CI', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'dummy', 'net9', 'B'], ['net7', 'A', 'B', 'CI', 'A', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'B'], ['net7', 'A', 'B', 'CI', 'A', 'dummy', 'net9', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B'], ['net7', 'A', 'B', 'CI', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'dummy', 'net9', 'B'], ['A', 'A', 'B', 'CI', 'B', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['CI', 'B', 'A', 'dummy', 'net9', 'A', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['CI', 'B', 'A', 'CI', 'B', 'dummy', 'net9', 'A', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'dummy', 'net9', 'A', 'B', 'net7'], ['CI', 'B', 'A', 'A', 'B', 'CI', 'B', 'dummy', 'net9', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['CI', 'B', 'A', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'dummy', 'net9', 'net7'], ['CI', 'B', 'A', 'A', 'B', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['CI', 'B', 'A', 'A', 'B', 'dummy', 'net9', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'net7']]
Poly ordering : [['net7', 'A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'A']]
P diffusion chain : [['CO', 'VDD', 'net19', 'net7', 'net1', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD', 'S', 'net1', 'VDD']]
N diffusion chain : [['CO', 'VSS', 'net36', 'net7', 'net5', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS', 'S', 'VSS', 'net5']]
Diffusion sharing : [4]
P Diffusion weight : [38]
N Diffusion weight : [26]
Total diffusion weight : [60]
END

Cell Name : FA_X1
P Vertex : ['net31', 'VDD', 'net29', 'net9', 'net3', 'S', 'net1', 'net7', 'net19', 'CO']
N Vertex : ['net49', 'VSS', 'net47', 'net9', 'net42', 'S', 'net5', 'net7', 'net36', 'CO']
Edge : ['A', 'B', 'CI', 'net7', 'net9', 'dummy']
Tr_info : [[['net31', 'A', 'VDD'], ['net29', 'B', 'net31'], ['net9', 'CI', 'net29'], ['net3', 'net7', 'net9'], ['VDD', 'A', 'net3'], ['net3', 'B', 'VDD'], ['VDD', 'CI', 'net3'], ['S', 'net9', 'VDD'], ['VDD', 'B', 'net1'], ['net1', 'A', 'VDD'], ['net7', 'CI', 'net1'], ['net19', 'B', 'net7'], ['VDD', 'A', 'net19'], ['CO', 'net7', 'VDD'], ['VDD', 'dummy', 'CO']], [['net49', 'A', 'VSS'], ['net47', 'B', 'net49'], ['net9', 'CI', 'net47'], ['net42', 'net7', 'net9'], ['VSS', 'A', 'net42'], ['net42', 'B', 'VSS'], ['VSS', 'CI', 'net42'], ['S', 'net9', 'VSS'], ['VSS', 'B', 'net5'], ['net5', 'A', 'VSS'], ['net7', 'CI', 'net5'], ['net36', 'B', 'net7'], ['VSS', 'A', 'net36'], ['CO', 'net7', 'VSS'], ['S', 'dummy', 'CO']]]
P matrix = [[0, 1, 1, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 3, 1, 2, 0, 1, 2], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0], [0, 3, 0, 1, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 2, 0, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0], [0, 2, 0, 0, 0, 0, 0, 0, 0, 0]]
N matrix = [[0, 1, 1, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 3, 1, 2, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0], [0, 3, 0, 1, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 2, 0, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0]]
P odd degree count : 2
N odd degree count : 2
P start point : [5, 6]
N start point : [1, 6]
Is dummy need : False
P dummy count : 1
N dummy count : 1
P euler path candidates : [[6, 7, 8, 1, 9, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 5], [5, 1, 9, 1, 8, 7, 6, 1, 4, 1, 4, 3, 2, 0, 1, 6], [6, 1, 9, 1, 8, 7, 6, 1, 4, 1, 4, 3, 2, 0, 1, 5], [6, 7, 8, 1, 6, 1, 9, 1, 4, 1, 4, 3, 2, 0, 1, 5], [6, 7, 8, 1, 4, 1, 6, 1, 9, 1, 4, 3, 2, 0, 1, 5], [6, 7, 8, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 9, 1, 5], [6, 7, 8, 1, 9, 1, 4, 1, 6, 1, 4, 3, 2, 0, 1, 5], [6, 7, 8, 1, 9, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 5], [6, 7, 8, 1, 9, 1, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5], [6, 7, 8, 1, 9, 1, 6, 1, 4, 1, 0, 2, 3, 4, 1, 5], [5, 1, 6, 7, 8, 1, 9, 1, 4, 1, 4, 3, 2, 0, 1, 6], [5, 1, 4, 1, 6, 7, 8, 1, 9, 1, 4, 3, 2, 0, 1, 6], [5, 1, 0, 2, 3, 4, 1, 4, 1, 6, 7, 8, 1, 9, 1, 6], [5, 1, 9, 1, 6, 7, 8, 1, 4, 1, 4, 3, 2, 0, 1, 6], [5, 1, 9, 1, 4, 1, 6, 7, 8, 1, 4, 3, 2, 0, 1, 6], [5, 1, 9, 1, 0, 2, 3, 4, 1, 4, 1, 6, 7, 8, 1, 6], [5, 1, 9, 1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 6], [5, 1, 9, 1, 8, 7, 6, 1, 4, 1, 0, 2, 3, 4, 1, 6], [5, 1, 9, 1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 6], [6, 7, 8, 1, 9, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 5], [5, 1, 9, 1, 8, 7, 6, 1, 4, 1, 4, 3, 2, 0, 1, 6], [6, 1, 9, 1, 8, 7, 6, 1, 4, 1, 4, 3, 2, 0, 1, 5], [6, 7, 8, 1, 6, 1, 9, 1, 4, 1, 4, 3, 2, 0, 1, 5], [6, 7, 8, 1, 4, 1, 6, 1, 9, 1, 4, 3, 2, 0, 1, 5], [6, 7, 8, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 9, 1, 5], [6, 7, 8, 1, 9, 1, 4, 1, 6, 1, 4, 3, 2, 0, 1, 5], [6, 7, 8, 1, 9, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 5], [6, 7, 8, 1, 9, 1, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5], [6, 7, 8, 1, 9, 1, 6, 1, 4, 1, 0, 2, 3, 4, 1, 5], [5, 1, 6, 7, 8, 1, 9, 1, 4, 1, 4, 3, 2, 0, 1, 6], [5, 1, 4, 1, 6, 7, 8, 1, 9, 1, 4, 3, 2, 0, 1, 6], [5, 1, 0, 2, 3, 4, 1, 4, 1, 6, 7, 8, 1, 9, 1, 6], [5, 1, 9, 1, 6, 7, 8, 1, 4, 1, 4, 3, 2, 0, 1, 6], [5, 1, 9, 1, 4, 1, 6, 7, 8, 1, 4, 3, 2, 0, 1, 6], [5, 1, 9, 1, 0, 2, 3, 4, 1, 4, 1, 6, 7, 8, 1, 6], [5, 1, 9, 1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 6], [5, 1, 9, 1, 8, 7, 6, 1, 4, 1, 0, 2, 3, 4, 1, 6], [5, 1, 9, 1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 6]]
N euler path candidates : [[6, 7, 8, 1, 6, 1, 9, 5, 1, 4, 1, 4, 3, 2, 0, 1], [1, 8, 7, 6, 1, 9, 5, 1, 4, 1, 4, 3, 2, 0, 1, 6], [6, 1, 8, 7, 6, 1, 9, 5, 1, 4, 1, 4, 3, 2, 0, 1], [6, 7, 8, 1, 5, 9, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1], [6, 7, 8, 1, 4, 1, 5, 9, 1, 6, 1, 4, 3, 2, 0, 1], [6, 7, 8, 1, 0, 2, 3, 4, 1, 4, 1, 5, 9, 1, 6, 1], [6, 7, 8, 1, 6, 1, 5, 9, 1, 4, 1, 4, 3, 2, 0, 1], [6, 7, 8, 1, 6, 1, 4, 1, 5, 9, 1, 4, 3, 2, 0, 1], [6, 7, 8, 1, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 9, 1], [6, 7, 8, 1, 6, 1, 9, 5, 1, 0, 2, 3, 4, 1, 4, 1], [6, 7, 8, 1, 6, 1, 9, 5, 1, 4, 1, 0, 2, 3, 4, 1], [1, 6, 7, 8, 1, 9, 5, 1, 4, 1, 4, 3, 2, 0, 1, 6], [1, 5, 9, 1, 6, 7, 8, 1, 4, 1, 4, 3, 2, 0, 1, 6], [1, 4, 1, 5, 9, 1, 6, 7, 8, 1, 4, 3, 2, 0, 1, 6], [1, 0, 2, 3, 4, 1, 4, 1, 5, 9, 1, 6, 7, 8, 1, 6], [1, 8, 7, 6, 1, 5, 9, 1, 4, 1, 4, 3, 2, 0, 1, 6], [1, 8, 7, 6, 1, 4, 1, 5, 9, 1, 4, 3, 2, 0, 1, 6], [1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 9, 1, 6], [1, 8, 7, 6, 1, 9, 5, 1, 0, 2, 3, 4, 1, 4, 1, 6], [1, 8, 7, 6, 1, 9, 5, 1, 4, 1, 0, 2, 3, 4, 1, 6], [1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 9, 1, 6], [6, 7, 8, 1, 6, 1, 9, 5, 1, 4, 1, 4, 3, 2, 0, 1], [1, 8, 7, 6, 1, 9, 5, 1, 4, 1, 4, 3, 2, 0, 1, 6], [6, 1, 8, 7, 6, 1, 9, 5, 1, 4, 1, 4, 3, 2, 0, 1], [6, 7, 8, 1, 5, 9, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1], [6, 7, 8, 1, 4, 1, 5, 9, 1, 6, 1, 4, 3, 2, 0, 1], [6, 7, 8, 1, 0, 2, 3, 4, 1, 4, 1, 5, 9, 1, 6, 1], [6, 7, 8, 1, 6, 1, 5, 9, 1, 4, 1, 4, 3, 2, 0, 1], [6, 7, 8, 1, 6, 1, 4, 1, 5, 9, 1, 4, 3, 2, 0, 1], [6, 7, 8, 1, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 9, 1], [6, 7, 8, 1, 6, 1, 9, 5, 1, 0, 2, 3, 4, 1, 4, 1], [6, 7, 8, 1, 6, 1, 9, 5, 1, 4, 1, 0, 2, 3, 4, 1], [1, 6, 7, 8, 1, 9, 5, 1, 4, 1, 4, 3, 2, 0, 1, 6], [1, 5, 9, 1, 6, 7, 8, 1, 4, 1, 4, 3, 2, 0, 1, 6], [1, 4, 1, 5, 9, 1, 6, 7, 8, 1, 4, 3, 2, 0, 1, 6], [1, 0, 2, 3, 4, 1, 4, 1, 5, 9, 1, 6, 7, 8, 1, 6], [1, 8, 7, 6, 1, 5, 9, 1, 4, 1, 4, 3, 2, 0, 1, 6], [1, 8, 7, 6, 1, 4, 1, 5, 9, 1, 4, 3, 2, 0, 1, 6], [1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 9, 1, 6], [1, 8, 7, 6, 1, 9, 5, 1, 0, 2, 3, 4, 1, 4, 1, 6], [1, 8, 7, 6, 1, 9, 5, 1, 4, 1, 0, 2, 3, 4, 1, 6], [1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 9, 1, 6]]
P loop is : True
P loop number : [[6, 1, 4], [1, 6, 4]]
P loop count : [[2, 5, 2], [5, 2, 2]]
P loop point : [[[0, 6], [3, 5, 7, 9, 14], [8, 10]], [[1, 3, 7, 9, 14], [6, 15], [8, 10]]]
N loop is : True
N loop number : [[6, 1, 4], [1, 6, 4]]
N loop count : [[2, 5, 2], [5, 2, 2]]
N loop point : [[[0, 4], [3, 5, 8, 10, 15], [9, 11]], [[0, 4, 7, 9, 14], [3, 15], [8, 10]]]
P poly ordering : [['CI', 'B', 'A', 'net7', 'dummy', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['net9', 'net7', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['B', 'net7', 'dummy', 'A', 'B', 'CI', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['CI', 'B', 'A', 'B', 'A', 'net7', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['CI', 'B', 'A', 'A', 'B', 'B', 'A', 'net7', 'dummy', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'B', 'A', 'net7', 'dummy', 'net9'], ['CI', 'B', 'A', 'net7', 'dummy', 'A', 'B', 'B', 'A', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['CI', 'B', 'A', 'net7', 'dummy', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'B', 'A', 'net9'], ['CI', 'B', 'A', 'net7', 'dummy', 'B', 'A', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9'], ['CI', 'B', 'A', 'net7', 'dummy', 'B', 'A', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'net9'], ['net9', 'B', 'CI', 'B', 'A', 'net7', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['net9', 'A', 'B', 'B', 'CI', 'B', 'A', 'net7', 'dummy', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['net9', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'B', 'CI', 'B', 'A', 'net7', 'dummy', 'A'], ['net9', 'net7', 'dummy', 'B', 'CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['net9', 'net7', 'dummy', 'A', 'B', 'B', 'CI', 'B', 'A', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['net9', 'net7', 'dummy', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'B', 'CI', 'B', 'A', 'A'], ['net9', 'net7', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'A'], ['net9', 'net7', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'A'], ['net9', 'net7', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'A'], ['CI', 'B', 'A', 'dummy', 'net7', 'A', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['net9', 'dummy', 'net7', 'A', 'B', 'CI', 'A', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['A', 'dummy', 'net7', 'A', 'B', 'CI', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['CI', 'B', 'A', 'A', 'B', 'dummy', 'net7', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['CI', 'B', 'A', 'CI', 'B', 'A', 'B', 'dummy', 'net7', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A', 'B', 'dummy', 'net7', 'net9'], ['CI', 'B', 'A', 'dummy', 'net7', 'CI', 'B', 'A', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['CI', 'B', 'A', 'dummy', 'net7', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A', 'B', 'net9'], ['CI', 'B', 'A', 'dummy', 'net7', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['CI', 'B', 'A', 'dummy', 'net7', 'A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'net9'], ['net9', 'A', 'CI', 'B', 'A', 'dummy', 'net7', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['net9', 'CI', 'B', 'A', 'CI', 'B', 'A', 'dummy', 'net7', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A', 'CI', 'B', 'A', 'dummy', 'net7', 'B'], ['net9', 'dummy', 'net7', 'A', 'CI', 'B', 'A', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['net9', 'dummy', 'net7', 'CI', 'B', 'A', 'CI', 'B', 'A', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['net9', 'dummy', 'net7', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A', 'CI', 'B', 'A', 'B'], ['net9', 'dummy', 'net7', 'A', 'B', 'CI', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'B'], ['net9', 'dummy', 'net7', 'A', 'B', 'CI', 'A', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B'], ['net9', 'dummy', 'net7', 'A', 'B', 'CI', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'B']]
N poly ordering : [['CI', 'B', 'A', 'B', 'A', 'net7', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['A', 'B', 'CI', 'B', 'net7', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['B', 'A', 'B', 'CI', 'A', 'net7', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['CI', 'B', 'A', 'net9', 'dummy', 'net7', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['CI', 'B', 'A', 'A', 'B', 'net9', 'dummy', 'net7', 'B', 'A', 'CI', 'net7', 'CI', 'B', 'A'], ['CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'net7', 'B', 'A'], ['CI', 'B', 'A', 'B', 'A', 'net9', 'dummy', 'net7', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['CI', 'B', 'A', 'B', 'A', 'A', 'B', 'net9', 'dummy', 'net7', 'CI', 'net7', 'CI', 'B', 'A'], ['CI', 'B', 'A', 'B', 'A', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'net7'], ['CI', 'B', 'A', 'B', 'A', 'net7', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI'], ['CI', 'B', 'A', 'B', 'A', 'net7', 'dummy', 'net9', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI'], ['B', 'CI', 'B', 'A', 'net7', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['net9', 'dummy', 'net7', 'B', 'CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['A', 'B', 'net9', 'dummy', 'net7', 'B', 'CI', 'B', 'A', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'net7', 'B', 'CI', 'B', 'A', 'A'], ['A', 'B', 'CI', 'B', 'net9', 'dummy', 'net7', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['A', 'B', 'CI', 'B', 'A', 'B', 'net9', 'dummy', 'net7', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'net7', 'A'], ['A', 'B', 'CI', 'B', 'net7', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'A'], ['A', 'B', 'CI', 'B', 'net7', 'dummy', 'net9', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'A'], ['A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'net7', 'A'], ['CI', 'B', 'A', 'A', 'B', 'net7', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['A', 'B', 'CI', 'A', 'net7', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['A', 'A', 'B', 'CI', 'B', 'net7', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['CI', 'B', 'A', 'net9', 'dummy', 'net7', 'A', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['CI', 'B', 'A', 'CI', 'B', 'net9', 'dummy', 'net7', 'A', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9', 'dummy', 'net7', 'A', 'B'], ['CI', 'B', 'A', 'A', 'B', 'net9', 'dummy', 'net7', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['CI', 'B', 'A', 'A', 'B', 'CI', 'B', 'net9', 'dummy', 'net7', 'A', 'net7', 'CI', 'B', 'A'], ['CI', 'B', 'A', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9', 'dummy', 'net7'], ['CI', 'B', 'A', 'A', 'B', 'net7', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['CI', 'B', 'A', 'A', 'B', 'net7', 'dummy', 'net9', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A'], ['A', 'CI', 'B', 'A', 'net7', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['net9', 'dummy', 'net7', 'A', 'CI', 'B', 'A', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['CI', 'B', 'net9', 'dummy', 'net7', 'A', 'CI', 'B', 'A', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9', 'dummy', 'net7', 'A', 'CI', 'B', 'A', 'B'], ['A', 'B', 'CI', 'A', 'net9', 'dummy', 'net7', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['A', 'B', 'CI', 'A', 'CI', 'B', 'net9', 'dummy', 'net7', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['A', 'B', 'CI', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9', 'dummy', 'net7', 'B'], ['A', 'B', 'CI', 'A', 'net7', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'B'], ['A', 'B', 'CI', 'A', 'net7', 'dummy', 'net9', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B'], ['A', 'B', 'CI', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9', 'dummy', 'net7', 'B']]
Poly ordering : [['net9', 'dummy', 'net7', 'A', 'CI', 'B', 'A', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'B']]
P diffusion chain : [['S', 'VDD', 'CO', 'VDD', 'net1', 'net7', 'net19', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'net1']]
N diffusion chain : [['VSS', 'S', 'CO', 'VSS', 'net5', 'net7', 'net36', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'net5']]
Diffusion sharing : [3]
P Diffusion weight : [38]
N Diffusion weight : [26]
Total diffusion weight : [61]
END

Cell Name : FA_X1
P Vertex : ['net31', 'VDD', 'net29', 'net9', 'net3', 'S', 'net1', 'net7', 'net19', 'CO']
N Vertex : ['net49', 'VSS', 'net47', 'net9', 'net42', 'S', 'net5', 'net7', 'net36', 'CO']
Edge : ['A', 'B', 'CI', 'net7', 'net9', 'dummy']
Tr_info : [[['net31', 'A', 'VDD'], ['net29', 'B', 'net31'], ['net9', 'CI', 'net29'], ['net3', 'net7', 'net9'], ['VDD', 'A', 'net3'], ['net3', 'B', 'VDD'], ['VDD', 'CI', 'net3'], ['S', 'net9', 'VDD'], ['VDD', 'B', 'net1'], ['net1', 'A', 'VDD'], ['net7', 'CI', 'net1'], ['net19', 'B', 'net7'], ['VDD', 'A', 'net19'], ['CO', 'net7', 'VDD'], ['VDD', 'dummy', 'CO']], [['net49', 'A', 'VSS'], ['net47', 'B', 'net49'], ['net9', 'CI', 'net47'], ['net42', 'net7', 'net9'], ['VSS', 'A', 'net42'], ['net42', 'B', 'VSS'], ['VSS', 'CI', 'net42'], ['S', 'net9', 'VSS'], ['VSS', 'B', 'net5'], ['net5', 'A', 'VSS'], ['net7', 'CI', 'net5'], ['net36', 'B', 'net7'], ['VSS', 'A', 'net36'], ['CO', 'net7', 'VSS'], ['VSS', 'dummy', 'CO']]]
P matrix = [[0, 1, 1, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 3, 1, 2, 0, 1, 2], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0], [0, 3, 0, 1, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 2, 0, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0], [0, 2, 0, 0, 0, 0, 0, 0, 0, 0]]
N matrix = [[0, 1, 1, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 3, 1, 2, 0, 1, 2], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0], [0, 3, 0, 1, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 2, 0, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0], [0, 2, 0, 0, 0, 0, 0, 0, 0, 0]]
P odd degree count : 2
N odd degree count : 2
P start point : [5, 6]
N start point : [5, 6]
Is dummy need : False
P dummy count : 1
N dummy count : 1
P euler path candidates : [[6, 7, 8, 1, 9, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 5], [5, 1, 9, 1, 8, 7, 6, 1, 4, 1, 4, 3, 2, 0, 1, 6], [6, 1, 9, 1, 8, 7, 6, 1, 4, 1, 4, 3, 2, 0, 1, 5], [6, 7, 8, 1, 6, 1, 9, 1, 4, 1, 4, 3, 2, 0, 1, 5], [6, 7, 8, 1, 4, 1, 6, 1, 9, 1, 4, 3, 2, 0, 1, 5], [6, 7, 8, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 9, 1, 5], [6, 7, 8, 1, 9, 1, 4, 1, 6, 1, 4, 3, 2, 0, 1, 5], [6, 7, 8, 1, 9, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 5], [6, 7, 8, 1, 9, 1, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5], [6, 7, 8, 1, 9, 1, 6, 1, 4, 1, 0, 2, 3, 4, 1, 5], [5, 1, 6, 7, 8, 1, 9, 1, 4, 1, 4, 3, 2, 0, 1, 6], [5, 1, 4, 1, 6, 7, 8, 1, 9, 1, 4, 3, 2, 0, 1, 6], [5, 1, 0, 2, 3, 4, 1, 4, 1, 6, 7, 8, 1, 9, 1, 6], [5, 1, 9, 1, 6, 7, 8, 1, 4, 1, 4, 3, 2, 0, 1, 6], [5, 1, 9, 1, 4, 1, 6, 7, 8, 1, 4, 3, 2, 0, 1, 6], [5, 1, 9, 1, 0, 2, 3, 4, 1, 4, 1, 6, 7, 8, 1, 6], [5, 1, 9, 1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 6], [5, 1, 9, 1, 8, 7, 6, 1, 4, 1, 0, 2, 3, 4, 1, 6], [5, 1, 9, 1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 6], [6, 7, 8, 1, 9, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 5], [5, 1, 9, 1, 8, 7, 6, 1, 4, 1, 4, 3, 2, 0, 1, 6], [6, 1, 9, 1, 8, 7, 6, 1, 4, 1, 4, 3, 2, 0, 1, 5], [6, 7, 8, 1, 6, 1, 9, 1, 4, 1, 4, 3, 2, 0, 1, 5], [6, 7, 8, 1, 4, 1, 6, 1, 9, 1, 4, 3, 2, 0, 1, 5], [6, 7, 8, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 9, 1, 5], [6, 7, 8, 1, 9, 1, 4, 1, 6, 1, 4, 3, 2, 0, 1, 5], [6, 7, 8, 1, 9, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 5], [6, 7, 8, 1, 9, 1, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5], [6, 7, 8, 1, 9, 1, 6, 1, 4, 1, 0, 2, 3, 4, 1, 5], [5, 1, 6, 7, 8, 1, 9, 1, 4, 1, 4, 3, 2, 0, 1, 6], [5, 1, 4, 1, 6, 7, 8, 1, 9, 1, 4, 3, 2, 0, 1, 6], [5, 1, 0, 2, 3, 4, 1, 4, 1, 6, 7, 8, 1, 9, 1, 6], [5, 1, 9, 1, 6, 7, 8, 1, 4, 1, 4, 3, 2, 0, 1, 6], [5, 1, 9, 1, 4, 1, 6, 7, 8, 1, 4, 3, 2, 0, 1, 6], [5, 1, 9, 1, 0, 2, 3, 4, 1, 4, 1, 6, 7, 8, 1, 6], [5, 1, 9, 1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 6], [5, 1, 9, 1, 8, 7, 6, 1, 4, 1, 0, 2, 3, 4, 1, 6], [5, 1, 9, 1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 6]]
N euler path candidates : [[6, 7, 8, 1, 9, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 5], [5, 1, 9, 1, 8, 7, 6, 1, 4, 1, 4, 3, 2, 0, 1, 6], [6, 1, 9, 1, 8, 7, 6, 1, 4, 1, 4, 3, 2, 0, 1, 5], [6, 7, 8, 1, 6, 1, 9, 1, 4, 1, 4, 3, 2, 0, 1, 5], [6, 7, 8, 1, 4, 1, 6, 1, 9, 1, 4, 3, 2, 0, 1, 5], [6, 7, 8, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 9, 1, 5], [6, 7, 8, 1, 9, 1, 4, 1, 6, 1, 4, 3, 2, 0, 1, 5], [6, 7, 8, 1, 9, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 5], [6, 7, 8, 1, 9, 1, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5], [6, 7, 8, 1, 9, 1, 6, 1, 4, 1, 0, 2, 3, 4, 1, 5], [5, 1, 6, 7, 8, 1, 9, 1, 4, 1, 4, 3, 2, 0, 1, 6], [5, 1, 4, 1, 6, 7, 8, 1, 9, 1, 4, 3, 2, 0, 1, 6], [5, 1, 0, 2, 3, 4, 1, 4, 1, 6, 7, 8, 1, 9, 1, 6], [5, 1, 9, 1, 6, 7, 8, 1, 4, 1, 4, 3, 2, 0, 1, 6], [5, 1, 9, 1, 4, 1, 6, 7, 8, 1, 4, 3, 2, 0, 1, 6], [5, 1, 9, 1, 0, 2, 3, 4, 1, 4, 1, 6, 7, 8, 1, 6], [5, 1, 9, 1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 6], [5, 1, 9, 1, 8, 7, 6, 1, 4, 1, 0, 2, 3, 4, 1, 6], [5, 1, 9, 1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 6], [6, 7, 8, 1, 9, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 5], [5, 1, 9, 1, 8, 7, 6, 1, 4, 1, 4, 3, 2, 0, 1, 6], [6, 1, 9, 1, 8, 7, 6, 1, 4, 1, 4, 3, 2, 0, 1, 5], [6, 7, 8, 1, 6, 1, 9, 1, 4, 1, 4, 3, 2, 0, 1, 5], [6, 7, 8, 1, 4, 1, 6, 1, 9, 1, 4, 3, 2, 0, 1, 5], [6, 7, 8, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 9, 1, 5], [6, 7, 8, 1, 9, 1, 4, 1, 6, 1, 4, 3, 2, 0, 1, 5], [6, 7, 8, 1, 9, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 5], [6, 7, 8, 1, 9, 1, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5], [6, 7, 8, 1, 9, 1, 6, 1, 4, 1, 0, 2, 3, 4, 1, 5], [5, 1, 6, 7, 8, 1, 9, 1, 4, 1, 4, 3, 2, 0, 1, 6], [5, 1, 4, 1, 6, 7, 8, 1, 9, 1, 4, 3, 2, 0, 1, 6], [5, 1, 0, 2, 3, 4, 1, 4, 1, 6, 7, 8, 1, 9, 1, 6], [5, 1, 9, 1, 6, 7, 8, 1, 4, 1, 4, 3, 2, 0, 1, 6], [5, 1, 9, 1, 4, 1, 6, 7, 8, 1, 4, 3, 2, 0, 1, 6], [5, 1, 9, 1, 0, 2, 3, 4, 1, 4, 1, 6, 7, 8, 1, 6], [5, 1, 9, 1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 6], [5, 1, 9, 1, 8, 7, 6, 1, 4, 1, 0, 2, 3, 4, 1, 6], [5, 1, 9, 1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 6]]
P loop is : True
P loop number : [[6, 1, 4], [1, 6, 4]]
P loop count : [[2, 5, 2], [5, 2, 2]]
P loop point : [[[0, 6], [3, 5, 7, 9, 14], [8, 10]], [[1, 3, 7, 9, 14], [6, 15], [8, 10]]]
N loop is : True
N loop number : [[6, 1, 4], [1, 6, 4]]
N loop count : [[2, 5, 2], [5, 2, 2]]
N loop point : [[[0, 6], [3, 5, 7, 9, 14], [8, 10]], [[1, 3, 7, 9, 14], [6, 15], [8, 10]]]
P poly ordering : [['CI', 'B', 'A', 'net7', 'dummy', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['net9', 'net7', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['B', 'net7', 'dummy', 'A', 'B', 'CI', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['CI', 'B', 'A', 'B', 'A', 'net7', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['CI', 'B', 'A', 'A', 'B', 'B', 'A', 'net7', 'dummy', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'B', 'A', 'net7', 'dummy', 'net9'], ['CI', 'B', 'A', 'net7', 'dummy', 'A', 'B', 'B', 'A', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['CI', 'B', 'A', 'net7', 'dummy', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'B', 'A', 'net9'], ['CI', 'B', 'A', 'net7', 'dummy', 'B', 'A', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9'], ['CI', 'B', 'A', 'net7', 'dummy', 'B', 'A', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'net9'], ['net9', 'B', 'CI', 'B', 'A', 'net7', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['net9', 'A', 'B', 'B', 'CI', 'B', 'A', 'net7', 'dummy', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['net9', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'B', 'CI', 'B', 'A', 'net7', 'dummy', 'A'], ['net9', 'net7', 'dummy', 'B', 'CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['net9', 'net7', 'dummy', 'A', 'B', 'B', 'CI', 'B', 'A', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['net9', 'net7', 'dummy', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'B', 'CI', 'B', 'A', 'A'], ['net9', 'net7', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'A'], ['net9', 'net7', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'A'], ['net9', 'net7', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'A'], ['CI', 'B', 'A', 'dummy', 'net7', 'A', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['net9', 'dummy', 'net7', 'A', 'B', 'CI', 'A', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['A', 'dummy', 'net7', 'A', 'B', 'CI', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['CI', 'B', 'A', 'A', 'B', 'dummy', 'net7', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['CI', 'B', 'A', 'CI', 'B', 'A', 'B', 'dummy', 'net7', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A', 'B', 'dummy', 'net7', 'net9'], ['CI', 'B', 'A', 'dummy', 'net7', 'CI', 'B', 'A', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['CI', 'B', 'A', 'dummy', 'net7', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A', 'B', 'net9'], ['CI', 'B', 'A', 'dummy', 'net7', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['CI', 'B', 'A', 'dummy', 'net7', 'A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'net9'], ['net9', 'A', 'CI', 'B', 'A', 'dummy', 'net7', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['net9', 'CI', 'B', 'A', 'CI', 'B', 'A', 'dummy', 'net7', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A', 'CI', 'B', 'A', 'dummy', 'net7', 'B'], ['net9', 'dummy', 'net7', 'A', 'CI', 'B', 'A', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['net9', 'dummy', 'net7', 'CI', 'B', 'A', 'CI', 'B', 'A', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['net9', 'dummy', 'net7', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A', 'CI', 'B', 'A', 'B'], ['net9', 'dummy', 'net7', 'A', 'B', 'CI', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'B'], ['net9', 'dummy', 'net7', 'A', 'B', 'CI', 'A', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B'], ['net9', 'dummy', 'net7', 'A', 'B', 'CI', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'B']]
N poly ordering : [['CI', 'B', 'A', 'net7', 'dummy', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['net9', 'net7', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['B', 'net7', 'dummy', 'A', 'B', 'CI', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['CI', 'B', 'A', 'B', 'A', 'net7', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['CI', 'B', 'A', 'A', 'B', 'B', 'A', 'net7', 'dummy', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'B', 'A', 'net7', 'dummy', 'net9'], ['CI', 'B', 'A', 'net7', 'dummy', 'A', 'B', 'B', 'A', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['CI', 'B', 'A', 'net7', 'dummy', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'B', 'A', 'net9'], ['CI', 'B', 'A', 'net7', 'dummy', 'B', 'A', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9'], ['CI', 'B', 'A', 'net7', 'dummy', 'B', 'A', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'net9'], ['net9', 'B', 'CI', 'B', 'A', 'net7', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['net9', 'A', 'B', 'B', 'CI', 'B', 'A', 'net7', 'dummy', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['net9', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'B', 'CI', 'B', 'A', 'net7', 'dummy', 'A'], ['net9', 'net7', 'dummy', 'B', 'CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['net9', 'net7', 'dummy', 'A', 'B', 'B', 'CI', 'B', 'A', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['net9', 'net7', 'dummy', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'B', 'CI', 'B', 'A', 'A'], ['net9', 'net7', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'A'], ['net9', 'net7', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'A'], ['net9', 'net7', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'A'], ['CI', 'B', 'A', 'dummy', 'net7', 'A', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['net9', 'dummy', 'net7', 'A', 'B', 'CI', 'A', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['A', 'dummy', 'net7', 'A', 'B', 'CI', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['CI', 'B', 'A', 'A', 'B', 'dummy', 'net7', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['CI', 'B', 'A', 'CI', 'B', 'A', 'B', 'dummy', 'net7', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A', 'B', 'dummy', 'net7', 'net9'], ['CI', 'B', 'A', 'dummy', 'net7', 'CI', 'B', 'A', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['CI', 'B', 'A', 'dummy', 'net7', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A', 'B', 'net9'], ['CI', 'B', 'A', 'dummy', 'net7', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['CI', 'B', 'A', 'dummy', 'net7', 'A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'net9'], ['net9', 'A', 'CI', 'B', 'A', 'dummy', 'net7', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['net9', 'CI', 'B', 'A', 'CI', 'B', 'A', 'dummy', 'net7', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A', 'CI', 'B', 'A', 'dummy', 'net7', 'B'], ['net9', 'dummy', 'net7', 'A', 'CI', 'B', 'A', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['net9', 'dummy', 'net7', 'CI', 'B', 'A', 'CI', 'B', 'A', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['net9', 'dummy', 'net7', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A', 'CI', 'B', 'A', 'B'], ['net9', 'dummy', 'net7', 'A', 'B', 'CI', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'B'], ['net9', 'dummy', 'net7', 'A', 'B', 'CI', 'A', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B'], ['net9', 'dummy', 'net7', 'A', 'B', 'CI', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'B']]
Poly ordering : [['CI', 'B', 'A', 'net7', 'dummy', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['net9', 'net7', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['B', 'net7', 'dummy', 'A', 'B', 'CI', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A', 'CI', 'B', 'A', 'dummy', 'net7', 'B'], ['CI', 'B', 'A', 'B', 'A', 'net7', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['CI', 'B', 'A', 'A', 'B', 'B', 'A', 'net7', 'dummy', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'B', 'A', 'net7', 'dummy', 'net9'], ['CI', 'B', 'A', 'net7', 'dummy', 'A', 'B', 'B', 'A', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['CI', 'B', 'A', 'net7', 'dummy', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'B', 'A', 'net9'], ['CI', 'B', 'A', 'net7', 'dummy', 'B', 'A', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9'], ['CI', 'B', 'A', 'net7', 'dummy', 'B', 'A', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'net9'], ['net9', 'B', 'CI', 'B', 'A', 'net7', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['net9', 'A', 'B', 'B', 'CI', 'B', 'A', 'net7', 'dummy', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['net9', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'B', 'CI', 'B', 'A', 'net7', 'dummy', 'A'], ['A', 'dummy', 'net7', 'A', 'B', 'CI', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['net9', 'net7', 'dummy', 'B', 'CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['net9', 'net7', 'dummy', 'A', 'B', 'B', 'CI', 'B', 'A', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['net9', 'net7', 'dummy', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'B', 'CI', 'B', 'A', 'A'], ['net9', 'net7', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'A'], ['net9', 'net7', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'A'], ['CI', 'B', 'A', 'dummy', 'net7', 'A', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['net9', 'dummy', 'net7', 'A', 'B', 'CI', 'A', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['net9', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'B', 'CI', 'B', 'A', 'net7', 'dummy', 'A'], ['CI', 'B', 'A', 'A', 'B', 'dummy', 'net7', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['CI', 'B', 'A', 'CI', 'B', 'A', 'B', 'dummy', 'net7', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A', 'B', 'dummy', 'net7', 'net9'], ['CI', 'B', 'A', 'dummy', 'net7', 'CI', 'B', 'A', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['CI', 'B', 'A', 'dummy', 'net7', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A', 'B', 'net9'], ['CI', 'B', 'A', 'dummy', 'net7', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['CI', 'B', 'A', 'dummy', 'net7', 'A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'net9'], ['net9', 'A', 'CI', 'B', 'A', 'dummy', 'net7', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['net9', 'CI', 'B', 'A', 'CI', 'B', 'A', 'dummy', 'net7', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['B', 'net7', 'dummy', 'A', 'B', 'CI', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['net9', 'dummy', 'net7', 'A', 'CI', 'B', 'A', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['net9', 'dummy', 'net7', 'CI', 'B', 'A', 'CI', 'B', 'A', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['net9', 'dummy', 'net7', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A', 'CI', 'B', 'A', 'B'], ['net9', 'dummy', 'net7', 'A', 'B', 'CI', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'B'], ['net9', 'dummy', 'net7', 'A', 'B', 'CI', 'A', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B']]
P diffusion chain : [['net1', 'net7', 'net19', 'VDD', 'CO', 'VDD', 'net1', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'S'], ['S', 'VDD', 'CO', 'VDD', 'net19', 'net7', 'net1', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'net1'], ['net1', 'VDD', 'CO', 'VDD', 'net19', 'net7', 'net1', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'S'], ['S', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD', 'net1', 'net7', 'net19', 'VDD', 'CO', 'VDD', 'net1'], ['net1', 'net7', 'net19', 'VDD', 'net1', 'VDD', 'CO', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'S'], ['net1', 'net7', 'net19', 'VDD', 'net3', 'VDD', 'net1', 'VDD', 'CO', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'S'], ['net1', 'net7', 'net19', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD', 'net1', 'VDD', 'CO', 'VDD', 'S'], ['net1', 'net7', 'net19', 'VDD', 'CO', 'VDD', 'net3', 'VDD', 'net1', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'S'], ['net1', 'net7', 'net19', 'VDD', 'CO', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD', 'net1', 'VDD', 'S'], ['net1', 'net7', 'net19', 'VDD', 'CO', 'VDD', 'net1', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD', 'S'], ['net1', 'net7', 'net19', 'VDD', 'CO', 'VDD', 'net1', 'VDD', 'net3', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'S'], ['S', 'VDD', 'net1', 'net7', 'net19', 'VDD', 'CO', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'net1'], ['S', 'VDD', 'net3', 'VDD', 'net1', 'net7', 'net19', 'VDD', 'CO', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'net1'], ['S', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD', 'net1', 'net7', 'net19', 'VDD', 'CO', 'VDD', 'net1'], ['net1', 'VDD', 'CO', 'VDD', 'net19', 'net7', 'net1', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'S'], ['S', 'VDD', 'CO', 'VDD', 'net1', 'net7', 'net19', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'net1'], ['S', 'VDD', 'CO', 'VDD', 'net3', 'VDD', 'net1', 'net7', 'net19', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'net1'], ['S', 'VDD', 'CO', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD', 'net1', 'net7', 'net19', 'VDD', 'net1'], ['S', 'VDD', 'CO', 'VDD', 'net19', 'net7', 'net1', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD', 'net1'], ['S', 'VDD', 'CO', 'VDD', 'net19', 'net7', 'net1', 'VDD', 'net3', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net1'], ['net1', 'net7', 'net19', 'VDD', 'CO', 'VDD', 'net1', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'S'], ['S', 'VDD', 'CO', 'VDD', 'net19', 'net7', 'net1', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'net1'], ['S', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD', 'net1', 'net7', 'net19', 'VDD', 'CO', 'VDD', 'net1'], ['net1', 'net7', 'net19', 'VDD', 'net1', 'VDD', 'CO', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'S'], ['net1', 'net7', 'net19', 'VDD', 'net3', 'VDD', 'net1', 'VDD', 'CO', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'S'], ['net1', 'net7', 'net19', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD', 'net1', 'VDD', 'CO', 'VDD', 'S'], ['net1', 'net7', 'net19', 'VDD', 'CO', 'VDD', 'net3', 'VDD', 'net1', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'S'], ['net1', 'net7', 'net19', 'VDD', 'CO', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD', 'net1', 'VDD', 'S'], ['net1', 'net7', 'net19', 'VDD', 'CO', 'VDD', 'net1', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD', 'S'], ['net1', 'net7', 'net19', 'VDD', 'CO', 'VDD', 'net1', 'VDD', 'net3', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'S'], ['S', 'VDD', 'net1', 'net7', 'net19', 'VDD', 'CO', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'net1'], ['S', 'VDD', 'net3', 'VDD', 'net1', 'net7', 'net19', 'VDD', 'CO', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'net1'], ['net1', 'VDD', 'CO', 'VDD', 'net19', 'net7', 'net1', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'S'], ['S', 'VDD', 'CO', 'VDD', 'net1', 'net7', 'net19', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'net1'], ['S', 'VDD', 'CO', 'VDD', 'net3', 'VDD', 'net1', 'net7', 'net19', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'net1'], ['S', 'VDD', 'CO', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD', 'net1', 'net7', 'net19', 'VDD', 'net1'], ['S', 'VDD', 'CO', 'VDD', 'net19', 'net7', 'net1', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD', 'net1'], ['S', 'VDD', 'CO', 'VDD', 'net19', 'net7', 'net1', 'VDD', 'net3', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net1']]
N diffusion chain : [['net5', 'net7', 'net36', 'VSS', 'CO', 'VSS', 'net5', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'S'], ['S', 'VSS', 'CO', 'VSS', 'net36', 'net7', 'net5', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'net5'], ['net5', 'VSS', 'CO', 'VSS', 'net36', 'net7', 'net5', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'S'], ['S', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS', 'net5', 'net7', 'net36', 'VSS', 'CO', 'VSS', 'net5'], ['net5', 'net7', 'net36', 'VSS', 'net5', 'VSS', 'CO', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'S'], ['net5', 'net7', 'net36', 'VSS', 'net42', 'VSS', 'net5', 'VSS', 'CO', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'S'], ['net5', 'net7', 'net36', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS', 'net5', 'VSS', 'CO', 'VSS', 'S'], ['net5', 'net7', 'net36', 'VSS', 'CO', 'VSS', 'net42', 'VSS', 'net5', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'S'], ['net5', 'net7', 'net36', 'VSS', 'CO', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS', 'net5', 'VSS', 'S'], ['net5', 'net7', 'net36', 'VSS', 'CO', 'VSS', 'net5', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS', 'S'], ['net5', 'net7', 'net36', 'VSS', 'CO', 'VSS', 'net5', 'VSS', 'net42', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'S'], ['S', 'VSS', 'net5', 'net7', 'net36', 'VSS', 'CO', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'net5'], ['S', 'VSS', 'net42', 'VSS', 'net5', 'net7', 'net36', 'VSS', 'CO', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'net5'], ['S', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS', 'net5', 'net7', 'net36', 'VSS', 'CO', 'VSS', 'net5'], ['net5', 'VSS', 'CO', 'VSS', 'net36', 'net7', 'net5', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'S'], ['S', 'VSS', 'CO', 'VSS', 'net5', 'net7', 'net36', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'net5'], ['S', 'VSS', 'CO', 'VSS', 'net42', 'VSS', 'net5', 'net7', 'net36', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'net5'], ['S', 'VSS', 'CO', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS', 'net5', 'net7', 'net36', 'VSS', 'net5'], ['S', 'VSS', 'CO', 'VSS', 'net36', 'net7', 'net5', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS', 'net5'], ['S', 'VSS', 'CO', 'VSS', 'net36', 'net7', 'net5', 'VSS', 'net42', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net5'], ['net5', 'net7', 'net36', 'VSS', 'CO', 'VSS', 'net5', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'S'], ['S', 'VSS', 'CO', 'VSS', 'net36', 'net7', 'net5', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'net5'], ['S', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS', 'net5', 'net7', 'net36', 'VSS', 'CO', 'VSS', 'net5'], ['net5', 'net7', 'net36', 'VSS', 'net5', 'VSS', 'CO', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'S'], ['net5', 'net7', 'net36', 'VSS', 'net42', 'VSS', 'net5', 'VSS', 'CO', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'S'], ['net5', 'net7', 'net36', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS', 'net5', 'VSS', 'CO', 'VSS', 'S'], ['net5', 'net7', 'net36', 'VSS', 'CO', 'VSS', 'net42', 'VSS', 'net5', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'S'], ['net5', 'net7', 'net36', 'VSS', 'CO', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS', 'net5', 'VSS', 'S'], ['net5', 'net7', 'net36', 'VSS', 'CO', 'VSS', 'net5', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS', 'S'], ['net5', 'net7', 'net36', 'VSS', 'CO', 'VSS', 'net5', 'VSS', 'net42', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'S'], ['S', 'VSS', 'net5', 'net7', 'net36', 'VSS', 'CO', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'net5'], ['S', 'VSS', 'net42', 'VSS', 'net5', 'net7', 'net36', 'VSS', 'CO', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'net5'], ['net5', 'VSS', 'CO', 'VSS', 'net36', 'net7', 'net5', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'S'], ['S', 'VSS', 'CO', 'VSS', 'net5', 'net7', 'net36', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'net5'], ['S', 'VSS', 'CO', 'VSS', 'net42', 'VSS', 'net5', 'net7', 'net36', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'net5'], ['S', 'VSS', 'CO', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS', 'net5', 'net7', 'net36', 'VSS', 'net5'], ['S', 'VSS', 'CO', 'VSS', 'net36', 'net7', 'net5', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS', 'net5'], ['S', 'VSS', 'CO', 'VSS', 'net36', 'net7', 'net5', 'VSS', 'net42', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net5']]
Diffusion sharing : [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
P Diffusion weight : [38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38]
N Diffusion weight : [26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26]
Total diffusion weight : [60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60]
END

Cell Name : FA_X1
P Vertex : ['net31', 'VDD', 'net29', 'net9', 'net3', 'S', 'net1', 'net7', 'net19', 'CO']
N Vertex : ['net49', 'VSS', 'net47', 'net9', 'net42', 'S', 'net5', 'net7', 'net36', 'CO']
Edge : ['A', 'B', 'CI', 'net7', 'net9', 'dummy']
Tr_info : [[['net31', 'A', 'VDD'], ['net29', 'B', 'net31'], ['net9', 'CI', 'net29'], ['net3', 'net7', 'net9'], ['VDD', 'A', 'net3'], ['net3', 'B', 'VDD'], ['VDD', 'CI', 'net3'], ['S', 'net9', 'VDD'], ['VDD', 'B', 'net1'], ['net1', 'A', 'VDD'], ['net7', 'CI', 'net1'], ['net19', 'B', 'net7'], ['VDD', 'A', 'net19'], ['CO', 'net7', 'VDD'], ['VDD', 'dummy', 'net1']], [['net49', 'A', 'VSS'], ['net47', 'B', 'net49'], ['net9', 'CI', 'net47'], ['net42', 'net7', 'net9'], ['VSS', 'A', 'net42'], ['net42', 'B', 'VSS'], ['VSS', 'CI', 'net42'], ['S', 'net9', 'VSS'], ['VSS', 'B', 'net5'], ['net5', 'A', 'VSS'], ['net7', 'CI', 'net5'], ['net36', 'B', 'net7'], ['VSS', 'A', 'net36'], ['CO', 'net7', 'VSS'], ['net5', 'dummy', 'CO']]]
P matrix = [[0, 1, 1, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 3, 1, 3, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0], [0, 3, 0, 1, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 3, 0, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0]]
N matrix = [[0, 1, 1, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 3, 1, 2, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0], [0, 3, 0, 1, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 2, 0, 0, 0, 0, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0]]
P odd degree count : 2
N odd degree count : 2
P start point : [5, 9]
N start point : [1, 5]
Is dummy need : False
P dummy count : 1
N dummy count : 1
P euler path candidates : [[9, 1, 8, 7, 6, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 5], [5, 1, 8, 7, 6, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 9], [9, 1, 6, 7, 8, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 5], [9, 1, 6, 1, 6, 7, 8, 1, 4, 1, 4, 3, 2, 0, 1, 5], [9, 1, 4, 1, 6, 1, 6, 7, 8, 1, 4, 3, 2, 0, 1, 5], [9, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 6, 7, 8, 1, 5], [9, 1, 8, 7, 6, 1, 4, 1, 6, 1, 4, 3, 2, 0, 1, 5], [9, 1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 5], [9, 1, 8, 7, 6, 1, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5], [9, 1, 8, 7, 6, 1, 6, 1, 4, 1, 0, 2, 3, 4, 1, 5], [5, 1, 6, 7, 8, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 9], [5, 1, 6, 1, 6, 7, 8, 1, 4, 1, 4, 3, 2, 0, 1, 9], [5, 1, 4, 1, 6, 1, 6, 7, 8, 1, 4, 3, 2, 0, 1, 9], [5, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 6, 7, 8, 1, 9], [5, 1, 8, 7, 6, 1, 4, 1, 6, 1, 4, 3, 2, 0, 1, 9], [5, 1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 9], [5, 1, 8, 7, 6, 1, 6, 1, 0, 2, 3, 4, 1, 4, 1, 9], [5, 1, 8, 7, 6, 1, 6, 1, 4, 1, 0, 2, 3, 4, 1, 9], [9, 1, 8, 7, 6, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 5], [5, 1, 8, 7, 6, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 9], [9, 1, 6, 7, 8, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 5], [9, 1, 6, 1, 6, 7, 8, 1, 4, 1, 4, 3, 2, 0, 1, 5], [9, 1, 4, 1, 6, 1, 6, 7, 8, 1, 4, 3, 2, 0, 1, 5], [9, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 6, 7, 8, 1, 5], [9, 1, 8, 7, 6, 1, 4, 1, 6, 1, 4, 3, 2, 0, 1, 5], [9, 1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 5], [9, 1, 8, 7, 6, 1, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5], [9, 1, 8, 7, 6, 1, 6, 1, 4, 1, 0, 2, 3, 4, 1, 5], [5, 1, 6, 7, 8, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 9], [5, 1, 6, 1, 6, 7, 8, 1, 4, 1, 4, 3, 2, 0, 1, 9], [5, 1, 4, 1, 6, 1, 6, 7, 8, 1, 4, 3, 2, 0, 1, 9], [5, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 6, 7, 8, 1, 9], [5, 1, 8, 7, 6, 1, 4, 1, 6, 1, 4, 3, 2, 0, 1, 9], [5, 1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 9], [5, 1, 8, 7, 6, 1, 6, 1, 0, 2, 3, 4, 1, 4, 1, 9], [5, 1, 8, 7, 6, 1, 6, 1, 4, 1, 0, 2, 3, 4, 1, 9]]
N euler path candidates : [[5, 1, 9, 6, 7, 8, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1], [1, 9, 6, 7, 8, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 5], [5, 1, 8, 7, 6, 9, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1], [5, 1, 6, 1, 8, 7, 6, 9, 1, 4, 1, 4, 3, 2, 0, 1], [5, 1, 4, 1, 6, 1, 8, 7, 6, 9, 1, 4, 3, 2, 0, 1], [5, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 8, 7, 6, 9, 1], [5, 1, 9, 6, 7, 8, 1, 4, 1, 6, 1, 4, 3, 2, 0, 1], [5, 1, 9, 6, 7, 8, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1], [5, 1, 9, 6, 7, 8, 1, 6, 1, 0, 2, 3, 4, 1, 4, 1], [5, 1, 9, 6, 7, 8, 1, 6, 1, 4, 1, 0, 2, 3, 4, 1], [5, 1, 9, 6, 1, 8, 7, 6, 1, 4, 1, 4, 3, 2, 0, 1], [1, 8, 7, 6, 9, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 5], [1, 6, 1, 8, 7, 6, 9, 1, 4, 1, 4, 3, 2, 0, 1, 5], [1, 4, 1, 6, 1, 8, 7, 6, 9, 1, 4, 3, 2, 0, 1, 5], [1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 8, 7, 6, 9, 1, 5], [1, 9, 6, 7, 8, 1, 4, 1, 6, 1, 4, 3, 2, 0, 1, 5], [1, 9, 6, 7, 8, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 5], [1, 9, 6, 7, 8, 1, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5], [1, 9, 6, 7, 8, 1, 6, 1, 4, 1, 0, 2, 3, 4, 1, 5], [1, 9, 6, 1, 8, 7, 6, 1, 4, 1, 4, 3, 2, 0, 1, 5], [5, 1, 9, 6, 7, 8, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1], [1, 9, 6, 7, 8, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 5], [5, 1, 8, 7, 6, 9, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1], [5, 1, 6, 1, 8, 7, 6, 9, 1, 4, 1, 4, 3, 2, 0, 1], [5, 1, 4, 1, 6, 1, 8, 7, 6, 9, 1, 4, 3, 2, 0, 1], [5, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 8, 7, 6, 9, 1], [5, 1, 9, 6, 7, 8, 1, 4, 1, 6, 1, 4, 3, 2, 0, 1], [5, 1, 9, 6, 7, 8, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1], [5, 1, 9, 6, 7, 8, 1, 6, 1, 0, 2, 3, 4, 1, 4, 1], [5, 1, 9, 6, 7, 8, 1, 6, 1, 4, 1, 0, 2, 3, 4, 1], [5, 1, 9, 6, 1, 8, 7, 6, 1, 4, 1, 4, 3, 2, 0, 1], [1, 8, 7, 6, 9, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 5], [1, 6, 1, 8, 7, 6, 9, 1, 4, 1, 4, 3, 2, 0, 1, 5], [1, 4, 1, 6, 1, 8, 7, 6, 9, 1, 4, 3, 2, 0, 1, 5], [1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 8, 7, 6, 9, 1, 5], [1, 9, 6, 7, 8, 1, 4, 1, 6, 1, 4, 3, 2, 0, 1, 5], [1, 9, 6, 7, 8, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 5], [1, 9, 6, 7, 8, 1, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5], [1, 9, 6, 7, 8, 1, 6, 1, 4, 1, 0, 2, 3, 4, 1, 5], [1, 9, 6, 1, 8, 7, 6, 1, 4, 1, 4, 3, 2, 0, 1, 5]]
P loop is : True
P loop number : [[1, 6, 4], [1, 6, 4]]
P loop count : [[5, 2, 2], [5, 2, 2]]
P loop point : [[[1, 5, 7, 9, 14], [4, 6], [8, 10]], [[1, 5, 7, 9, 14], [4, 6], [8, 10]]]
N loop is : True
N loop number : [[1, 6, 4], [1, 6, 4]]
N loop count : [[5, 2, 2], [5, 2, 2]]
N loop point : [[[1, 6, 8, 10, 15], [3, 7], [9, 11]], [[0, 5, 7, 9, 14], [2, 6], [8, 10]]]
P poly ordering : [['net7', 'A', 'B', 'CI', 'B', 'A', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['net9', 'A', 'B', 'CI', 'B', 'A', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['net7', 'B', 'CI', 'B', 'A', 'A', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['net7', 'B', 'A', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['net7', 'A', 'B', 'B', 'A', 'dummy', 'CI', 'B', 'A', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['net7', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'B', 'A', 'dummy', 'CI', 'B', 'A', 'net9'], ['net7', 'A', 'B', 'CI', 'B', 'A', 'B', 'A', 'dummy', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['net7', 'A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'A', 'dummy', 'net9'], ['net7', 'A', 'B', 'CI', 'B', 'A', 'dummy', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9'], ['net7', 'A', 'B', 'CI', 'B', 'A', 'dummy', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'net9'], ['net9', 'B', 'CI', 'B', 'A', 'A', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['net9', 'B', 'A', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['net9', 'A', 'B', 'B', 'A', 'dummy', 'CI', 'B', 'A', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['net9', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'B', 'A', 'dummy', 'CI', 'B', 'A', 'net7'], ['net9', 'A', 'B', 'CI', 'B', 'A', 'B', 'A', 'dummy', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['net9', 'A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'A', 'dummy', 'net7'], ['net9', 'A', 'B', 'CI', 'B', 'A', 'dummy', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net7'], ['net9', 'A', 'B', 'CI', 'B', 'A', 'dummy', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'net7'], ['net7', 'A', 'B', 'CI', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['net9', 'A', 'B', 'CI', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['net7', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['net7', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['net7', 'CI', 'B', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['net7', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'net9'], ['net7', 'A', 'B', 'CI', 'dummy', 'CI', 'B', 'A', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['net7', 'A', 'B', 'CI', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A', 'B', 'net9'], ['net7', 'A', 'B', 'CI', 'dummy', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['net7', 'A', 'B', 'CI', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'net9'], ['net9', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['net9', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['net9', 'CI', 'B', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'net7'], ['net9', 'A', 'B', 'CI', 'dummy', 'CI', 'B', 'A', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['net9', 'A', 'B', 'CI', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A', 'B', 'net7'], ['net9', 'A', 'B', 'CI', 'dummy', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['net9', 'A', 'B', 'CI', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'net7']]
N poly ordering : [['net9', 'net7', 'dummy', 'CI', 'B', 'A', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['net7', 'dummy', 'CI', 'B', 'A', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['net9', 'A', 'B', 'CI', 'dummy', 'net7', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['net9', 'B', 'A', 'A', 'B', 'CI', 'dummy', 'net7', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['net9', 'A', 'B', 'B', 'A', 'A', 'B', 'CI', 'dummy', 'net7', 'CI', 'net7', 'CI', 'B', 'A'], ['net9', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'B', 'A', 'A', 'B', 'CI', 'dummy', 'net7'], ['net9', 'net7', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'B', 'A', 'CI', 'net7', 'CI', 'B', 'A'], ['net9', 'net7', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'B', 'A'], ['net9', 'net7', 'dummy', 'CI', 'B', 'A', 'B', 'A', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI'], ['net9', 'net7', 'dummy', 'CI', 'B', 'A', 'B', 'A', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI'], ['net9', 'net7', 'dummy', 'B', 'A', 'B', 'CI', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['A', 'B', 'CI', 'dummy', 'net7', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['B', 'A', 'A', 'B', 'CI', 'dummy', 'net7', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['A', 'B', 'B', 'A', 'A', 'B', 'CI', 'dummy', 'net7', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'B', 'A', 'A', 'B', 'CI', 'dummy', 'net7', 'net9'], ['net7', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'B', 'A', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['net7', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'B', 'A', 'net9'], ['net7', 'dummy', 'CI', 'B', 'A', 'B', 'A', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9'], ['net7', 'dummy', 'CI', 'B', 'A', 'B', 'A', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'net9'], ['net7', 'dummy', 'B', 'A', 'B', 'CI', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['net9', 'net7', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['net7', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['net9', 'A', 'B', 'CI', 'dummy', 'net7', 'A', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['net9', 'A', 'B', 'A', 'B', 'CI', 'dummy', 'net7', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['net9', 'CI', 'B', 'A', 'B', 'A', 'B', 'CI', 'dummy', 'net7', 'A', 'net7', 'CI', 'B', 'A'], ['net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A', 'B', 'A', 'B', 'CI', 'dummy', 'net7'], ['net9', 'net7', 'dummy', 'CI', 'B', 'A', 'CI', 'B', 'A', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['net9', 'net7', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A', 'B'], ['net9', 'net7', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['net9', 'net7', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A'], ['net9', 'net7', 'dummy', 'A', 'A', 'B', 'CI', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['A', 'B', 'CI', 'dummy', 'net7', 'A', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['A', 'B', 'A', 'B', 'CI', 'dummy', 'net7', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['CI', 'B', 'A', 'B', 'A', 'B', 'CI', 'dummy', 'net7', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A', 'B', 'A', 'B', 'CI', 'dummy', 'net7', 'net9'], ['net7', 'dummy', 'CI', 'B', 'A', 'CI', 'B', 'A', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['net7', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A', 'B', 'net9'], ['net7', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['net7', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'net9'], ['net7', 'dummy', 'A', 'A', 'B', 'CI', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net9']]
Poly ordering : [['net9', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'B', 'A', 'A', 'B', 'CI', 'dummy', 'net7'], ['net7', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net9']]
P diffusion chain : [['S', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD', 'net1', 'VDD', 'net19', 'net7', 'net1', 'VDD', 'CO'], ['CO', 'VDD', 'net1', 'net7', 'net19', 'VDD', 'net1', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'S']]
N diffusion chain : [['S', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS', 'net5', 'VSS', 'net36', 'net7', 'net5', 'CO', 'VSS'], ['VSS', 'CO', 'net5', 'net7', 'net36', 'VSS', 'net5', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'S']]
Diffusion sharing : [3, 3]
P Diffusion weight : [38, 38]
N Diffusion weight : [26, 26]
Total diffusion weight : [61, 61]
END

Cell Name : FA_X1
P Vertex : ['net31', 'VDD', 'net29', 'net9', 'net3', 'S', 'net1', 'net7', 'net19', 'CO']
N Vertex : ['net49', 'VSS', 'net47', 'net9', 'net42', 'S', 'net5', 'net7', 'net36', 'CO']
Edge : ['A', 'B', 'CI', 'net7', 'net9', 'dummy']
Tr_info : [[['net31', 'A', 'VDD'], ['net29', 'B', 'net31'], ['net9', 'CI', 'net29'], ['net3', 'net7', 'net9'], ['VDD', 'A', 'net3'], ['net3', 'B', 'VDD'], ['VDD', 'CI', 'net3'], ['S', 'net9', 'VDD'], ['VDD', 'B', 'net1'], ['net1', 'A', 'VDD'], ['net7', 'CI', 'net1'], ['net19', 'B', 'net7'], ['VDD', 'A', 'net19'], ['CO', 'net7', 'VDD'], ['VDD', 'dummy', 'net1']], [['net49', 'A', 'VSS'], ['net47', 'B', 'net49'], ['net9', 'CI', 'net47'], ['net42', 'net7', 'net9'], ['VSS', 'A', 'net42'], ['net42', 'B', 'VSS'], ['VSS', 'CI', 'net42'], ['S', 'net9', 'VSS'], ['VSS', 'B', 'net5'], ['net5', 'A', 'VSS'], ['net7', 'CI', 'net5'], ['net36', 'B', 'net7'], ['VSS', 'A', 'net36'], ['CO', 'net7', 'VSS'], ['S', 'dummy', 'net5']]]
P matrix = [[0, 1, 1, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 3, 1, 3, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0], [0, 3, 0, 1, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 3, 0, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0]]
N matrix = [[0, 1, 1, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 3, 1, 2, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0], [0, 3, 0, 1, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0], [0, 2, 0, 0, 0, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0]]
P odd degree count : 2
N odd degree count : 2
P start point : [5, 9]
N start point : [1, 9]
Is dummy need : False
P dummy count : 1
N dummy count : 1
P euler path candidates : [[9, 1, 8, 7, 6, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 5], [5, 1, 8, 7, 6, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 9], [9, 1, 6, 7, 8, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 5], [9, 1, 6, 1, 6, 7, 8, 1, 4, 1, 4, 3, 2, 0, 1, 5], [9, 1, 4, 1, 6, 1, 6, 7, 8, 1, 4, 3, 2, 0, 1, 5], [9, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 6, 7, 8, 1, 5], [9, 1, 8, 7, 6, 1, 4, 1, 6, 1, 4, 3, 2, 0, 1, 5], [9, 1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 5], [9, 1, 8, 7, 6, 1, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5], [9, 1, 8, 7, 6, 1, 6, 1, 4, 1, 0, 2, 3, 4, 1, 5], [5, 1, 6, 7, 8, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 9], [5, 1, 6, 1, 6, 7, 8, 1, 4, 1, 4, 3, 2, 0, 1, 9], [5, 1, 4, 1, 6, 1, 6, 7, 8, 1, 4, 3, 2, 0, 1, 9], [5, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 6, 7, 8, 1, 9], [5, 1, 8, 7, 6, 1, 4, 1, 6, 1, 4, 3, 2, 0, 1, 9], [5, 1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 9], [5, 1, 8, 7, 6, 1, 6, 1, 0, 2, 3, 4, 1, 4, 1, 9], [5, 1, 8, 7, 6, 1, 6, 1, 4, 1, 0, 2, 3, 4, 1, 9], [9, 1, 8, 7, 6, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 5], [5, 1, 8, 7, 6, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 9], [9, 1, 6, 7, 8, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 5], [9, 1, 6, 1, 6, 7, 8, 1, 4, 1, 4, 3, 2, 0, 1, 5], [9, 1, 4, 1, 6, 1, 6, 7, 8, 1, 4, 3, 2, 0, 1, 5], [9, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 6, 7, 8, 1, 5], [9, 1, 8, 7, 6, 1, 4, 1, 6, 1, 4, 3, 2, 0, 1, 5], [9, 1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 5], [9, 1, 8, 7, 6, 1, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5], [9, 1, 8, 7, 6, 1, 6, 1, 4, 1, 0, 2, 3, 4, 1, 5], [5, 1, 6, 7, 8, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 9], [5, 1, 6, 1, 6, 7, 8, 1, 4, 1, 4, 3, 2, 0, 1, 9], [5, 1, 4, 1, 6, 1, 6, 7, 8, 1, 4, 3, 2, 0, 1, 9], [5, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 6, 7, 8, 1, 9], [5, 1, 8, 7, 6, 1, 4, 1, 6, 1, 4, 3, 2, 0, 1, 9], [5, 1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 9], [5, 1, 8, 7, 6, 1, 6, 1, 0, 2, 3, 4, 1, 4, 1, 9], [5, 1, 8, 7, 6, 1, 6, 1, 4, 1, 0, 2, 3, 4, 1, 9]]
N euler path candidates : [[9, 1, 8, 7, 6, 1, 6, 5, 1, 4, 1, 4, 3, 2, 0, 1], [1, 8, 7, 6, 1, 6, 5, 1, 4, 1, 4, 3, 2, 0, 1, 9], [9, 1, 6, 7, 8, 1, 6, 5, 1, 4, 1, 4, 3, 2, 0, 1], [9, 1, 5, 6, 1, 6, 7, 8, 1, 4, 1, 4, 3, 2, 0, 1], [9, 1, 4, 1, 5, 6, 1, 6, 7, 8, 1, 4, 3, 2, 0, 1], [9, 1, 0, 2, 3, 4, 1, 4, 1, 5, 6, 1, 6, 7, 8, 1], [9, 1, 8, 7, 6, 1, 5, 6, 1, 4, 1, 4, 3, 2, 0, 1], [9, 1, 8, 7, 6, 1, 4, 1, 5, 6, 1, 4, 3, 2, 0, 1], [9, 1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 6, 1], [9, 1, 8, 7, 6, 1, 6, 5, 1, 0, 2, 3, 4, 1, 4, 1], [9, 1, 8, 7, 6, 1, 6, 5, 1, 4, 1, 0, 2, 3, 4, 1], [1, 6, 7, 8, 1, 6, 5, 1, 4, 1, 4, 3, 2, 0, 1, 9], [1, 5, 6, 1, 6, 7, 8, 1, 4, 1, 4, 3, 2, 0, 1, 9], [1, 4, 1, 5, 6, 1, 6, 7, 8, 1, 4, 3, 2, 0, 1, 9], [1, 0, 2, 3, 4, 1, 4, 1, 5, 6, 1, 6, 7, 8, 1, 9], [1, 8, 7, 6, 1, 5, 6, 1, 4, 1, 4, 3, 2, 0, 1, 9], [1, 8, 7, 6, 1, 4, 1, 5, 6, 1, 4, 3, 2, 0, 1, 9], [1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 6, 1, 9], [1, 8, 7, 6, 1, 6, 5, 1, 0, 2, 3, 4, 1, 4, 1, 9], [1, 8, 7, 6, 1, 6, 5, 1, 4, 1, 0, 2, 3, 4, 1, 9], [9, 1, 8, 7, 6, 1, 6, 5, 1, 4, 1, 4, 3, 2, 0, 1], [1, 8, 7, 6, 1, 6, 5, 1, 4, 1, 4, 3, 2, 0, 1, 9], [9, 1, 6, 7, 8, 1, 6, 5, 1, 4, 1, 4, 3, 2, 0, 1], [9, 1, 5, 6, 1, 6, 7, 8, 1, 4, 1, 4, 3, 2, 0, 1], [9, 1, 4, 1, 5, 6, 1, 6, 7, 8, 1, 4, 3, 2, 0, 1], [9, 1, 0, 2, 3, 4, 1, 4, 1, 5, 6, 1, 6, 7, 8, 1], [9, 1, 8, 7, 6, 1, 5, 6, 1, 4, 1, 4, 3, 2, 0, 1], [9, 1, 8, 7, 6, 1, 4, 1, 5, 6, 1, 4, 3, 2, 0, 1], [9, 1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 6, 1], [9, 1, 8, 7, 6, 1, 6, 5, 1, 0, 2, 3, 4, 1, 4, 1], [9, 1, 8, 7, 6, 1, 6, 5, 1, 4, 1, 0, 2, 3, 4, 1], [1, 6, 7, 8, 1, 6, 5, 1, 4, 1, 4, 3, 2, 0, 1, 9], [1, 5, 6, 1, 6, 7, 8, 1, 4, 1, 4, 3, 2, 0, 1, 9], [1, 4, 1, 5, 6, 1, 6, 7, 8, 1, 4, 3, 2, 0, 1, 9], [1, 0, 2, 3, 4, 1, 4, 1, 5, 6, 1, 6, 7, 8, 1, 9], [1, 8, 7, 6, 1, 5, 6, 1, 4, 1, 4, 3, 2, 0, 1, 9], [1, 8, 7, 6, 1, 4, 1, 5, 6, 1, 4, 3, 2, 0, 1, 9], [1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 6, 1, 9], [1, 8, 7, 6, 1, 6, 5, 1, 0, 2, 3, 4, 1, 4, 1, 9], [1, 8, 7, 6, 1, 6, 5, 1, 4, 1, 0, 2, 3, 4, 1, 9]]
P loop is : True
P loop number : [[1, 6, 4], [1, 6, 4]]
P loop count : [[5, 2, 2], [5, 2, 2]]
P loop point : [[[1, 5, 7, 9, 14], [4, 6], [8, 10]], [[1, 5, 7, 9, 14], [4, 6], [8, 10]]]
N loop is : True
N loop number : [[1, 6, 4], [1, 6, 4]]
N loop count : [[5, 2, 2], [5, 2, 2]]
N loop point : [[[1, 5, 8, 10, 15], [4, 6], [9, 11]], [[0, 4, 7, 9, 14], [3, 5], [8, 10]]]
P poly ordering : [['net7', 'A', 'B', 'CI', 'B', 'A', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['net9', 'A', 'B', 'CI', 'B', 'A', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['net7', 'B', 'CI', 'B', 'A', 'A', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['net7', 'B', 'A', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['net7', 'A', 'B', 'B', 'A', 'dummy', 'CI', 'B', 'A', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['net7', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'B', 'A', 'dummy', 'CI', 'B', 'A', 'net9'], ['net7', 'A', 'B', 'CI', 'B', 'A', 'B', 'A', 'dummy', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['net7', 'A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'A', 'dummy', 'net9'], ['net7', 'A', 'B', 'CI', 'B', 'A', 'dummy', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9'], ['net7', 'A', 'B', 'CI', 'B', 'A', 'dummy', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'net9'], ['net9', 'B', 'CI', 'B', 'A', 'A', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['net9', 'B', 'A', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['net9', 'A', 'B', 'B', 'A', 'dummy', 'CI', 'B', 'A', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['net9', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'B', 'A', 'dummy', 'CI', 'B', 'A', 'net7'], ['net9', 'A', 'B', 'CI', 'B', 'A', 'B', 'A', 'dummy', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['net9', 'A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'A', 'dummy', 'net7'], ['net9', 'A', 'B', 'CI', 'B', 'A', 'dummy', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net7'], ['net9', 'A', 'B', 'CI', 'B', 'A', 'dummy', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'net7'], ['net7', 'A', 'B', 'CI', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['net9', 'A', 'B', 'CI', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['net7', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['net7', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['net7', 'CI', 'B', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['net7', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'net9'], ['net7', 'A', 'B', 'CI', 'dummy', 'CI', 'B', 'A', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['net7', 'A', 'B', 'CI', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A', 'B', 'net9'], ['net7', 'A', 'B', 'CI', 'dummy', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['net7', 'A', 'B', 'CI', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'net9'], ['net9', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['net9', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['net9', 'CI', 'B', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'net7'], ['net9', 'A', 'B', 'CI', 'dummy', 'CI', 'B', 'A', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['net9', 'A', 'B', 'CI', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A', 'B', 'net7'], ['net9', 'A', 'B', 'CI', 'dummy', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['net9', 'A', 'B', 'CI', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'net7']]
N poly ordering : [['net7', 'A', 'B', 'CI', 'B', 'A', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['A', 'B', 'CI', 'B', 'A', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['net7', 'B', 'CI', 'B', 'A', 'A', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['net7', 'net9', 'dummy', 'B', 'A', 'CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['net7', 'A', 'B', 'net9', 'dummy', 'B', 'A', 'CI', 'B', 'A', 'CI', 'net7', 'CI', 'B', 'A'], ['net7', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'B', 'A', 'CI', 'B', 'A'], ['net7', 'A', 'B', 'CI', 'B', 'net9', 'dummy', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['net7', 'A', 'B', 'CI', 'B', 'A', 'B', 'net9', 'dummy', 'A', 'CI', 'net7', 'CI', 'B', 'A'], ['net7', 'A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'A'], ['net7', 'A', 'B', 'CI', 'B', 'A', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI'], ['net7', 'A', 'B', 'CI', 'B', 'A', 'dummy', 'net9', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI'], ['B', 'CI', 'B', 'A', 'A', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['net9', 'dummy', 'B', 'A', 'CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['A', 'B', 'net9', 'dummy', 'B', 'A', 'CI', 'B', 'A', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'B', 'A', 'CI', 'B', 'A', 'net7'], ['A', 'B', 'CI', 'B', 'net9', 'dummy', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['A', 'B', 'CI', 'B', 'A', 'B', 'net9', 'dummy', 'A', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'A', 'net7'], ['A', 'B', 'CI', 'B', 'A', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net7'], ['A', 'B', 'CI', 'B', 'A', 'dummy', 'net9', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'net7'], ['net7', 'A', 'B', 'CI', 'A', 'B', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['A', 'B', 'CI', 'A', 'B', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['net7', 'A', 'CI', 'B', 'A', 'B', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['net7', 'net9', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['net7', 'CI', 'B', 'net9', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'A', 'net7', 'CI', 'B', 'A'], ['net7', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9', 'dummy', 'A', 'B', 'CI', 'B', 'A'], ['net7', 'A', 'B', 'CI', 'A', 'net9', 'dummy', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['net7', 'A', 'B', 'CI', 'A', 'CI', 'B', 'net9', 'dummy', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['net7', 'A', 'B', 'CI', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9', 'dummy', 'B'], ['net7', 'A', 'B', 'CI', 'A', 'B', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['net7', 'A', 'B', 'CI', 'A', 'B', 'dummy', 'net9', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A'], ['A', 'CI', 'B', 'A', 'B', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['net9', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['CI', 'B', 'net9', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'net7'], ['A', 'B', 'CI', 'A', 'net9', 'dummy', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['A', 'B', 'CI', 'A', 'CI', 'B', 'net9', 'dummy', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['A', 'B', 'CI', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9', 'dummy', 'B', 'net7'], ['A', 'B', 'CI', 'A', 'B', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['A', 'B', 'CI', 'A', 'B', 'dummy', 'net9', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'net7']]
Poly ordering : [['net9', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7']]
P diffusion chain : [['S', 'VDD', 'net1', 'VDD', 'net1', 'net7', 'net19', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'CO']]
N diffusion chain : [['VSS', 'S', 'net5', 'VSS', 'net5', 'net7', 'net36', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'CO']]
Diffusion sharing : [3]
P Diffusion weight : [38]
N Diffusion weight : [26]
Total diffusion weight : [61]
END

Cell Name : FA_X1
P Vertex : ['net31', 'VDD', 'net29', 'net9', 'net3', 'S', 'net1', 'net7', 'net19', 'CO']
N Vertex : ['net49', 'VSS', 'net47', 'net9', 'net42', 'S', 'net5', 'net7', 'net36', 'CO']
Edge : ['A', 'B', 'CI', 'net7', 'net9', 'dummy']
Tr_info : [[['net31', 'A', 'VDD'], ['net29', 'B', 'net31'], ['net9', 'CI', 'net29'], ['net3', 'net7', 'net9'], ['VDD', 'A', 'net3'], ['net3', 'B', 'VDD'], ['VDD', 'CI', 'net3'], ['S', 'net9', 'VDD'], ['VDD', 'B', 'net1'], ['net1', 'A', 'VDD'], ['net7', 'CI', 'net1'], ['net19', 'B', 'net7'], ['VDD', 'A', 'net19'], ['CO', 'net7', 'VDD'], ['VDD', 'dummy', 'net1']], [['net49', 'A', 'VSS'], ['net47', 'B', 'net49'], ['net9', 'CI', 'net47'], ['net42', 'net7', 'net9'], ['VSS', 'A', 'net42'], ['net42', 'B', 'VSS'], ['VSS', 'CI', 'net42'], ['S', 'net9', 'VSS'], ['VSS', 'B', 'net5'], ['net5', 'A', 'VSS'], ['net7', 'CI', 'net5'], ['net36', 'B', 'net7'], ['VSS', 'A', 'net36'], ['CO', 'net7', 'VSS'], ['VSS', 'dummy', 'net5']]]
P matrix = [[0, 1, 1, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 3, 1, 3, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0], [0, 3, 0, 1, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 3, 0, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0]]
N matrix = [[0, 1, 1, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 3, 1, 3, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0], [0, 3, 0, 1, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 3, 0, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0]]
P odd degree count : 2
N odd degree count : 2
P start point : [5, 9]
N start point : [5, 9]
Is dummy need : False
P dummy count : 1
N dummy count : 1
P euler path candidates : [[9, 1, 8, 7, 6, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 5], [5, 1, 8, 7, 6, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 9], [9, 1, 6, 7, 8, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 5], [9, 1, 6, 1, 6, 7, 8, 1, 4, 1, 4, 3, 2, 0, 1, 5], [9, 1, 4, 1, 6, 1, 6, 7, 8, 1, 4, 3, 2, 0, 1, 5], [9, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 6, 7, 8, 1, 5], [9, 1, 8, 7, 6, 1, 4, 1, 6, 1, 4, 3, 2, 0, 1, 5], [9, 1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 5], [9, 1, 8, 7, 6, 1, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5], [9, 1, 8, 7, 6, 1, 6, 1, 4, 1, 0, 2, 3, 4, 1, 5], [5, 1, 6, 7, 8, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 9], [5, 1, 6, 1, 6, 7, 8, 1, 4, 1, 4, 3, 2, 0, 1, 9], [5, 1, 4, 1, 6, 1, 6, 7, 8, 1, 4, 3, 2, 0, 1, 9], [5, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 6, 7, 8, 1, 9], [5, 1, 8, 7, 6, 1, 4, 1, 6, 1, 4, 3, 2, 0, 1, 9], [5, 1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 9], [5, 1, 8, 7, 6, 1, 6, 1, 0, 2, 3, 4, 1, 4, 1, 9], [5, 1, 8, 7, 6, 1, 6, 1, 4, 1, 0, 2, 3, 4, 1, 9], [9, 1, 8, 7, 6, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 5], [5, 1, 8, 7, 6, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 9], [9, 1, 6, 7, 8, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 5], [9, 1, 6, 1, 6, 7, 8, 1, 4, 1, 4, 3, 2, 0, 1, 5], [9, 1, 4, 1, 6, 1, 6, 7, 8, 1, 4, 3, 2, 0, 1, 5], [9, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 6, 7, 8, 1, 5], [9, 1, 8, 7, 6, 1, 4, 1, 6, 1, 4, 3, 2, 0, 1, 5], [9, 1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 5], [9, 1, 8, 7, 6, 1, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5], [9, 1, 8, 7, 6, 1, 6, 1, 4, 1, 0, 2, 3, 4, 1, 5], [5, 1, 6, 7, 8, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 9], [5, 1, 6, 1, 6, 7, 8, 1, 4, 1, 4, 3, 2, 0, 1, 9], [5, 1, 4, 1, 6, 1, 6, 7, 8, 1, 4, 3, 2, 0, 1, 9], [5, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 6, 7, 8, 1, 9], [5, 1, 8, 7, 6, 1, 4, 1, 6, 1, 4, 3, 2, 0, 1, 9], [5, 1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 9], [5, 1, 8, 7, 6, 1, 6, 1, 0, 2, 3, 4, 1, 4, 1, 9], [5, 1, 8, 7, 6, 1, 6, 1, 4, 1, 0, 2, 3, 4, 1, 9]]
N euler path candidates : [[9, 1, 8, 7, 6, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 5], [5, 1, 8, 7, 6, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 9], [9, 1, 6, 7, 8, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 5], [9, 1, 6, 1, 6, 7, 8, 1, 4, 1, 4, 3, 2, 0, 1, 5], [9, 1, 4, 1, 6, 1, 6, 7, 8, 1, 4, 3, 2, 0, 1, 5], [9, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 6, 7, 8, 1, 5], [9, 1, 8, 7, 6, 1, 4, 1, 6, 1, 4, 3, 2, 0, 1, 5], [9, 1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 5], [9, 1, 8, 7, 6, 1, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5], [9, 1, 8, 7, 6, 1, 6, 1, 4, 1, 0, 2, 3, 4, 1, 5], [5, 1, 6, 7, 8, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 9], [5, 1, 6, 1, 6, 7, 8, 1, 4, 1, 4, 3, 2, 0, 1, 9], [5, 1, 4, 1, 6, 1, 6, 7, 8, 1, 4, 3, 2, 0, 1, 9], [5, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 6, 7, 8, 1, 9], [5, 1, 8, 7, 6, 1, 4, 1, 6, 1, 4, 3, 2, 0, 1, 9], [5, 1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 9], [5, 1, 8, 7, 6, 1, 6, 1, 0, 2, 3, 4, 1, 4, 1, 9], [5, 1, 8, 7, 6, 1, 6, 1, 4, 1, 0, 2, 3, 4, 1, 9], [9, 1, 8, 7, 6, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 5], [5, 1, 8, 7, 6, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 9], [9, 1, 6, 7, 8, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 5], [9, 1, 6, 1, 6, 7, 8, 1, 4, 1, 4, 3, 2, 0, 1, 5], [9, 1, 4, 1, 6, 1, 6, 7, 8, 1, 4, 3, 2, 0, 1, 5], [9, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 6, 7, 8, 1, 5], [9, 1, 8, 7, 6, 1, 4, 1, 6, 1, 4, 3, 2, 0, 1, 5], [9, 1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 5], [9, 1, 8, 7, 6, 1, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5], [9, 1, 8, 7, 6, 1, 6, 1, 4, 1, 0, 2, 3, 4, 1, 5], [5, 1, 6, 7, 8, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 9], [5, 1, 6, 1, 6, 7, 8, 1, 4, 1, 4, 3, 2, 0, 1, 9], [5, 1, 4, 1, 6, 1, 6, 7, 8, 1, 4, 3, 2, 0, 1, 9], [5, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 6, 7, 8, 1, 9], [5, 1, 8, 7, 6, 1, 4, 1, 6, 1, 4, 3, 2, 0, 1, 9], [5, 1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 6, 1, 9], [5, 1, 8, 7, 6, 1, 6, 1, 0, 2, 3, 4, 1, 4, 1, 9], [5, 1, 8, 7, 6, 1, 6, 1, 4, 1, 0, 2, 3, 4, 1, 9]]
P loop is : True
P loop number : [[1, 6, 4], [1, 6, 4]]
P loop count : [[5, 2, 2], [5, 2, 2]]
P loop point : [[[1, 5, 7, 9, 14], [4, 6], [8, 10]], [[1, 5, 7, 9, 14], [4, 6], [8, 10]]]
N loop is : True
N loop number : [[1, 6, 4], [1, 6, 4]]
N loop count : [[5, 2, 2], [5, 2, 2]]
N loop point : [[[1, 5, 7, 9, 14], [4, 6], [8, 10]], [[1, 5, 7, 9, 14], [4, 6], [8, 10]]]
P poly ordering : [['net7', 'A', 'B', 'CI', 'B', 'A', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['net9', 'A', 'B', 'CI', 'B', 'A', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['net7', 'B', 'CI', 'B', 'A', 'A', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['net7', 'B', 'A', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['net7', 'A', 'B', 'B', 'A', 'dummy', 'CI', 'B', 'A', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['net7', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'B', 'A', 'dummy', 'CI', 'B', 'A', 'net9'], ['net7', 'A', 'B', 'CI', 'B', 'A', 'B', 'A', 'dummy', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['net7', 'A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'A', 'dummy', 'net9'], ['net7', 'A', 'B', 'CI', 'B', 'A', 'dummy', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9'], ['net7', 'A', 'B', 'CI', 'B', 'A', 'dummy', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'net9'], ['net9', 'B', 'CI', 'B', 'A', 'A', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['net9', 'B', 'A', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['net9', 'A', 'B', 'B', 'A', 'dummy', 'CI', 'B', 'A', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['net9', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'B', 'A', 'dummy', 'CI', 'B', 'A', 'net7'], ['net9', 'A', 'B', 'CI', 'B', 'A', 'B', 'A', 'dummy', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['net9', 'A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'A', 'dummy', 'net7'], ['net9', 'A', 'B', 'CI', 'B', 'A', 'dummy', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net7'], ['net9', 'A', 'B', 'CI', 'B', 'A', 'dummy', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'net7'], ['net7', 'A', 'B', 'CI', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['net9', 'A', 'B', 'CI', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['net7', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['net7', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['net7', 'CI', 'B', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['net7', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'net9'], ['net7', 'A', 'B', 'CI', 'dummy', 'CI', 'B', 'A', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['net7', 'A', 'B', 'CI', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A', 'B', 'net9'], ['net7', 'A', 'B', 'CI', 'dummy', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['net7', 'A', 'B', 'CI', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'net9'], ['net9', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['net9', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['net9', 'CI', 'B', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'net7'], ['net9', 'A', 'B', 'CI', 'dummy', 'CI', 'B', 'A', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['net9', 'A', 'B', 'CI', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A', 'B', 'net7'], ['net9', 'A', 'B', 'CI', 'dummy', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['net9', 'A', 'B', 'CI', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'net7']]
N poly ordering : [['net7', 'A', 'B', 'CI', 'B', 'A', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['net9', 'A', 'B', 'CI', 'B', 'A', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['net7', 'B', 'CI', 'B', 'A', 'A', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['net7', 'B', 'A', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['net7', 'A', 'B', 'B', 'A', 'dummy', 'CI', 'B', 'A', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['net7', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'B', 'A', 'dummy', 'CI', 'B', 'A', 'net9'], ['net7', 'A', 'B', 'CI', 'B', 'A', 'B', 'A', 'dummy', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['net7', 'A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'A', 'dummy', 'net9'], ['net7', 'A', 'B', 'CI', 'B', 'A', 'dummy', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9'], ['net7', 'A', 'B', 'CI', 'B', 'A', 'dummy', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'net9'], ['net9', 'B', 'CI', 'B', 'A', 'A', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['net9', 'B', 'A', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['net9', 'A', 'B', 'B', 'A', 'dummy', 'CI', 'B', 'A', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['net9', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'B', 'A', 'dummy', 'CI', 'B', 'A', 'net7'], ['net9', 'A', 'B', 'CI', 'B', 'A', 'B', 'A', 'dummy', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['net9', 'A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'A', 'dummy', 'net7'], ['net9', 'A', 'B', 'CI', 'B', 'A', 'dummy', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net7'], ['net9', 'A', 'B', 'CI', 'B', 'A', 'dummy', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'net7'], ['net7', 'A', 'B', 'CI', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['net9', 'A', 'B', 'CI', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['net7', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['net7', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['net7', 'CI', 'B', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['net7', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'net9'], ['net7', 'A', 'B', 'CI', 'dummy', 'CI', 'B', 'A', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['net7', 'A', 'B', 'CI', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A', 'B', 'net9'], ['net7', 'A', 'B', 'CI', 'dummy', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['net7', 'A', 'B', 'CI', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'net9'], ['net9', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['net9', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['net9', 'CI', 'B', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'net7'], ['net9', 'A', 'B', 'CI', 'dummy', 'CI', 'B', 'A', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['net9', 'A', 'B', 'CI', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A', 'B', 'net7'], ['net9', 'A', 'B', 'CI', 'dummy', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['net9', 'A', 'B', 'CI', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'net7']]
Poly ordering : [['net7', 'A', 'B', 'CI', 'B', 'A', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'net7'], ['net9', 'A', 'B', 'CI', 'B', 'A', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['net7', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'net9'], ['net7', 'B', 'CI', 'B', 'A', 'A', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['net7', 'B', 'A', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['net7', 'A', 'B', 'B', 'A', 'dummy', 'CI', 'B', 'A', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['net7', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'B', 'A', 'dummy', 'CI', 'B', 'A', 'net9'], ['net9', 'A', 'B', 'CI', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['net7', 'A', 'B', 'CI', 'B', 'A', 'B', 'A', 'dummy', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['net7', 'A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'A', 'dummy', 'net9'], ['net7', 'A', 'B', 'CI', 'B', 'A', 'dummy', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9'], ['net7', 'A', 'B', 'CI', 'B', 'A', 'dummy', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'net9'], ['net9', 'B', 'CI', 'B', 'A', 'A', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['net9', 'B', 'A', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['net9', 'A', 'B', 'B', 'A', 'dummy', 'CI', 'B', 'A', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['net9', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'B', 'A', 'dummy', 'CI', 'B', 'A', 'net7'], ['net7', 'A', 'B', 'CI', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['net9', 'A', 'B', 'CI', 'B', 'A', 'B', 'A', 'dummy', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['net9', 'A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'A', 'dummy', 'net7'], ['net9', 'A', 'B', 'CI', 'B', 'A', 'dummy', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net7'], ['net9', 'A', 'B', 'CI', 'B', 'A', 'dummy', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'net7'], ['net9', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'B', 'A', 'dummy', 'CI', 'B', 'A', 'net7'], ['net7', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'B', 'A', 'dummy', 'CI', 'B', 'A', 'net9'], ['net7', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['net7', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['net7', 'CI', 'B', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['net9', 'A', 'B', 'CI', 'B', 'A', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['net7', 'A', 'B', 'CI', 'dummy', 'CI', 'B', 'A', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net9'], ['net7', 'A', 'B', 'CI', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A', 'B', 'net9'], ['net7', 'A', 'B', 'CI', 'dummy', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['net7', 'A', 'B', 'CI', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'net9'], ['net9', 'dummy', 'CI', 'B', 'A', 'A', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['net9', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['net9', 'CI', 'B', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['net7', 'A', 'B', 'CI', 'B', 'A', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9'], ['net9', 'A', 'B', 'CI', 'dummy', 'CI', 'B', 'A', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['net9', 'A', 'B', 'CI', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A', 'B', 'net7'], ['net9', 'A', 'B', 'CI', 'dummy', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['net9', 'A', 'B', 'CI', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'net7']]
P diffusion chain : [['CO', 'VDD', 'net19', 'net7', 'net1', 'VDD', 'net1', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'S'], ['S', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD', 'net1', 'VDD', 'net1', 'net7', 'net19', 'VDD', 'CO'], ['S', 'VDD', 'net19', 'net7', 'net1', 'VDD', 'net1', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'CO'], ['CO', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD', 'net1', 'VDD', 'net1', 'net7', 'net19', 'VDD', 'S'], ['CO', 'VDD', 'net1', 'net7', 'net19', 'VDD', 'net1', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'S'], ['CO', 'VDD', 'net1', 'VDD', 'net1', 'net7', 'net19', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'S'], ['CO', 'VDD', 'net3', 'VDD', 'net1', 'VDD', 'net1', 'net7', 'net19', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'S'], ['CO', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD', 'net1', 'VDD', 'net1', 'net7', 'net19', 'VDD', 'S'], ['S', 'VDD', 'net19', 'net7', 'net1', 'VDD', 'net1', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'CO'], ['CO', 'VDD', 'net19', 'net7', 'net1', 'VDD', 'net3', 'VDD', 'net1', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'S'], ['CO', 'VDD', 'net19', 'net7', 'net1', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD', 'net1', 'VDD', 'S'], ['CO', 'VDD', 'net19', 'net7', 'net1', 'VDD', 'net1', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD', 'S'], ['CO', 'VDD', 'net19', 'net7', 'net1', 'VDD', 'net1', 'VDD', 'net3', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'S'], ['S', 'VDD', 'net1', 'net7', 'net19', 'VDD', 'net1', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'CO'], ['S', 'VDD', 'net1', 'VDD', 'net1', 'net7', 'net19', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'CO'], ['S', 'VDD', 'net3', 'VDD', 'net1', 'VDD', 'net1', 'net7', 'net19', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'CO'], ['S', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD', 'net1', 'VDD', 'net1', 'net7', 'net19', 'VDD', 'CO'], ['CO', 'VDD', 'net19', 'net7', 'net1', 'VDD', 'net1', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'S'], ['S', 'VDD', 'net19', 'net7', 'net1', 'VDD', 'net3', 'VDD', 'net1', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'CO'], ['S', 'VDD', 'net19', 'net7', 'net1', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD', 'net1', 'VDD', 'CO'], ['S', 'VDD', 'net19', 'net7', 'net1', 'VDD', 'net1', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD', 'CO'], ['S', 'VDD', 'net19', 'net7', 'net1', 'VDD', 'net1', 'VDD', 'net3', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'CO'], ['S', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD', 'net1', 'VDD', 'net1', 'net7', 'net19', 'VDD', 'CO'], ['CO', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD', 'net1', 'VDD', 'net1', 'net7', 'net19', 'VDD', 'S'], ['CO', 'VDD', 'net1', 'net7', 'net19', 'VDD', 'net1', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'S'], ['CO', 'VDD', 'net1', 'VDD', 'net1', 'net7', 'net19', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'S'], ['CO', 'VDD', 'net3', 'VDD', 'net1', 'VDD', 'net1', 'net7', 'net19', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'S'], ['S', 'VDD', 'net19', 'net7', 'net1', 'VDD', 'net1', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'CO'], ['CO', 'VDD', 'net19', 'net7', 'net1', 'VDD', 'net3', 'VDD', 'net1', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'S'], ['CO', 'VDD', 'net19', 'net7', 'net1', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD', 'net1', 'VDD', 'S'], ['CO', 'VDD', 'net19', 'net7', 'net1', 'VDD', 'net1', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD', 'S'], ['CO', 'VDD', 'net19', 'net7', 'net1', 'VDD', 'net1', 'VDD', 'net3', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'S'], ['S', 'VDD', 'net1', 'net7', 'net19', 'VDD', 'net1', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'CO'], ['S', 'VDD', 'net1', 'VDD', 'net1', 'net7', 'net19', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'CO'], ['S', 'VDD', 'net3', 'VDD', 'net1', 'VDD', 'net1', 'net7', 'net19', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'CO'], ['CO', 'VDD', 'net19', 'net7', 'net1', 'VDD', 'net1', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'S'], ['S', 'VDD', 'net19', 'net7', 'net1', 'VDD', 'net3', 'VDD', 'net1', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'CO'], ['S', 'VDD', 'net19', 'net7', 'net1', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD', 'net1', 'VDD', 'CO'], ['S', 'VDD', 'net19', 'net7', 'net1', 'VDD', 'net1', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD', 'CO'], ['S', 'VDD', 'net19', 'net7', 'net1', 'VDD', 'net1', 'VDD', 'net3', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'CO']]
N diffusion chain : [['CO', 'VSS', 'net36', 'net7', 'net5', 'VSS', 'net5', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'S'], ['S', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS', 'net5', 'VSS', 'net5', 'net7', 'net36', 'VSS', 'CO'], ['S', 'VSS', 'net36', 'net7', 'net5', 'VSS', 'net5', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'CO'], ['CO', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS', 'net5', 'VSS', 'net5', 'net7', 'net36', 'VSS', 'S'], ['CO', 'VSS', 'net5', 'net7', 'net36', 'VSS', 'net5', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'S'], ['CO', 'VSS', 'net5', 'VSS', 'net5', 'net7', 'net36', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'S'], ['CO', 'VSS', 'net42', 'VSS', 'net5', 'VSS', 'net5', 'net7', 'net36', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'S'], ['CO', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS', 'net5', 'VSS', 'net5', 'net7', 'net36', 'VSS', 'S'], ['S', 'VSS', 'net36', 'net7', 'net5', 'VSS', 'net5', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'CO'], ['CO', 'VSS', 'net36', 'net7', 'net5', 'VSS', 'net42', 'VSS', 'net5', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'S'], ['CO', 'VSS', 'net36', 'net7', 'net5', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS', 'net5', 'VSS', 'S'], ['CO', 'VSS', 'net36', 'net7', 'net5', 'VSS', 'net5', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS', 'S'], ['CO', 'VSS', 'net36', 'net7', 'net5', 'VSS', 'net5', 'VSS', 'net42', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'S'], ['S', 'VSS', 'net5', 'net7', 'net36', 'VSS', 'net5', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'CO'], ['S', 'VSS', 'net5', 'VSS', 'net5', 'net7', 'net36', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'CO'], ['S', 'VSS', 'net42', 'VSS', 'net5', 'VSS', 'net5', 'net7', 'net36', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'CO'], ['S', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS', 'net5', 'VSS', 'net5', 'net7', 'net36', 'VSS', 'CO'], ['CO', 'VSS', 'net36', 'net7', 'net5', 'VSS', 'net5', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'S'], ['S', 'VSS', 'net36', 'net7', 'net5', 'VSS', 'net42', 'VSS', 'net5', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'CO'], ['S', 'VSS', 'net36', 'net7', 'net5', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS', 'net5', 'VSS', 'CO'], ['S', 'VSS', 'net36', 'net7', 'net5', 'VSS', 'net5', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS', 'CO'], ['S', 'VSS', 'net36', 'net7', 'net5', 'VSS', 'net5', 'VSS', 'net42', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'CO'], ['S', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS', 'net5', 'VSS', 'net5', 'net7', 'net36', 'VSS', 'CO'], ['CO', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS', 'net5', 'VSS', 'net5', 'net7', 'net36', 'VSS', 'S'], ['CO', 'VSS', 'net5', 'net7', 'net36', 'VSS', 'net5', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'S'], ['CO', 'VSS', 'net5', 'VSS', 'net5', 'net7', 'net36', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'S'], ['CO', 'VSS', 'net42', 'VSS', 'net5', 'VSS', 'net5', 'net7', 'net36', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'S'], ['S', 'VSS', 'net36', 'net7', 'net5', 'VSS', 'net5', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'CO'], ['CO', 'VSS', 'net36', 'net7', 'net5', 'VSS', 'net42', 'VSS', 'net5', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'S'], ['CO', 'VSS', 'net36', 'net7', 'net5', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS', 'net5', 'VSS', 'S'], ['CO', 'VSS', 'net36', 'net7', 'net5', 'VSS', 'net5', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS', 'S'], ['CO', 'VSS', 'net36', 'net7', 'net5', 'VSS', 'net5', 'VSS', 'net42', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'S'], ['S', 'VSS', 'net5', 'net7', 'net36', 'VSS', 'net5', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'CO'], ['S', 'VSS', 'net5', 'VSS', 'net5', 'net7', 'net36', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'CO'], ['S', 'VSS', 'net42', 'VSS', 'net5', 'VSS', 'net5', 'net7', 'net36', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'CO'], ['CO', 'VSS', 'net36', 'net7', 'net5', 'VSS', 'net5', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'S'], ['S', 'VSS', 'net36', 'net7', 'net5', 'VSS', 'net42', 'VSS', 'net5', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'CO'], ['S', 'VSS', 'net36', 'net7', 'net5', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS', 'net5', 'VSS', 'CO'], ['S', 'VSS', 'net36', 'net7', 'net5', 'VSS', 'net5', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS', 'CO'], ['S', 'VSS', 'net36', 'net7', 'net5', 'VSS', 'net5', 'VSS', 'net42', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'CO']]
Diffusion sharing : [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
P Diffusion weight : [38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38]
N Diffusion weight : [26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26]
Total diffusion weight : [60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60]
END

Cell Name : FA_X1
P Vertex : ['net31', 'VDD', 'net29', 'net9', 'net3', 'S', 'net1', 'net7', 'net19', 'CO']
N Vertex : ['net49', 'VSS', 'net47', 'net9', 'net42', 'S', 'net5', 'net7', 'net36', 'CO']
Edge : ['A', 'B', 'CI', 'net7', 'net9', 'dummy']
Tr_info : [[['net31', 'A', 'VDD'], ['net29', 'B', 'net31'], ['net9', 'CI', 'net29'], ['net3', 'net7', 'net9'], ['VDD', 'A', 'net3'], ['net3', 'B', 'VDD'], ['VDD', 'CI', 'net3'], ['S', 'net9', 'VDD'], ['VDD', 'B', 'net1'], ['net1', 'A', 'VDD'], ['net7', 'CI', 'net1'], ['net19', 'B', 'net7'], ['VDD', 'A', 'net19'], ['CO', 'net7', 'VDD'], ['VDD', 'dummy', 'S']], [['net49', 'A', 'VSS'], ['net47', 'B', 'net49'], ['net9', 'CI', 'net47'], ['net42', 'net7', 'net9'], ['VSS', 'A', 'net42'], ['net42', 'B', 'VSS'], ['VSS', 'CI', 'net42'], ['S', 'net9', 'VSS'], ['VSS', 'B', 'net5'], ['net5', 'A', 'VSS'], ['net7', 'CI', 'net5'], ['net36', 'B', 'net7'], ['VSS', 'A', 'net36'], ['CO', 'net7', 'VSS'], ['S', 'dummy', 'CO']]]
P matrix = [[0, 1, 1, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 3, 2, 2, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0], [0, 3, 0, 1, 0, 0, 0, 0, 0, 0], [0, 2, 0, 0, 0, 0, 0, 0, 0, 0], [0, 2, 0, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0]]
N matrix = [[0, 1, 1, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 3, 1, 2, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0], [0, 3, 0, 1, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 2, 0, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0]]
P odd degree count : 2
N odd degree count : 2
P start point : [6, 9]
N start point : [1, 6]
Is dummy need : False
P dummy count : 1
N dummy count : 1
P euler path candidates : [[9, 1, 8, 7, 6, 1, 5, 1, 4, 1, 4, 3, 2, 0, 1, 6], [6, 7, 8, 1, 6, 1, 5, 1, 4, 1, 4, 3, 2, 0, 1, 9], [9, 1, 6, 7, 8, 1, 5, 1, 4, 1, 4, 3, 2, 0, 1, 6], [9, 1, 5, 1, 6, 7, 8, 1, 4, 1, 4, 3, 2, 0, 1, 6], [9, 1, 4, 1, 5, 1, 6, 7, 8, 1, 4, 3, 2, 0, 1, 6], [9, 1, 0, 2, 3, 4, 1, 4, 1, 5, 1, 6, 7, 8, 1, 6], [9, 1, 8, 7, 6, 1, 4, 1, 5, 1, 4, 3, 2, 0, 1, 6], [9, 1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 1, 6], [9, 1, 8, 7, 6, 1, 5, 1, 0, 2, 3, 4, 1, 4, 1, 6], [9, 1, 8, 7, 6, 1, 5, 1, 4, 1, 0, 2, 3, 4, 1, 6], [9, 1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 1, 6], [6, 1, 8, 7, 6, 1, 5, 1, 4, 1, 4, 3, 2, 0, 1, 9], [6, 7, 8, 1, 5, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 9], [6, 7, 8, 1, 4, 1, 5, 1, 6, 1, 4, 3, 2, 0, 1, 9], [6, 7, 8, 1, 0, 2, 3, 4, 1, 4, 1, 5, 1, 6, 1, 9], [6, 7, 8, 1, 6, 1, 4, 1, 5, 1, 4, 3, 2, 0, 1, 9], [6, 7, 8, 1, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 1, 9], [6, 7, 8, 1, 6, 1, 5, 1, 0, 2, 3, 4, 1, 4, 1, 9], [6, 7, 8, 1, 6, 1, 5, 1, 4, 1, 0, 2, 3, 4, 1, 9], [9, 1, 8, 7, 6, 1, 5, 1, 4, 1, 4, 3, 2, 0, 1, 6], [6, 7, 8, 1, 6, 1, 5, 1, 4, 1, 4, 3, 2, 0, 1, 9], [9, 1, 6, 7, 8, 1, 5, 1, 4, 1, 4, 3, 2, 0, 1, 6], [9, 1, 5, 1, 6, 7, 8, 1, 4, 1, 4, 3, 2, 0, 1, 6], [9, 1, 4, 1, 5, 1, 6, 7, 8, 1, 4, 3, 2, 0, 1, 6], [9, 1, 0, 2, 3, 4, 1, 4, 1, 5, 1, 6, 7, 8, 1, 6], [9, 1, 8, 7, 6, 1, 4, 1, 5, 1, 4, 3, 2, 0, 1, 6], [9, 1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 1, 6], [9, 1, 8, 7, 6, 1, 5, 1, 0, 2, 3, 4, 1, 4, 1, 6], [9, 1, 8, 7, 6, 1, 5, 1, 4, 1, 0, 2, 3, 4, 1, 6], [9, 1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 1, 6], [6, 1, 8, 7, 6, 1, 5, 1, 4, 1, 4, 3, 2, 0, 1, 9], [6, 7, 8, 1, 5, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 9], [6, 7, 8, 1, 4, 1, 5, 1, 6, 1, 4, 3, 2, 0, 1, 9], [6, 7, 8, 1, 0, 2, 3, 4, 1, 4, 1, 5, 1, 6, 1, 9], [6, 7, 8, 1, 6, 1, 4, 1, 5, 1, 4, 3, 2, 0, 1, 9], [6, 7, 8, 1, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 1, 9], [6, 7, 8, 1, 6, 1, 5, 1, 0, 2, 3, 4, 1, 4, 1, 9], [6, 7, 8, 1, 6, 1, 5, 1, 4, 1, 0, 2, 3, 4, 1, 9]]
N euler path candidates : [[6, 7, 8, 1, 6, 1, 9, 5, 1, 4, 1, 4, 3, 2, 0, 1], [1, 8, 7, 6, 1, 9, 5, 1, 4, 1, 4, 3, 2, 0, 1, 6], [6, 1, 8, 7, 6, 1, 9, 5, 1, 4, 1, 4, 3, 2, 0, 1], [6, 7, 8, 1, 5, 9, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1], [6, 7, 8, 1, 4, 1, 5, 9, 1, 6, 1, 4, 3, 2, 0, 1], [6, 7, 8, 1, 0, 2, 3, 4, 1, 4, 1, 5, 9, 1, 6, 1], [6, 7, 8, 1, 6, 1, 5, 9, 1, 4, 1, 4, 3, 2, 0, 1], [6, 7, 8, 1, 6, 1, 4, 1, 5, 9, 1, 4, 3, 2, 0, 1], [6, 7, 8, 1, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 9, 1], [6, 7, 8, 1, 6, 1, 9, 5, 1, 0, 2, 3, 4, 1, 4, 1], [6, 7, 8, 1, 6, 1, 9, 5, 1, 4, 1, 0, 2, 3, 4, 1], [1, 6, 7, 8, 1, 9, 5, 1, 4, 1, 4, 3, 2, 0, 1, 6], [1, 5, 9, 1, 6, 7, 8, 1, 4, 1, 4, 3, 2, 0, 1, 6], [1, 4, 1, 5, 9, 1, 6, 7, 8, 1, 4, 3, 2, 0, 1, 6], [1, 0, 2, 3, 4, 1, 4, 1, 5, 9, 1, 6, 7, 8, 1, 6], [1, 8, 7, 6, 1, 5, 9, 1, 4, 1, 4, 3, 2, 0, 1, 6], [1, 8, 7, 6, 1, 4, 1, 5, 9, 1, 4, 3, 2, 0, 1, 6], [1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 9, 1, 6], [1, 8, 7, 6, 1, 9, 5, 1, 0, 2, 3, 4, 1, 4, 1, 6], [1, 8, 7, 6, 1, 9, 5, 1, 4, 1, 0, 2, 3, 4, 1, 6], [1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 9, 1, 6], [6, 7, 8, 1, 6, 1, 9, 5, 1, 4, 1, 4, 3, 2, 0, 1], [1, 8, 7, 6, 1, 9, 5, 1, 4, 1, 4, 3, 2, 0, 1, 6], [6, 1, 8, 7, 6, 1, 9, 5, 1, 4, 1, 4, 3, 2, 0, 1], [6, 7, 8, 1, 5, 9, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1], [6, 7, 8, 1, 4, 1, 5, 9, 1, 6, 1, 4, 3, 2, 0, 1], [6, 7, 8, 1, 0, 2, 3, 4, 1, 4, 1, 5, 9, 1, 6, 1], [6, 7, 8, 1, 6, 1, 5, 9, 1, 4, 1, 4, 3, 2, 0, 1], [6, 7, 8, 1, 6, 1, 4, 1, 5, 9, 1, 4, 3, 2, 0, 1], [6, 7, 8, 1, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 9, 1], [6, 7, 8, 1, 6, 1, 9, 5, 1, 0, 2, 3, 4, 1, 4, 1], [6, 7, 8, 1, 6, 1, 9, 5, 1, 4, 1, 0, 2, 3, 4, 1], [1, 6, 7, 8, 1, 9, 5, 1, 4, 1, 4, 3, 2, 0, 1, 6], [1, 5, 9, 1, 6, 7, 8, 1, 4, 1, 4, 3, 2, 0, 1, 6], [1, 4, 1, 5, 9, 1, 6, 7, 8, 1, 4, 3, 2, 0, 1, 6], [1, 0, 2, 3, 4, 1, 4, 1, 5, 9, 1, 6, 7, 8, 1, 6], [1, 8, 7, 6, 1, 5, 9, 1, 4, 1, 4, 3, 2, 0, 1, 6], [1, 8, 7, 6, 1, 4, 1, 5, 9, 1, 4, 3, 2, 0, 1, 6], [1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 9, 1, 6], [1, 8, 7, 6, 1, 9, 5, 1, 0, 2, 3, 4, 1, 4, 1, 6], [1, 8, 7, 6, 1, 9, 5, 1, 4, 1, 0, 2, 3, 4, 1, 6], [1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 9, 1, 6]]
P loop is : True
P loop number : [[1, 6, 4], [6, 1, 4]]
P loop count : [[5, 2, 2], [2, 5, 2]]
P loop point : [[[1, 5, 7, 9, 14], [4, 15], [8, 10]], [[0, 4], [3, 5, 7, 9, 14], [8, 10]]]
N loop is : True
N loop number : [[6, 1, 4], [1, 6, 4]]
N loop count : [[2, 5, 2], [5, 2, 2]]
N loop point : [[[0, 4], [3, 5, 8, 10, 15], [9, 11]], [[0, 4, 7, 9, 14], [3, 15], [8, 10]]]
P poly ordering : [['net7', 'A', 'B', 'CI', 'B', 'net9', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['CI', 'B', 'A', 'B', 'A', 'net9', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['net7', 'B', 'CI', 'B', 'A', 'net9', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['net7', 'net9', 'dummy', 'B', 'CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['net7', 'A', 'B', 'net9', 'dummy', 'B', 'CI', 'B', 'A', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['net7', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'B', 'CI', 'B', 'A', 'A'], ['net7', 'A', 'B', 'CI', 'B', 'A', 'B', 'net9', 'dummy', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['net7', 'A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'A'], ['net7', 'A', 'B', 'CI', 'B', 'net9', 'dummy', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'A'], ['net7', 'A', 'B', 'CI', 'B', 'net9', 'dummy', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'A'], ['net7', 'A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'A'], ['B', 'A', 'B', 'CI', 'A', 'net9', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['CI', 'B', 'A', 'net9', 'dummy', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['CI', 'B', 'A', 'A', 'B', 'net9', 'dummy', 'B', 'A', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'B', 'A', 'net7'], ['CI', 'B', 'A', 'B', 'A', 'A', 'B', 'net9', 'dummy', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['CI', 'B', 'A', 'B', 'A', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'net7'], ['CI', 'B', 'A', 'B', 'A', 'net9', 'dummy', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net7'], ['CI', 'B', 'A', 'B', 'A', 'net9', 'dummy', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'net7'], ['net7', 'A', 'B', 'CI', 'A', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['CI', 'B', 'A', 'A', 'B', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['net7', 'A', 'CI', 'B', 'A', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['net7', 'dummy', 'net9', 'A', 'CI', 'B', 'A', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['net7', 'CI', 'B', 'dummy', 'net9', 'A', 'CI', 'B', 'A', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['net7', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'dummy', 'net9', 'A', 'CI', 'B', 'A', 'B'], ['net7', 'A', 'B', 'CI', 'A', 'CI', 'B', 'dummy', 'net9', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['net7', 'A', 'B', 'CI', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'dummy', 'net9', 'B'], ['net7', 'A', 'B', 'CI', 'A', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'B'], ['net7', 'A', 'B', 'CI', 'A', 'dummy', 'net9', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B'], ['net7', 'A', 'B', 'CI', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'dummy', 'net9', 'B'], ['A', 'A', 'B', 'CI', 'B', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['CI', 'B', 'A', 'dummy', 'net9', 'A', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['CI', 'B', 'A', 'CI', 'B', 'dummy', 'net9', 'A', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'dummy', 'net9', 'A', 'B', 'net7'], ['CI', 'B', 'A', 'A', 'B', 'CI', 'B', 'dummy', 'net9', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['CI', 'B', 'A', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'dummy', 'net9', 'net7'], ['CI', 'B', 'A', 'A', 'B', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['CI', 'B', 'A', 'A', 'B', 'dummy', 'net9', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'net7']]
N poly ordering : [['CI', 'B', 'A', 'B', 'A', 'net7', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['A', 'B', 'CI', 'B', 'net7', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['B', 'A', 'B', 'CI', 'A', 'net7', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['CI', 'B', 'A', 'net9', 'dummy', 'net7', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['CI', 'B', 'A', 'A', 'B', 'net9', 'dummy', 'net7', 'B', 'A', 'CI', 'net7', 'CI', 'B', 'A'], ['CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'net7', 'B', 'A'], ['CI', 'B', 'A', 'B', 'A', 'net9', 'dummy', 'net7', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['CI', 'B', 'A', 'B', 'A', 'A', 'B', 'net9', 'dummy', 'net7', 'CI', 'net7', 'CI', 'B', 'A'], ['CI', 'B', 'A', 'B', 'A', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'net7'], ['CI', 'B', 'A', 'B', 'A', 'net7', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI'], ['CI', 'B', 'A', 'B', 'A', 'net7', 'dummy', 'net9', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI'], ['B', 'CI', 'B', 'A', 'net7', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['net9', 'dummy', 'net7', 'B', 'CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['A', 'B', 'net9', 'dummy', 'net7', 'B', 'CI', 'B', 'A', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'net7', 'B', 'CI', 'B', 'A', 'A'], ['A', 'B', 'CI', 'B', 'net9', 'dummy', 'net7', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['A', 'B', 'CI', 'B', 'A', 'B', 'net9', 'dummy', 'net7', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'net7', 'A'], ['A', 'B', 'CI', 'B', 'net7', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'A'], ['A', 'B', 'CI', 'B', 'net7', 'dummy', 'net9', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'A'], ['A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'net7', 'A'], ['CI', 'B', 'A', 'A', 'B', 'net7', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['A', 'B', 'CI', 'A', 'net7', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['A', 'A', 'B', 'CI', 'B', 'net7', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['CI', 'B', 'A', 'net9', 'dummy', 'net7', 'A', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['CI', 'B', 'A', 'CI', 'B', 'net9', 'dummy', 'net7', 'A', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9', 'dummy', 'net7', 'A', 'B'], ['CI', 'B', 'A', 'A', 'B', 'net9', 'dummy', 'net7', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['CI', 'B', 'A', 'A', 'B', 'CI', 'B', 'net9', 'dummy', 'net7', 'A', 'net7', 'CI', 'B', 'A'], ['CI', 'B', 'A', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9', 'dummy', 'net7'], ['CI', 'B', 'A', 'A', 'B', 'net7', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['CI', 'B', 'A', 'A', 'B', 'net7', 'dummy', 'net9', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A'], ['A', 'CI', 'B', 'A', 'net7', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['net9', 'dummy', 'net7', 'A', 'CI', 'B', 'A', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['CI', 'B', 'net9', 'dummy', 'net7', 'A', 'CI', 'B', 'A', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9', 'dummy', 'net7', 'A', 'CI', 'B', 'A', 'B'], ['A', 'B', 'CI', 'A', 'net9', 'dummy', 'net7', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['A', 'B', 'CI', 'A', 'CI', 'B', 'net9', 'dummy', 'net7', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['A', 'B', 'CI', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9', 'dummy', 'net7', 'B'], ['A', 'B', 'CI', 'A', 'net7', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'B'], ['A', 'B', 'CI', 'A', 'net7', 'dummy', 'net9', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B'], ['A', 'B', 'CI', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9', 'dummy', 'net7', 'B']]
Poly ordering : [['CI', 'B', 'A', 'B', 'A', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'net7']]
P diffusion chain : [['net1', 'net7', 'net19', 'VDD', 'net1', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD', 'S', 'VDD', 'CO']]
N diffusion chain : [['net5', 'net7', 'net36', 'VSS', 'net5', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS', 'S', 'CO', 'VSS']]
Diffusion sharing : [3]
P Diffusion weight : [38]
N Diffusion weight : [26]
Total diffusion weight : [61]
END

Cell Name : FA_X1
P Vertex : ['net31', 'VDD', 'net29', 'net9', 'net3', 'S', 'net1', 'net7', 'net19', 'CO']
N Vertex : ['net49', 'VSS', 'net47', 'net9', 'net42', 'S', 'net5', 'net7', 'net36', 'CO']
Edge : ['A', 'B', 'CI', 'net7', 'net9', 'dummy']
Tr_info : [[['net31', 'A', 'VDD'], ['net29', 'B', 'net31'], ['net9', 'CI', 'net29'], ['net3', 'net7', 'net9'], ['VDD', 'A', 'net3'], ['net3', 'B', 'VDD'], ['VDD', 'CI', 'net3'], ['S', 'net9', 'VDD'], ['VDD', 'B', 'net1'], ['net1', 'A', 'VDD'], ['net7', 'CI', 'net1'], ['net19', 'B', 'net7'], ['VDD', 'A', 'net19'], ['CO', 'net7', 'VDD'], ['VDD', 'dummy', 'S']], [['net49', 'A', 'VSS'], ['net47', 'B', 'net49'], ['net9', 'CI', 'net47'], ['net42', 'net7', 'net9'], ['VSS', 'A', 'net42'], ['net42', 'B', 'VSS'], ['VSS', 'CI', 'net42'], ['S', 'net9', 'VSS'], ['VSS', 'B', 'net5'], ['net5', 'A', 'VSS'], ['net7', 'CI', 'net5'], ['net36', 'B', 'net7'], ['VSS', 'A', 'net36'], ['CO', 'net7', 'VSS'], ['S', 'dummy', 'net5']]]
P matrix = [[0, 1, 1, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 3, 2, 2, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0], [0, 3, 0, 1, 0, 0, 0, 0, 0, 0], [0, 2, 0, 0, 0, 0, 0, 0, 0, 0], [0, 2, 0, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0]]
N matrix = [[0, 1, 1, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 3, 1, 2, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0], [0, 3, 0, 1, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0], [0, 2, 0, 0, 0, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0]]
P odd degree count : 2
N odd degree count : 2
P start point : [6, 9]
N start point : [1, 9]
Is dummy need : False
P dummy count : 1
N dummy count : 1
P euler path candidates : [[9, 1, 8, 7, 6, 1, 5, 1, 4, 1, 4, 3, 2, 0, 1, 6], [6, 7, 8, 1, 6, 1, 5, 1, 4, 1, 4, 3, 2, 0, 1, 9], [9, 1, 6, 7, 8, 1, 5, 1, 4, 1, 4, 3, 2, 0, 1, 6], [9, 1, 5, 1, 6, 7, 8, 1, 4, 1, 4, 3, 2, 0, 1, 6], [9, 1, 4, 1, 5, 1, 6, 7, 8, 1, 4, 3, 2, 0, 1, 6], [9, 1, 0, 2, 3, 4, 1, 4, 1, 5, 1, 6, 7, 8, 1, 6], [9, 1, 8, 7, 6, 1, 4, 1, 5, 1, 4, 3, 2, 0, 1, 6], [9, 1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 1, 6], [9, 1, 8, 7, 6, 1, 5, 1, 0, 2, 3, 4, 1, 4, 1, 6], [9, 1, 8, 7, 6, 1, 5, 1, 4, 1, 0, 2, 3, 4, 1, 6], [9, 1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 1, 6], [6, 1, 8, 7, 6, 1, 5, 1, 4, 1, 4, 3, 2, 0, 1, 9], [6, 7, 8, 1, 5, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 9], [6, 7, 8, 1, 4, 1, 5, 1, 6, 1, 4, 3, 2, 0, 1, 9], [6, 7, 8, 1, 0, 2, 3, 4, 1, 4, 1, 5, 1, 6, 1, 9], [6, 7, 8, 1, 6, 1, 4, 1, 5, 1, 4, 3, 2, 0, 1, 9], [6, 7, 8, 1, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 1, 9], [6, 7, 8, 1, 6, 1, 5, 1, 0, 2, 3, 4, 1, 4, 1, 9], [6, 7, 8, 1, 6, 1, 5, 1, 4, 1, 0, 2, 3, 4, 1, 9], [9, 1, 8, 7, 6, 1, 5, 1, 4, 1, 4, 3, 2, 0, 1, 6], [6, 7, 8, 1, 6, 1, 5, 1, 4, 1, 4, 3, 2, 0, 1, 9], [9, 1, 6, 7, 8, 1, 5, 1, 4, 1, 4, 3, 2, 0, 1, 6], [9, 1, 5, 1, 6, 7, 8, 1, 4, 1, 4, 3, 2, 0, 1, 6], [9, 1, 4, 1, 5, 1, 6, 7, 8, 1, 4, 3, 2, 0, 1, 6], [9, 1, 0, 2, 3, 4, 1, 4, 1, 5, 1, 6, 7, 8, 1, 6], [9, 1, 8, 7, 6, 1, 4, 1, 5, 1, 4, 3, 2, 0, 1, 6], [9, 1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 1, 6], [9, 1, 8, 7, 6, 1, 5, 1, 0, 2, 3, 4, 1, 4, 1, 6], [9, 1, 8, 7, 6, 1, 5, 1, 4, 1, 0, 2, 3, 4, 1, 6], [9, 1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 1, 6], [6, 1, 8, 7, 6, 1, 5, 1, 4, 1, 4, 3, 2, 0, 1, 9], [6, 7, 8, 1, 5, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 9], [6, 7, 8, 1, 4, 1, 5, 1, 6, 1, 4, 3, 2, 0, 1, 9], [6, 7, 8, 1, 0, 2, 3, 4, 1, 4, 1, 5, 1, 6, 1, 9], [6, 7, 8, 1, 6, 1, 4, 1, 5, 1, 4, 3, 2, 0, 1, 9], [6, 7, 8, 1, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 1, 9], [6, 7, 8, 1, 6, 1, 5, 1, 0, 2, 3, 4, 1, 4, 1, 9], [6, 7, 8, 1, 6, 1, 5, 1, 4, 1, 0, 2, 3, 4, 1, 9]]
N euler path candidates : [[9, 1, 8, 7, 6, 1, 6, 5, 1, 4, 1, 4, 3, 2, 0, 1], [1, 8, 7, 6, 1, 6, 5, 1, 4, 1, 4, 3, 2, 0, 1, 9], [9, 1, 6, 7, 8, 1, 6, 5, 1, 4, 1, 4, 3, 2, 0, 1], [9, 1, 5, 6, 1, 6, 7, 8, 1, 4, 1, 4, 3, 2, 0, 1], [9, 1, 4, 1, 5, 6, 1, 6, 7, 8, 1, 4, 3, 2, 0, 1], [9, 1, 0, 2, 3, 4, 1, 4, 1, 5, 6, 1, 6, 7, 8, 1], [9, 1, 8, 7, 6, 1, 5, 6, 1, 4, 1, 4, 3, 2, 0, 1], [9, 1, 8, 7, 6, 1, 4, 1, 5, 6, 1, 4, 3, 2, 0, 1], [9, 1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 6, 1], [9, 1, 8, 7, 6, 1, 6, 5, 1, 0, 2, 3, 4, 1, 4, 1], [9, 1, 8, 7, 6, 1, 6, 5, 1, 4, 1, 0, 2, 3, 4, 1], [1, 6, 7, 8, 1, 6, 5, 1, 4, 1, 4, 3, 2, 0, 1, 9], [1, 5, 6, 1, 6, 7, 8, 1, 4, 1, 4, 3, 2, 0, 1, 9], [1, 4, 1, 5, 6, 1, 6, 7, 8, 1, 4, 3, 2, 0, 1, 9], [1, 0, 2, 3, 4, 1, 4, 1, 5, 6, 1, 6, 7, 8, 1, 9], [1, 8, 7, 6, 1, 5, 6, 1, 4, 1, 4, 3, 2, 0, 1, 9], [1, 8, 7, 6, 1, 4, 1, 5, 6, 1, 4, 3, 2, 0, 1, 9], [1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 6, 1, 9], [1, 8, 7, 6, 1, 6, 5, 1, 0, 2, 3, 4, 1, 4, 1, 9], [1, 8, 7, 6, 1, 6, 5, 1, 4, 1, 0, 2, 3, 4, 1, 9], [9, 1, 8, 7, 6, 1, 6, 5, 1, 4, 1, 4, 3, 2, 0, 1], [1, 8, 7, 6, 1, 6, 5, 1, 4, 1, 4, 3, 2, 0, 1, 9], [9, 1, 6, 7, 8, 1, 6, 5, 1, 4, 1, 4, 3, 2, 0, 1], [9, 1, 5, 6, 1, 6, 7, 8, 1, 4, 1, 4, 3, 2, 0, 1], [9, 1, 4, 1, 5, 6, 1, 6, 7, 8, 1, 4, 3, 2, 0, 1], [9, 1, 0, 2, 3, 4, 1, 4, 1, 5, 6, 1, 6, 7, 8, 1], [9, 1, 8, 7, 6, 1, 5, 6, 1, 4, 1, 4, 3, 2, 0, 1], [9, 1, 8, 7, 6, 1, 4, 1, 5, 6, 1, 4, 3, 2, 0, 1], [9, 1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 6, 1], [9, 1, 8, 7, 6, 1, 6, 5, 1, 0, 2, 3, 4, 1, 4, 1], [9, 1, 8, 7, 6, 1, 6, 5, 1, 4, 1, 0, 2, 3, 4, 1], [1, 6, 7, 8, 1, 6, 5, 1, 4, 1, 4, 3, 2, 0, 1, 9], [1, 5, 6, 1, 6, 7, 8, 1, 4, 1, 4, 3, 2, 0, 1, 9], [1, 4, 1, 5, 6, 1, 6, 7, 8, 1, 4, 3, 2, 0, 1, 9], [1, 0, 2, 3, 4, 1, 4, 1, 5, 6, 1, 6, 7, 8, 1, 9], [1, 8, 7, 6, 1, 5, 6, 1, 4, 1, 4, 3, 2, 0, 1, 9], [1, 8, 7, 6, 1, 4, 1, 5, 6, 1, 4, 3, 2, 0, 1, 9], [1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 6, 1, 9], [1, 8, 7, 6, 1, 6, 5, 1, 0, 2, 3, 4, 1, 4, 1, 9], [1, 8, 7, 6, 1, 6, 5, 1, 4, 1, 0, 2, 3, 4, 1, 9]]
P loop is : True
P loop number : [[1, 6, 4], [6, 1, 4]]
P loop count : [[5, 2, 2], [2, 5, 2]]
P loop point : [[[1, 5, 7, 9, 14], [4, 15], [8, 10]], [[0, 4], [3, 5, 7, 9, 14], [8, 10]]]
N loop is : True
N loop number : [[1, 6, 4], [1, 6, 4]]
N loop count : [[5, 2, 2], [5, 2, 2]]
N loop point : [[[1, 5, 8, 10, 15], [4, 6], [9, 11]], [[0, 4, 7, 9, 14], [3, 5], [8, 10]]]
P poly ordering : [['net7', 'A', 'B', 'CI', 'B', 'net9', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['CI', 'B', 'A', 'B', 'A', 'net9', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['net7', 'B', 'CI', 'B', 'A', 'net9', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['net7', 'net9', 'dummy', 'B', 'CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['net7', 'A', 'B', 'net9', 'dummy', 'B', 'CI', 'B', 'A', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['net7', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'B', 'CI', 'B', 'A', 'A'], ['net7', 'A', 'B', 'CI', 'B', 'A', 'B', 'net9', 'dummy', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['net7', 'A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'A'], ['net7', 'A', 'B', 'CI', 'B', 'net9', 'dummy', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'A'], ['net7', 'A', 'B', 'CI', 'B', 'net9', 'dummy', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'A'], ['net7', 'A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'A'], ['B', 'A', 'B', 'CI', 'A', 'net9', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['CI', 'B', 'A', 'net9', 'dummy', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['CI', 'B', 'A', 'A', 'B', 'net9', 'dummy', 'B', 'A', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'B', 'A', 'net7'], ['CI', 'B', 'A', 'B', 'A', 'A', 'B', 'net9', 'dummy', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['CI', 'B', 'A', 'B', 'A', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'net7'], ['CI', 'B', 'A', 'B', 'A', 'net9', 'dummy', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net7'], ['CI', 'B', 'A', 'B', 'A', 'net9', 'dummy', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'net7'], ['net7', 'A', 'B', 'CI', 'A', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['CI', 'B', 'A', 'A', 'B', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['net7', 'A', 'CI', 'B', 'A', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['net7', 'dummy', 'net9', 'A', 'CI', 'B', 'A', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['net7', 'CI', 'B', 'dummy', 'net9', 'A', 'CI', 'B', 'A', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['net7', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'dummy', 'net9', 'A', 'CI', 'B', 'A', 'B'], ['net7', 'A', 'B', 'CI', 'A', 'CI', 'B', 'dummy', 'net9', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['net7', 'A', 'B', 'CI', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'dummy', 'net9', 'B'], ['net7', 'A', 'B', 'CI', 'A', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'B'], ['net7', 'A', 'B', 'CI', 'A', 'dummy', 'net9', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B'], ['net7', 'A', 'B', 'CI', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'dummy', 'net9', 'B'], ['A', 'A', 'B', 'CI', 'B', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['CI', 'B', 'A', 'dummy', 'net9', 'A', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['CI', 'B', 'A', 'CI', 'B', 'dummy', 'net9', 'A', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'dummy', 'net9', 'A', 'B', 'net7'], ['CI', 'B', 'A', 'A', 'B', 'CI', 'B', 'dummy', 'net9', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['CI', 'B', 'A', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'dummy', 'net9', 'net7'], ['CI', 'B', 'A', 'A', 'B', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['CI', 'B', 'A', 'A', 'B', 'dummy', 'net9', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'net7']]
N poly ordering : [['net7', 'A', 'B', 'CI', 'B', 'A', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['A', 'B', 'CI', 'B', 'A', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['net7', 'B', 'CI', 'B', 'A', 'A', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['net7', 'net9', 'dummy', 'B', 'A', 'CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['net7', 'A', 'B', 'net9', 'dummy', 'B', 'A', 'CI', 'B', 'A', 'CI', 'net7', 'CI', 'B', 'A'], ['net7', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'B', 'A', 'CI', 'B', 'A'], ['net7', 'A', 'B', 'CI', 'B', 'net9', 'dummy', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['net7', 'A', 'B', 'CI', 'B', 'A', 'B', 'net9', 'dummy', 'A', 'CI', 'net7', 'CI', 'B', 'A'], ['net7', 'A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'A'], ['net7', 'A', 'B', 'CI', 'B', 'A', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI'], ['net7', 'A', 'B', 'CI', 'B', 'A', 'dummy', 'net9', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI'], ['B', 'CI', 'B', 'A', 'A', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['net9', 'dummy', 'B', 'A', 'CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['A', 'B', 'net9', 'dummy', 'B', 'A', 'CI', 'B', 'A', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'B', 'A', 'CI', 'B', 'A', 'net7'], ['A', 'B', 'CI', 'B', 'net9', 'dummy', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['A', 'B', 'CI', 'B', 'A', 'B', 'net9', 'dummy', 'A', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'A', 'net7'], ['A', 'B', 'CI', 'B', 'A', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net7'], ['A', 'B', 'CI', 'B', 'A', 'dummy', 'net9', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'net7'], ['net7', 'A', 'B', 'CI', 'A', 'B', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['A', 'B', 'CI', 'A', 'B', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['net7', 'A', 'CI', 'B', 'A', 'B', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['net7', 'net9', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['net7', 'CI', 'B', 'net9', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'A', 'net7', 'CI', 'B', 'A'], ['net7', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9', 'dummy', 'A', 'B', 'CI', 'B', 'A'], ['net7', 'A', 'B', 'CI', 'A', 'net9', 'dummy', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['net7', 'A', 'B', 'CI', 'A', 'CI', 'B', 'net9', 'dummy', 'B', 'A', 'net7', 'CI', 'B', 'A'], ['net7', 'A', 'B', 'CI', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9', 'dummy', 'B'], ['net7', 'A', 'B', 'CI', 'A', 'B', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A'], ['net7', 'A', 'B', 'CI', 'A', 'B', 'dummy', 'net9', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A'], ['A', 'CI', 'B', 'A', 'B', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['net9', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['CI', 'B', 'net9', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9', 'dummy', 'A', 'B', 'CI', 'B', 'A', 'net7'], ['A', 'B', 'CI', 'A', 'net9', 'dummy', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['A', 'B', 'CI', 'A', 'CI', 'B', 'net9', 'dummy', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['A', 'B', 'CI', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net9', 'dummy', 'B', 'net7'], ['A', 'B', 'CI', 'A', 'B', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['A', 'B', 'CI', 'A', 'B', 'dummy', 'net9', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'net7']]
Poly ordering : [['net7', 'A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'A']]
P diffusion chain : [['CO', 'VDD', 'net19', 'net7', 'net1', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD', 'S', 'VDD', 'net1']]
N diffusion chain : [['CO', 'VSS', 'net36', 'net7', 'net5', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS', 'S', 'net5', 'VSS']]
Diffusion sharing : [4]
P Diffusion weight : [38]
N Diffusion weight : [26]
Total diffusion weight : [60]
END

Cell Name : FA_X1
P Vertex : ['net31', 'VDD', 'net29', 'net9', 'net3', 'S', 'net1', 'net7', 'net19', 'CO']
N Vertex : ['net49', 'VSS', 'net47', 'net9', 'net42', 'S', 'net5', 'net7', 'net36', 'CO']
Edge : ['A', 'B', 'CI', 'net7', 'net9', 'dummy']
Tr_info : [[['net31', 'A', 'VDD'], ['net29', 'B', 'net31'], ['net9', 'CI', 'net29'], ['net3', 'net7', 'net9'], ['VDD', 'A', 'net3'], ['net3', 'B', 'VDD'], ['VDD', 'CI', 'net3'], ['S', 'net9', 'VDD'], ['VDD', 'B', 'net1'], ['net1', 'A', 'VDD'], ['net7', 'CI', 'net1'], ['net19', 'B', 'net7'], ['VDD', 'A', 'net19'], ['CO', 'net7', 'VDD'], ['VDD', 'dummy', 'S']], [['net49', 'A', 'VSS'], ['net47', 'B', 'net49'], ['net9', 'CI', 'net47'], ['net42', 'net7', 'net9'], ['VSS', 'A', 'net42'], ['net42', 'B', 'VSS'], ['VSS', 'CI', 'net42'], ['S', 'net9', 'VSS'], ['VSS', 'B', 'net5'], ['net5', 'A', 'VSS'], ['net7', 'CI', 'net5'], ['net36', 'B', 'net7'], ['VSS', 'A', 'net36'], ['CO', 'net7', 'VSS'], ['VSS', 'dummy', 'S']]]
P matrix = [[0, 1, 1, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 3, 2, 2, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0], [0, 3, 0, 1, 0, 0, 0, 0, 0, 0], [0, 2, 0, 0, 0, 0, 0, 0, 0, 0], [0, 2, 0, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0]]
N matrix = [[0, 1, 1, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 3, 2, 2, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0], [0, 3, 0, 1, 0, 0, 0, 0, 0, 0], [0, 2, 0, 0, 0, 0, 0, 0, 0, 0], [0, 2, 0, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0]]
P odd degree count : 2
N odd degree count : 2
P start point : [6, 9]
N start point : [6, 9]
Is dummy need : False
P dummy count : 1
N dummy count : 1
P euler path candidates : [[9, 1, 8, 7, 6, 1, 5, 1, 4, 1, 4, 3, 2, 0, 1, 6], [6, 7, 8, 1, 6, 1, 5, 1, 4, 1, 4, 3, 2, 0, 1, 9], [9, 1, 6, 7, 8, 1, 5, 1, 4, 1, 4, 3, 2, 0, 1, 6], [9, 1, 5, 1, 6, 7, 8, 1, 4, 1, 4, 3, 2, 0, 1, 6], [9, 1, 4, 1, 5, 1, 6, 7, 8, 1, 4, 3, 2, 0, 1, 6], [9, 1, 0, 2, 3, 4, 1, 4, 1, 5, 1, 6, 7, 8, 1, 6], [9, 1, 8, 7, 6, 1, 4, 1, 5, 1, 4, 3, 2, 0, 1, 6], [9, 1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 1, 6], [9, 1, 8, 7, 6, 1, 5, 1, 0, 2, 3, 4, 1, 4, 1, 6], [9, 1, 8, 7, 6, 1, 5, 1, 4, 1, 0, 2, 3, 4, 1, 6], [9, 1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 1, 6], [6, 1, 8, 7, 6, 1, 5, 1, 4, 1, 4, 3, 2, 0, 1, 9], [6, 7, 8, 1, 5, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 9], [6, 7, 8, 1, 4, 1, 5, 1, 6, 1, 4, 3, 2, 0, 1, 9], [6, 7, 8, 1, 0, 2, 3, 4, 1, 4, 1, 5, 1, 6, 1, 9], [6, 7, 8, 1, 6, 1, 4, 1, 5, 1, 4, 3, 2, 0, 1, 9], [6, 7, 8, 1, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 1, 9], [6, 7, 8, 1, 6, 1, 5, 1, 0, 2, 3, 4, 1, 4, 1, 9], [6, 7, 8, 1, 6, 1, 5, 1, 4, 1, 0, 2, 3, 4, 1, 9], [9, 1, 8, 7, 6, 1, 5, 1, 4, 1, 4, 3, 2, 0, 1, 6], [6, 7, 8, 1, 6, 1, 5, 1, 4, 1, 4, 3, 2, 0, 1, 9], [9, 1, 6, 7, 8, 1, 5, 1, 4, 1, 4, 3, 2, 0, 1, 6], [9, 1, 5, 1, 6, 7, 8, 1, 4, 1, 4, 3, 2, 0, 1, 6], [9, 1, 4, 1, 5, 1, 6, 7, 8, 1, 4, 3, 2, 0, 1, 6], [9, 1, 0, 2, 3, 4, 1, 4, 1, 5, 1, 6, 7, 8, 1, 6], [9, 1, 8, 7, 6, 1, 4, 1, 5, 1, 4, 3, 2, 0, 1, 6], [9, 1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 1, 6], [9, 1, 8, 7, 6, 1, 5, 1, 0, 2, 3, 4, 1, 4, 1, 6], [9, 1, 8, 7, 6, 1, 5, 1, 4, 1, 0, 2, 3, 4, 1, 6], [9, 1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 1, 6], [6, 1, 8, 7, 6, 1, 5, 1, 4, 1, 4, 3, 2, 0, 1, 9], [6, 7, 8, 1, 5, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 9], [6, 7, 8, 1, 4, 1, 5, 1, 6, 1, 4, 3, 2, 0, 1, 9], [6, 7, 8, 1, 0, 2, 3, 4, 1, 4, 1, 5, 1, 6, 1, 9], [6, 7, 8, 1, 6, 1, 4, 1, 5, 1, 4, 3, 2, 0, 1, 9], [6, 7, 8, 1, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 1, 9], [6, 7, 8, 1, 6, 1, 5, 1, 0, 2, 3, 4, 1, 4, 1, 9], [6, 7, 8, 1, 6, 1, 5, 1, 4, 1, 0, 2, 3, 4, 1, 9]]
N euler path candidates : [[9, 1, 8, 7, 6, 1, 5, 1, 4, 1, 4, 3, 2, 0, 1, 6], [6, 7, 8, 1, 6, 1, 5, 1, 4, 1, 4, 3, 2, 0, 1, 9], [9, 1, 6, 7, 8, 1, 5, 1, 4, 1, 4, 3, 2, 0, 1, 6], [9, 1, 5, 1, 6, 7, 8, 1, 4, 1, 4, 3, 2, 0, 1, 6], [9, 1, 4, 1, 5, 1, 6, 7, 8, 1, 4, 3, 2, 0, 1, 6], [9, 1, 0, 2, 3, 4, 1, 4, 1, 5, 1, 6, 7, 8, 1, 6], [9, 1, 8, 7, 6, 1, 4, 1, 5, 1, 4, 3, 2, 0, 1, 6], [9, 1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 1, 6], [9, 1, 8, 7, 6, 1, 5, 1, 0, 2, 3, 4, 1, 4, 1, 6], [9, 1, 8, 7, 6, 1, 5, 1, 4, 1, 0, 2, 3, 4, 1, 6], [9, 1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 1, 6], [6, 1, 8, 7, 6, 1, 5, 1, 4, 1, 4, 3, 2, 0, 1, 9], [6, 7, 8, 1, 5, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 9], [6, 7, 8, 1, 4, 1, 5, 1, 6, 1, 4, 3, 2, 0, 1, 9], [6, 7, 8, 1, 0, 2, 3, 4, 1, 4, 1, 5, 1, 6, 1, 9], [6, 7, 8, 1, 6, 1, 4, 1, 5, 1, 4, 3, 2, 0, 1, 9], [6, 7, 8, 1, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 1, 9], [6, 7, 8, 1, 6, 1, 5, 1, 0, 2, 3, 4, 1, 4, 1, 9], [6, 7, 8, 1, 6, 1, 5, 1, 4, 1, 0, 2, 3, 4, 1, 9], [9, 1, 8, 7, 6, 1, 5, 1, 4, 1, 4, 3, 2, 0, 1, 6], [6, 7, 8, 1, 6, 1, 5, 1, 4, 1, 4, 3, 2, 0, 1, 9], [9, 1, 6, 7, 8, 1, 5, 1, 4, 1, 4, 3, 2, 0, 1, 6], [9, 1, 5, 1, 6, 7, 8, 1, 4, 1, 4, 3, 2, 0, 1, 6], [9, 1, 4, 1, 5, 1, 6, 7, 8, 1, 4, 3, 2, 0, 1, 6], [9, 1, 0, 2, 3, 4, 1, 4, 1, 5, 1, 6, 7, 8, 1, 6], [9, 1, 8, 7, 6, 1, 4, 1, 5, 1, 4, 3, 2, 0, 1, 6], [9, 1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 1, 6], [9, 1, 8, 7, 6, 1, 5, 1, 0, 2, 3, 4, 1, 4, 1, 6], [9, 1, 8, 7, 6, 1, 5, 1, 4, 1, 0, 2, 3, 4, 1, 6], [9, 1, 8, 7, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 1, 6], [6, 1, 8, 7, 6, 1, 5, 1, 4, 1, 4, 3, 2, 0, 1, 9], [6, 7, 8, 1, 5, 1, 6, 1, 4, 1, 4, 3, 2, 0, 1, 9], [6, 7, 8, 1, 4, 1, 5, 1, 6, 1, 4, 3, 2, 0, 1, 9], [6, 7, 8, 1, 0, 2, 3, 4, 1, 4, 1, 5, 1, 6, 1, 9], [6, 7, 8, 1, 6, 1, 4, 1, 5, 1, 4, 3, 2, 0, 1, 9], [6, 7, 8, 1, 6, 1, 0, 2, 3, 4, 1, 4, 1, 5, 1, 9], [6, 7, 8, 1, 6, 1, 5, 1, 0, 2, 3, 4, 1, 4, 1, 9], [6, 7, 8, 1, 6, 1, 5, 1, 4, 1, 0, 2, 3, 4, 1, 9]]
P loop is : True
P loop number : [[1, 6, 4], [6, 1, 4]]
P loop count : [[5, 2, 2], [2, 5, 2]]
P loop point : [[[1, 5, 7, 9, 14], [4, 15], [8, 10]], [[0, 4], [3, 5, 7, 9, 14], [8, 10]]]
N loop is : True
N loop number : [[1, 6, 4], [6, 1, 4]]
N loop count : [[5, 2, 2], [2, 5, 2]]
N loop point : [[[1, 5, 7, 9, 14], [4, 15], [8, 10]], [[0, 4], [3, 5, 7, 9, 14], [8, 10]]]
P poly ordering : [['net7', 'A', 'B', 'CI', 'B', 'net9', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['CI', 'B', 'A', 'B', 'A', 'net9', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['net7', 'B', 'CI', 'B', 'A', 'net9', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['net7', 'net9', 'dummy', 'B', 'CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['net7', 'A', 'B', 'net9', 'dummy', 'B', 'CI', 'B', 'A', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['net7', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'B', 'CI', 'B', 'A', 'A'], ['net7', 'A', 'B', 'CI', 'B', 'A', 'B', 'net9', 'dummy', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['net7', 'A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'A'], ['net7', 'A', 'B', 'CI', 'B', 'net9', 'dummy', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'A'], ['net7', 'A', 'B', 'CI', 'B', 'net9', 'dummy', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'A'], ['net7', 'A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'A'], ['B', 'A', 'B', 'CI', 'A', 'net9', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['CI', 'B', 'A', 'net9', 'dummy', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['CI', 'B', 'A', 'A', 'B', 'net9', 'dummy', 'B', 'A', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'B', 'A', 'net7'], ['CI', 'B', 'A', 'B', 'A', 'A', 'B', 'net9', 'dummy', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['CI', 'B', 'A', 'B', 'A', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'net7'], ['CI', 'B', 'A', 'B', 'A', 'net9', 'dummy', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net7'], ['CI', 'B', 'A', 'B', 'A', 'net9', 'dummy', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'net7'], ['net7', 'A', 'B', 'CI', 'A', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['CI', 'B', 'A', 'A', 'B', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['net7', 'A', 'CI', 'B', 'A', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['net7', 'dummy', 'net9', 'A', 'CI', 'B', 'A', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['net7', 'CI', 'B', 'dummy', 'net9', 'A', 'CI', 'B', 'A', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['net7', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'dummy', 'net9', 'A', 'CI', 'B', 'A', 'B'], ['net7', 'A', 'B', 'CI', 'A', 'CI', 'B', 'dummy', 'net9', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['net7', 'A', 'B', 'CI', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'dummy', 'net9', 'B'], ['net7', 'A', 'B', 'CI', 'A', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'B'], ['net7', 'A', 'B', 'CI', 'A', 'dummy', 'net9', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B'], ['net7', 'A', 'B', 'CI', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'dummy', 'net9', 'B'], ['A', 'A', 'B', 'CI', 'B', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['CI', 'B', 'A', 'dummy', 'net9', 'A', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['CI', 'B', 'A', 'CI', 'B', 'dummy', 'net9', 'A', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'dummy', 'net9', 'A', 'B', 'net7'], ['CI', 'B', 'A', 'A', 'B', 'CI', 'B', 'dummy', 'net9', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['CI', 'B', 'A', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'dummy', 'net9', 'net7'], ['CI', 'B', 'A', 'A', 'B', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['CI', 'B', 'A', 'A', 'B', 'dummy', 'net9', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'net7']]
N poly ordering : [['net7', 'A', 'B', 'CI', 'B', 'net9', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['CI', 'B', 'A', 'B', 'A', 'net9', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['net7', 'B', 'CI', 'B', 'A', 'net9', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['net7', 'net9', 'dummy', 'B', 'CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['net7', 'A', 'B', 'net9', 'dummy', 'B', 'CI', 'B', 'A', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['net7', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'B', 'CI', 'B', 'A', 'A'], ['net7', 'A', 'B', 'CI', 'B', 'A', 'B', 'net9', 'dummy', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['net7', 'A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'A'], ['net7', 'A', 'B', 'CI', 'B', 'net9', 'dummy', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'A'], ['net7', 'A', 'B', 'CI', 'B', 'net9', 'dummy', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'A'], ['net7', 'A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'A'], ['B', 'A', 'B', 'CI', 'A', 'net9', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['CI', 'B', 'A', 'net9', 'dummy', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['CI', 'B', 'A', 'A', 'B', 'net9', 'dummy', 'B', 'A', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'B', 'A', 'net7'], ['CI', 'B', 'A', 'B', 'A', 'A', 'B', 'net9', 'dummy', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['CI', 'B', 'A', 'B', 'A', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'net7'], ['CI', 'B', 'A', 'B', 'A', 'net9', 'dummy', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net7'], ['CI', 'B', 'A', 'B', 'A', 'net9', 'dummy', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'net7'], ['net7', 'A', 'B', 'CI', 'A', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['CI', 'B', 'A', 'A', 'B', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['net7', 'A', 'CI', 'B', 'A', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['net7', 'dummy', 'net9', 'A', 'CI', 'B', 'A', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['net7', 'CI', 'B', 'dummy', 'net9', 'A', 'CI', 'B', 'A', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['net7', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'dummy', 'net9', 'A', 'CI', 'B', 'A', 'B'], ['net7', 'A', 'B', 'CI', 'A', 'CI', 'B', 'dummy', 'net9', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['net7', 'A', 'B', 'CI', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'dummy', 'net9', 'B'], ['net7', 'A', 'B', 'CI', 'A', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'B'], ['net7', 'A', 'B', 'CI', 'A', 'dummy', 'net9', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B'], ['net7', 'A', 'B', 'CI', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'dummy', 'net9', 'B'], ['A', 'A', 'B', 'CI', 'B', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['CI', 'B', 'A', 'dummy', 'net9', 'A', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['CI', 'B', 'A', 'CI', 'B', 'dummy', 'net9', 'A', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'dummy', 'net9', 'A', 'B', 'net7'], ['CI', 'B', 'A', 'A', 'B', 'CI', 'B', 'dummy', 'net9', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['CI', 'B', 'A', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'dummy', 'net9', 'net7'], ['CI', 'B', 'A', 'A', 'B', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['CI', 'B', 'A', 'A', 'B', 'dummy', 'net9', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'net7']]
Poly ordering : [['net7', 'A', 'B', 'CI', 'B', 'net9', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['CI', 'B', 'A', 'B', 'A', 'net9', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['net7', 'B', 'CI', 'B', 'A', 'net9', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['net7', 'net9', 'dummy', 'B', 'CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['net7', 'A', 'B', 'net9', 'dummy', 'B', 'CI', 'B', 'A', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['net7', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'B', 'CI', 'B', 'A', 'A'], ['A', 'A', 'B', 'CI', 'B', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['net7', 'A', 'B', 'CI', 'B', 'A', 'B', 'net9', 'dummy', 'CI', 'net7', 'CI', 'B', 'A', 'A'], ['net7', 'A', 'B', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'A'], ['net7', 'A', 'B', 'CI', 'B', 'net9', 'dummy', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'A'], ['net7', 'A', 'B', 'CI', 'B', 'net9', 'dummy', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'A'], ['B', 'A', 'B', 'CI', 'A', 'net9', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['net7', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'dummy', 'net9', 'A', 'CI', 'B', 'A', 'B'], ['CI', 'B', 'A', 'net9', 'dummy', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['CI', 'B', 'A', 'A', 'B', 'net9', 'dummy', 'B', 'A', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'B', 'A', 'net7'], ['CI', 'B', 'A', 'B', 'A', 'A', 'B', 'net9', 'dummy', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['CI', 'B', 'A', 'B', 'A', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'net7'], ['CI', 'B', 'A', 'B', 'A', 'net9', 'dummy', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net7'], ['CI', 'B', 'A', 'B', 'A', 'net9', 'dummy', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'net7'], ['net7', 'A', 'B', 'CI', 'A', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['CI', 'B', 'A', 'A', 'B', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['net7', 'A', 'CI', 'B', 'A', 'dummy', 'net9', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['net7', 'dummy', 'net9', 'A', 'CI', 'B', 'A', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['net7', 'CI', 'B', 'dummy', 'net9', 'A', 'CI', 'B', 'A', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['B', 'A', 'B', 'CI', 'A', 'net9', 'dummy', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['net7', 'A', 'B', 'CI', 'A', 'CI', 'B', 'dummy', 'net9', 'A', 'net7', 'CI', 'B', 'A', 'B'], ['net7', 'A', 'B', 'CI', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'dummy', 'net9', 'B'], ['net7', 'A', 'B', 'CI', 'A', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'B'], ['net7', 'A', 'B', 'CI', 'A', 'dummy', 'net9', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'B'], ['net7', 'A', 'B', 'CI', 'net7', 'A', 'B', 'CI', 'net9', 'dummy', 'B', 'CI', 'B', 'A', 'A'], ['CI', 'B', 'A', 'dummy', 'net9', 'A', 'B', 'CI', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['CI', 'B', 'A', 'CI', 'B', 'dummy', 'net9', 'A', 'B', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['CI', 'B', 'A', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'dummy', 'net9', 'A', 'B', 'net7'], ['CI', 'B', 'A', 'A', 'B', 'CI', 'B', 'dummy', 'net9', 'A', 'net7', 'CI', 'B', 'A', 'net7'], ['CI', 'B', 'A', 'A', 'B', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'dummy', 'net9', 'net7'], ['CI', 'B', 'A', 'A', 'B', 'dummy', 'net9', 'A', 'B', 'CI', 'net7', 'CI', 'B', 'A', 'net7'], ['CI', 'B', 'A', 'A', 'B', 'dummy', 'net9', 'CI', 'B', 'A', 'B', 'CI', 'net7', 'A', 'net7']]
P diffusion chain : [['CO', 'VDD', 'net19', 'net7', 'net1', 'VDD', 'S', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'net1'], ['net1', 'net7', 'net19', 'VDD', 'net1', 'VDD', 'S', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'CO'], ['CO', 'VDD', 'net1', 'net7', 'net19', 'VDD', 'S', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'net1'], ['CO', 'VDD', 'S', 'VDD', 'net1', 'net7', 'net19', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'net1'], ['CO', 'VDD', 'net3', 'VDD', 'S', 'VDD', 'net1', 'net7', 'net19', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'net1'], ['CO', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD', 'S', 'VDD', 'net1', 'net7', 'net19', 'VDD', 'net1'], ['net1', 'VDD', 'net19', 'net7', 'net1', 'VDD', 'S', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'CO'], ['CO', 'VDD', 'net19', 'net7', 'net1', 'VDD', 'net3', 'VDD', 'S', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'net1'], ['CO', 'VDD', 'net19', 'net7', 'net1', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD', 'S', 'VDD', 'net1'], ['CO', 'VDD', 'net19', 'net7', 'net1', 'VDD', 'S', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD', 'net1'], ['CO', 'VDD', 'net19', 'net7', 'net1', 'VDD', 'S', 'VDD', 'net3', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net1'], ['net1', 'VDD', 'net19', 'net7', 'net1', 'VDD', 'S', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'CO'], ['CO', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD', 'S', 'VDD', 'net1', 'net7', 'net19', 'VDD', 'net1'], ['net1', 'net7', 'net19', 'VDD', 'S', 'VDD', 'net1', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'CO'], ['net1', 'net7', 'net19', 'VDD', 'net3', 'VDD', 'S', 'VDD', 'net1', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'CO'], ['net1', 'net7', 'net19', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD', 'S', 'VDD', 'net1', 'VDD', 'CO'], ['net1', 'net7', 'net19', 'VDD', 'net1', 'VDD', 'net3', 'VDD', 'S', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'CO'], ['net1', 'net7', 'net19', 'VDD', 'net1', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD', 'S', 'VDD', 'CO'], ['net1', 'net7', 'net19', 'VDD', 'net1', 'VDD', 'S', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD', 'CO'], ['net1', 'net7', 'net19', 'VDD', 'net1', 'VDD', 'S', 'VDD', 'net3', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'CO'], ['CO', 'VDD', 'net19', 'net7', 'net1', 'VDD', 'S', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'net1'], ['net1', 'net7', 'net19', 'VDD', 'net1', 'VDD', 'S', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'CO'], ['CO', 'VDD', 'net1', 'net7', 'net19', 'VDD', 'S', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'net1'], ['CO', 'VDD', 'S', 'VDD', 'net1', 'net7', 'net19', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'net1'], ['CO', 'VDD', 'net3', 'VDD', 'S', 'VDD', 'net1', 'net7', 'net19', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'net1'], ['net1', 'VDD', 'net19', 'net7', 'net1', 'VDD', 'S', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'CO'], ['CO', 'VDD', 'net19', 'net7', 'net1', 'VDD', 'net3', 'VDD', 'S', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'net1'], ['CO', 'VDD', 'net19', 'net7', 'net1', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD', 'S', 'VDD', 'net1'], ['CO', 'VDD', 'net19', 'net7', 'net1', 'VDD', 'S', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD', 'net1'], ['CO', 'VDD', 'net19', 'net7', 'net1', 'VDD', 'S', 'VDD', 'net3', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net1'], ['CO', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD', 'S', 'VDD', 'net1', 'net7', 'net19', 'VDD', 'net1'], ['net1', 'net7', 'net19', 'VDD', 'S', 'VDD', 'net1', 'VDD', 'net3', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'CO'], ['net1', 'net7', 'net19', 'VDD', 'net3', 'VDD', 'S', 'VDD', 'net1', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'CO'], ['net1', 'net7', 'net19', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD', 'S', 'VDD', 'net1', 'VDD', 'CO'], ['net1', 'net7', 'net19', 'VDD', 'net1', 'VDD', 'net3', 'VDD', 'S', 'VDD', 'net3', 'net9', 'net29', 'net31', 'VDD', 'CO'], ['net1', 'net7', 'net19', 'VDD', 'net1', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD', 'S', 'VDD', 'CO'], ['net1', 'net7', 'net19', 'VDD', 'net1', 'VDD', 'S', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'net3', 'VDD', 'CO'], ['net1', 'net7', 'net19', 'VDD', 'net1', 'VDD', 'S', 'VDD', 'net3', 'VDD', 'net31', 'net29', 'net9', 'net3', 'VDD', 'CO']]
N diffusion chain : [['CO', 'VSS', 'net36', 'net7', 'net5', 'VSS', 'S', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'net5'], ['net5', 'net7', 'net36', 'VSS', 'net5', 'VSS', 'S', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'CO'], ['CO', 'VSS', 'net5', 'net7', 'net36', 'VSS', 'S', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'net5'], ['CO', 'VSS', 'S', 'VSS', 'net5', 'net7', 'net36', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'net5'], ['CO', 'VSS', 'net42', 'VSS', 'S', 'VSS', 'net5', 'net7', 'net36', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'net5'], ['CO', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS', 'S', 'VSS', 'net5', 'net7', 'net36', 'VSS', 'net5'], ['net5', 'VSS', 'net36', 'net7', 'net5', 'VSS', 'S', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'CO'], ['CO', 'VSS', 'net36', 'net7', 'net5', 'VSS', 'net42', 'VSS', 'S', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'net5'], ['CO', 'VSS', 'net36', 'net7', 'net5', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS', 'S', 'VSS', 'net5'], ['CO', 'VSS', 'net36', 'net7', 'net5', 'VSS', 'S', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS', 'net5'], ['CO', 'VSS', 'net36', 'net7', 'net5', 'VSS', 'S', 'VSS', 'net42', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net5'], ['net5', 'VSS', 'net36', 'net7', 'net5', 'VSS', 'S', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'CO'], ['CO', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS', 'S', 'VSS', 'net5', 'net7', 'net36', 'VSS', 'net5'], ['net5', 'net7', 'net36', 'VSS', 'S', 'VSS', 'net5', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'CO'], ['net5', 'net7', 'net36', 'VSS', 'net42', 'VSS', 'S', 'VSS', 'net5', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'CO'], ['net5', 'net7', 'net36', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS', 'S', 'VSS', 'net5', 'VSS', 'CO'], ['net5', 'net7', 'net36', 'VSS', 'net5', 'VSS', 'net42', 'VSS', 'S', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'CO'], ['net5', 'net7', 'net36', 'VSS', 'net5', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS', 'S', 'VSS', 'CO'], ['net5', 'net7', 'net36', 'VSS', 'net5', 'VSS', 'S', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS', 'CO'], ['net5', 'net7', 'net36', 'VSS', 'net5', 'VSS', 'S', 'VSS', 'net42', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'CO'], ['CO', 'VSS', 'net36', 'net7', 'net5', 'VSS', 'S', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'net5'], ['net5', 'net7', 'net36', 'VSS', 'net5', 'VSS', 'S', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'CO'], ['CO', 'VSS', 'net5', 'net7', 'net36', 'VSS', 'S', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'net5'], ['CO', 'VSS', 'S', 'VSS', 'net5', 'net7', 'net36', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'net5'], ['CO', 'VSS', 'net42', 'VSS', 'S', 'VSS', 'net5', 'net7', 'net36', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'net5'], ['net5', 'VSS', 'net36', 'net7', 'net5', 'VSS', 'S', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'CO'], ['CO', 'VSS', 'net36', 'net7', 'net5', 'VSS', 'net42', 'VSS', 'S', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'net5'], ['CO', 'VSS', 'net36', 'net7', 'net5', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS', 'S', 'VSS', 'net5'], ['CO', 'VSS', 'net36', 'net7', 'net5', 'VSS', 'S', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS', 'net5'], ['CO', 'VSS', 'net36', 'net7', 'net5', 'VSS', 'S', 'VSS', 'net42', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net5'], ['CO', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS', 'S', 'VSS', 'net5', 'net7', 'net36', 'VSS', 'net5'], ['net5', 'net7', 'net36', 'VSS', 'S', 'VSS', 'net5', 'VSS', 'net42', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'CO'], ['net5', 'net7', 'net36', 'VSS', 'net42', 'VSS', 'S', 'VSS', 'net5', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'CO'], ['net5', 'net7', 'net36', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS', 'S', 'VSS', 'net5', 'VSS', 'CO'], ['net5', 'net7', 'net36', 'VSS', 'net5', 'VSS', 'net42', 'VSS', 'S', 'VSS', 'net42', 'net9', 'net47', 'net49', 'VSS', 'CO'], ['net5', 'net7', 'net36', 'VSS', 'net5', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS', 'S', 'VSS', 'CO'], ['net5', 'net7', 'net36', 'VSS', 'net5', 'VSS', 'S', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'net42', 'VSS', 'CO'], ['net5', 'net7', 'net36', 'VSS', 'net5', 'VSS', 'S', 'VSS', 'net42', 'VSS', 'net49', 'net47', 'net9', 'net42', 'VSS', 'CO']]
Diffusion sharing : [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
P Diffusion weight : [38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38]
N Diffusion weight : [26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26]
Total diffusion weight : [60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60]
END

Cell Name : HA_X1
P Vertex : ['CO', 'VDD', 'NCO', 'net_2', 'NS', 'S']
N Vertex : ['CO', 'VSS', 'net_0', 'NCO', 'NS', 'net_1', 'S']
Edge : ['NCO', 'A', 'B', 'NS', 'dummy']
Tr_info : [[['CO', 'NCO', 'VDD'], ['NCO', 'A', 'VDD'], ['VDD', 'B', 'NCO'], ['net_2', 'B', 'VDD'], ['NS', 'A', 'net_2'], ['VDD', 'NCO', 'NS'], ['VDD', 'NS', 'S']], [['CO', 'NCO', 'VSS'], ['net_0', 'A', 'VSS'], ['NCO', 'B', 'net_0'], ['NS', 'B', 'net_1'], ['net_1', 'A', 'NS'], ['VSS', 'NCO', 'net_1'], ['VSS', 'NS', 'S'], ['NCO', 'dummy', 'net_1']]]
P matrix = [[0, 1, 0, 0, 0, 0], [1, 0, 2, 1, 1, 1], [0, 2, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0], [0, 1, 0, 1, 0, 0], [0, 1, 0, 0, 0, 0]]
N matrix = [[0, 1, 0, 0, 0, 0, 0], [1, 0, 1, 0, 0, 1, 1], [0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 0, 0, 1, 0], [0, 0, 0, 0, 0, 2, 0], [0, 1, 0, 1, 2, 0, 0], [0, 1, 0, 0, 0, 0, 0]]
P odd degree count : 2
N odd degree count : 2
P start point : [0, 5]
N start point : [0, 6]
Is dummy need : False
P dummy count : 0
N dummy count : 1
P euler path candidates : [[5, 1, 4, 3, 1, 2, 1, 0], [0, 1, 4, 3, 1, 2, 1, 5], [5, 1, 3, 4, 1, 2, 1, 0], [5, 1, 2, 1, 3, 4, 1, 0], [0, 1, 3, 4, 1, 2, 1, 5], [0, 1, 2, 1, 3, 4, 1, 5], [5, 1, 4, 3, 1, 2, 1, 0], [0, 1, 4, 3, 1, 2, 1, 5], [5, 1, 3, 4, 1, 2, 1, 0], [5, 1, 2, 1, 3, 4, 1, 0], [0, 1, 3, 4, 1, 2, 1, 5], [0, 1, 2, 1, 3, 4, 1, 5]]
N euler path candidates : [[6, 1, 5, 4, 5, 3, 2, 1, 0], [0, 1, 5, 4, 5, 3, 2, 1, 6], [6, 1, 2, 3, 5, 4, 5, 1, 0], [0, 1, 2, 3, 5, 4, 5, 1, 6], [6, 1, 5, 4, 5, 3, 2, 1, 0], [0, 1, 5, 4, 5, 3, 2, 1, 6], [6, 1, 2, 3, 5, 4, 5, 1, 0], [0, 1, 2, 3, 5, 4, 5, 1, 6]]
P loop is : True
P loop number : [[1], [1]]
P loop count : [[3], [3]]
P loop point : [[[1, 4, 6]], [[1, 4, 6]]]
N loop is : True
N loop number : [[1, 5], [1, 5]]
N loop count : [[2, 2], [2, 2]]
N loop point : [[[1, 7], [2, 4]], [[1, 7], [2, 4]]]
P poly ordering : [['NS', 'NCO', 'A', 'B', 'A', 'B', 'NCO'], ['NCO', 'NCO', 'A', 'B', 'A', 'B', 'NS'], ['NS', 'B', 'A', 'NCO', 'A', 'B', 'NCO'], ['NS', 'A', 'B', 'B', 'A', 'NCO', 'NCO'], ['NCO', 'B', 'A', 'NCO', 'A', 'B', 'NS'], ['NCO', 'A', 'B', 'B', 'A', 'NCO', 'NS'], ['NS', 'NCO', 'A', 'B', 'B', 'A', 'NCO'], ['NCO', 'NCO', 'A', 'B', 'B', 'A', 'NS'], ['NS', 'B', 'A', 'NCO', 'B', 'A', 'NCO'], ['NS', 'B', 'A', 'B', 'A', 'NCO', 'NCO'], ['NCO', 'B', 'A', 'NCO', 'B', 'A', 'NS'], ['NCO', 'B', 'A', 'B', 'A', 'NCO', 'NS']]
N poly ordering : [['NS', 'NCO', 'B', 'A', 'dummy', 'B', 'A', 'NCO'], ['NCO', 'NCO', 'B', 'A', 'dummy', 'B', 'A', 'NS'], ['NS', 'A', 'B', 'dummy', 'B', 'A', 'NCO', 'NCO'], ['NCO', 'A', 'B', 'dummy', 'B', 'A', 'NCO', 'NS'], ['NS', 'NCO', 'A', 'B', 'dummy', 'B', 'A', 'NCO'], ['NCO', 'NCO', 'A', 'B', 'dummy', 'B', 'A', 'NS'], ['NS', 'A', 'B', 'dummy', 'A', 'B', 'NCO', 'NCO'], ['NCO', 'A', 'B', 'dummy', 'A', 'B', 'NCO', 'NS']]
Poly ordering : [['NS', 'A', 'B', 'dummy', 'B', 'A', 'NCO', 'NCO'], ['NCO', 'NCO', 'A', 'B', 'dummy', 'B', 'A', 'NS'], ['NCO', 'A', 'B', 'dummy', 'B', 'A', 'NCO', 'NS'], ['NS', 'NCO', 'A', 'B', 'dummy', 'B', 'A', 'NCO']]
P diffusion chain : [['S', 'VDD', 'NCO', 'VDD', 'VDD', 'net_2', 'NS', 'VDD', 'CO'], ['CO', 'VDD', 'NS', 'net_2', 'VDD', 'VDD', 'NCO', 'VDD', 'S'], ['CO', 'VDD', 'NCO', 'VDD', 'VDD', 'net_2', 'NS', 'VDD', 'S'], ['S', 'VDD', 'NS', 'net_2', 'VDD', 'VDD', 'NCO', 'VDD', 'CO']]
N diffusion chain : [['S', 'VSS', 'net_0', 'NCO', 'net_1', 'NS', 'net_1', 'VSS', 'CO'], ['CO', 'VSS', 'net_1', 'NS', 'net_1', 'NCO', 'net_0', 'VSS', 'S'], ['CO', 'VSS', 'net_0', 'NCO', 'net_1', 'NS', 'net_1', 'VSS', 'S'], ['S', 'VSS', 'net_1', 'NS', 'net_1', 'NCO', 'net_0', 'VSS', 'CO']]
Diffusion sharing : [2, 2, 2, 2]
P Diffusion weight : [19, 19, 19, 19]
N Diffusion weight : [13, 13, 13, 13]
Total diffusion weight : [30, 30, 30, 30]
END

Cell Name : XNOR2_X1
P Vertex : ['ZN', 'VDD', 'net_0', 'x2', 'net_2', 'x1']
N Vertex : ['ZN', 'VSS', 'x2', 'net_1', 'x1']
Edge : ['x1', 'A1', 'A2', 'x2', 'dummy']
Tr_info : [[['ZN', 'x1', 'VDD'], ['net_0', 'A1', 'x2'], ['VDD', 'A2', 'net_0'], ['net_2', 'A1', 'x1'], ['net_2', 'A2', 'x1'], ['VDD', 'x2', 'net_2'], ['x2', 'dummy', 'net_2']], [['ZN', 'x1', 'VSS'], ['VSS', 'A1', 'x2'], ['VSS', 'A2', 'x2'], ['net_1', 'A1', 'x1'], ['VSS', 'A2', 'net_1'], ['VSS', 'x2', 'x1']]]
P matrix = [[0, 1, 0, 0, 0, 0], [1, 0, 1, 0, 1, 0], [0, 1, 0, 1, 0, 0], [0, 0, 1, 0, 1, 0], [0, 1, 0, 1, 0, 2], [0, 0, 0, 0, 2, 0]]
N matrix = [[0, 1, 0, 0, 0], [1, 0, 2, 1, 1], [0, 2, 0, 0, 0], [0, 1, 0, 0, 1], [0, 1, 0, 1, 0]]
P odd degree count : 2
N odd degree count : 2
P start point : [0, 1]
N start point : [0, 1]
Is dummy need : False
P dummy count : 1
N dummy count : 0
P euler path candidates : [[1, 4, 5, 4, 3, 2, 1, 0], [0, 1, 4, 5, 4, 3, 2, 1], [1, 2, 3, 4, 5, 4, 1, 0], [0, 1, 2, 3, 4, 5, 4, 1], [1, 4, 5, 4, 3, 2, 1, 0], [0, 1, 4, 5, 4, 3, 2, 1], [1, 2, 3, 4, 5, 4, 1, 0], [0, 1, 2, 3, 4, 5, 4, 1]]
N euler path candidates : [[1, 4, 3, 1, 2, 1, 0], [0, 1, 4, 3, 1, 2, 1], [1, 3, 4, 1, 2, 1, 0], [1, 2, 1, 3, 4, 1, 0], [0, 1, 3, 4, 1, 2, 1], [0, 1, 2, 1, 3, 4, 1], [1, 4, 3, 1, 2, 1, 0], [0, 1, 4, 3, 1, 2, 1], [1, 3, 4, 1, 2, 1, 0], [1, 2, 1, 3, 4, 1, 0], [0, 1, 3, 4, 1, 2, 1], [0, 1, 2, 1, 3, 4, 1]]
P loop is : True
P loop number : [[1, 4], [1, 4]]
P loop count : [[2, 2], [2, 2]]
P loop point : [[[0, 6], [1, 3]], [[1, 7], [2, 4]]]
N loop is : True
N loop number : [[1], [1]]
N loop count : [[3], [3]]
N loop point : [[[0, 3, 5]], [[1, 4, 6]]]
P poly ordering : [['x2', 'A1', 'A2', 'dummy', 'A1', 'A2', 'x1'], ['x1', 'x2', 'A1', 'A2', 'dummy', 'A1', 'A2'], ['A2', 'A1', 'dummy', 'A1', 'A2', 'x2', 'x1'], ['x1', 'A2', 'A1', 'dummy', 'A1', 'A2', 'x2'], ['x2', 'A2', 'A1', 'dummy', 'A1', 'A2', 'x1'], ['x1', 'x2', 'A2', 'A1', 'dummy', 'A1', 'A2'], ['A2', 'A1', 'dummy', 'A2', 'A1', 'x2', 'x1'], ['x1', 'A2', 'A1', 'dummy', 'A2', 'A1', 'x2']]
N poly ordering : [['x2', 'A1', 'A2', 'A1', 'A2', 'x1'], ['x1', 'x2', 'A1', 'A2', 'A1', 'A2'], ['A2', 'A1', 'x2', 'A1', 'A2', 'x1'], ['A1', 'A2', 'A2', 'A1', 'x2', 'x1'], ['x1', 'A2', 'A1', 'x2', 'A1', 'A2'], ['x1', 'A1', 'A2', 'A2', 'A1', 'x2'], ['x2', 'A1', 'A2', 'A2', 'A1', 'x1'], ['x1', 'x2', 'A1', 'A2', 'A2', 'A1'], ['A2', 'A1', 'x2', 'A2', 'A1', 'x1'], ['A2', 'A1', 'A2', 'A1', 'x2', 'x1'], ['x1', 'A2', 'A1', 'x2', 'A2', 'A1'], ['x1', 'A2', 'A1', 'A2', 'A1', 'x2']]
Poly ordering : [['x2', 'A1', 'A2', 'dummy', 'A1', 'A2', 'x1'], ['x1', 'A2', 'A1', 'dummy', 'A2', 'A1', 'x2'], ['x1', 'x2', 'A1', 'A2', 'dummy', 'A1', 'A2'], ['A2', 'A1', 'dummy', 'A2', 'A1', 'x2', 'x1']]
P diffusion chain : [['VDD', 'net_2', 'x1', 'net_2', 'x2', 'net_0', 'VDD', 'ZN'], ['ZN', 'VDD', 'net_0', 'x2', 'net_2', 'x1', 'net_2', 'VDD'], ['ZN', 'VDD', 'net_2', 'x1', 'net_2', 'x2', 'net_0', 'VDD'], ['VDD', 'net_0', 'x2', 'net_2', 'x1', 'net_2', 'VDD', 'ZN']]
N diffusion chain : [['VSS', 'x1', 'net_1', 'VSS', 'VSS', 'x2', 'VSS', 'ZN'], ['ZN', 'VSS', 'x2', 'VSS', 'VSS', 'net_1', 'x1', 'VSS'], ['ZN', 'VSS', 'x1', 'net_1', 'VSS', 'VSS', 'x2', 'VSS'], ['VSS', 'x2', 'VSS', 'VSS', 'net_1', 'x1', 'VSS', 'ZN']]
Diffusion sharing : [1, 1, 1, 1]
P Diffusion weight : [20, 20, 20, 20]
N Diffusion weight : [16, 16, 16, 16]
Total diffusion weight : [35, 35, 35, 35]
END

Cell Name : XNOR2_X1
P Vertex : ['ZN', 'VDD', 'net_0', 'x2', 'net_2', 'x1']
N Vertex : ['ZN', 'VSS', 'x2', 'net_1', 'x1']
Edge : ['x1', 'A1', 'A2', 'x2', 'dummy']
Tr_info : [[['ZN', 'x1', 'VDD'], ['net_0', 'A1', 'x2'], ['VDD', 'A2', 'net_0'], ['net_2', 'A1', 'x1'], ['net_2', 'A2', 'x1'], ['VDD', 'x2', 'net_2'], ['VDD', 'dummy', 'net_2']], [['ZN', 'x1', 'VSS'], ['VSS', 'A1', 'x2'], ['VSS', 'A2', 'x2'], ['net_1', 'A1', 'x1'], ['VSS', 'A2', 'net_1'], ['VSS', 'x2', 'x1']]]
P matrix = [[0, 1, 0, 0, 0, 0], [1, 0, 1, 0, 2, 0], [0, 1, 0, 1, 0, 0], [0, 0, 1, 0, 0, 0], [0, 2, 0, 0, 0, 2], [0, 0, 0, 0, 2, 0]]
N matrix = [[0, 1, 0, 0, 0], [1, 0, 2, 1, 1], [0, 2, 0, 0, 0], [0, 1, 0, 0, 1], [0, 1, 0, 1, 0]]
P odd degree count : 2
N odd degree count : 2
P start point : [0, 3]
N start point : [0, 1]
Is dummy need : False
P dummy count : 1
N dummy count : 0
P euler path candidates : [[3, 2, 1, 4, 5, 4, 1, 0], [0, 1, 4, 5, 4, 1, 2, 3], [3, 2, 1, 4, 5, 4, 1, 0], [0, 1, 4, 5, 4, 1, 2, 3], [3, 2, 1, 4, 5, 4, 1, 0], [0, 1, 4, 5, 4, 1, 2, 3], [3, 2, 1, 4, 5, 4, 1, 0], [0, 1, 4, 5, 4, 1, 2, 3]]
N euler path candidates : [[1, 4, 3, 1, 2, 1, 0], [0, 1, 4, 3, 1, 2, 1], [1, 3, 4, 1, 2, 1, 0], [1, 2, 1, 3, 4, 1, 0], [0, 1, 3, 4, 1, 2, 1], [0, 1, 2, 1, 3, 4, 1], [1, 4, 3, 1, 2, 1, 0], [0, 1, 4, 3, 1, 2, 1], [1, 3, 4, 1, 2, 1, 0], [1, 2, 1, 3, 4, 1, 0], [0, 1, 3, 4, 1, 2, 1], [0, 1, 2, 1, 3, 4, 1]]
P loop is : True
P loop number : [[1, 4], [1, 4]]
P loop count : [[2, 2], [2, 2]]
P loop point : [[[2, 6], [3, 5]], [[1, 5], [2, 4]]]
N loop is : True
N loop number : [[1], [1]]
N loop count : [[3], [3]]
N loop point : [[[0, 3, 5]], [[1, 4, 6]]]
P poly ordering : [['A1', 'A2', 'x2', 'A1', 'A2', 'dummy', 'x1'], ['x1', 'x2', 'A1', 'A2', 'dummy', 'A2', 'A1'], ['A1', 'A2', 'x2', 'A1', 'A2', 'dummy', 'x1'], ['x1', 'x2', 'A1', 'A2', 'dummy', 'A2', 'A1'], ['A1', 'A2', 'dummy', 'A2', 'A1', 'x2', 'x1'], ['x1', 'dummy', 'A2', 'A1', 'x2', 'A2', 'A1'], ['A1', 'A2', 'dummy', 'A2', 'A1', 'x2', 'x1'], ['x1', 'dummy', 'A2', 'A1', 'x2', 'A2', 'A1']]
N poly ordering : [['x2', 'A1', 'A2', 'A1', 'A2', 'x1'], ['x1', 'x2', 'A1', 'A2', 'A1', 'A2'], ['A2', 'A1', 'x2', 'A1', 'A2', 'x1'], ['A1', 'A2', 'A2', 'A1', 'x2', 'x1'], ['x1', 'A2', 'A1', 'x2', 'A1', 'A2'], ['x1', 'A1', 'A2', 'A2', 'A1', 'x2'], ['x2', 'A1', 'A2', 'A2', 'A1', 'x1'], ['x1', 'x2', 'A1', 'A2', 'A2', 'A1'], ['A2', 'A1', 'x2', 'A2', 'A1', 'x1'], ['A2', 'A1', 'A2', 'A1', 'x2', 'x1'], ['x1', 'A2', 'A1', 'x2', 'A2', 'A1'], ['x1', 'A2', 'A1', 'A2', 'A1', 'x2']]
Poly ordering : [['x1', 'dummy', 'A2', 'A1', 'x2', 'A2', 'A1'], ['A1', 'A2', 'dummy', 'A2', 'A1', 'x2', 'x1'], ['x1', 'x2', 'A1', 'A2', 'dummy', 'A2', 'A1']]
P diffusion chain : [['ZN', 'VDD', 'net_2', 'x1', 'net_2', 'VDD', 'net_0', 'x2'], ['x2', 'net_0', 'VDD', 'net_2', 'x1', 'net_2', 'VDD', 'ZN'], ['ZN', 'VDD', 'net_2', 'x1', 'net_2', 'VDD', 'net_0', 'x2']]
N diffusion chain : [['ZN', 'VSS', 'VSS', 'net_1', 'x1', 'VSS', 'x2', 'VSS'], ['VSS', 'x2', 'VSS', 'VSS', 'net_1', 'x1', 'VSS', 'ZN'], ['ZN', 'VSS', 'x1', 'net_1', 'VSS', 'VSS', 'x2', 'VSS']]
Diffusion sharing : [1, 1, 1]
P Diffusion weight : [20, 20, 20]
N Diffusion weight : [16, 16, 16]
Total diffusion weight : [35, 35, 35]
END

Cell Name : XNOR2_X1
P Vertex : ['ZN', 'VDD', 'net_0', 'x2', 'net_2', 'x1']
N Vertex : ['ZN', 'VSS', 'x2', 'net_1', 'x1']
Edge : ['x1', 'A1', 'A2', 'x2', 'dummy']
Tr_info : [[['ZN', 'x1', 'VDD'], ['net_0', 'A1', 'x2'], ['VDD', 'A2', 'net_0'], ['net_2', 'A1', 'x1'], ['net_2', 'A2', 'x1'], ['VDD', 'x2', 'net_2'], ['VDD', 'dummy', 'x2']], [['ZN', 'x1', 'VSS'], ['VSS', 'A1', 'x2'], ['VSS', 'A2', 'x2'], ['net_1', 'A1', 'x1'], ['VSS', 'A2', 'net_1'], ['VSS', 'x2', 'x1']]]
P matrix = [[0, 1, 0, 0, 0, 0], [1, 0, 1, 1, 1, 0], [0, 1, 0, 1, 0, 0], [0, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 2], [0, 0, 0, 0, 2, 0]]
N matrix = [[0, 1, 0, 0, 0], [1, 0, 2, 1, 1], [0, 2, 0, 0, 0], [0, 1, 0, 0, 1], [0, 1, 0, 1, 0]]
P odd degree count : 2
N odd degree count : 2
P start point : [0, 4]
N start point : [0, 1]
Is dummy need : False
P dummy count : 1
N dummy count : 0
P euler path candidates : [[4, 5, 4, 1, 3, 2, 1, 0], [0, 1, 3, 2, 1, 4, 5, 4], [4, 5, 4, 1, 2, 3, 1, 0], [0, 1, 2, 3, 1, 4, 5, 4], [4, 5, 4, 1, 3, 2, 1, 0], [0, 1, 3, 2, 1, 4, 5, 4], [4, 5, 4, 1, 2, 3, 1, 0], [0, 1, 2, 3, 1, 4, 5, 4]]
N euler path candidates : [[1, 4, 3, 1, 2, 1, 0], [0, 1, 4, 3, 1, 2, 1], [1, 3, 4, 1, 2, 1, 0], [1, 2, 1, 3, 4, 1, 0], [0, 1, 3, 4, 1, 2, 1], [0, 1, 2, 1, 3, 4, 1], [1, 4, 3, 1, 2, 1, 0], [0, 1, 4, 3, 1, 2, 1], [1, 3, 4, 1, 2, 1, 0], [1, 2, 1, 3, 4, 1, 0], [0, 1, 3, 4, 1, 2, 1], [0, 1, 2, 1, 3, 4, 1]]
P loop is : True
P loop number : [[4, 1], [1, 4]]
P loop count : [[2, 2], [2, 2]]
P loop point : [[[0, 2], [3, 6]], [[1, 4], [5, 7]]]
N loop is : True
N loop number : [[1], [1]]
N loop count : [[3], [3]]
N loop point : [[[0, 3, 5]], [[1, 4, 6]]]
P poly ordering : [['A1', 'A2', 'x2', 'dummy', 'A1', 'A2', 'x1'], ['x1', 'dummy', 'A1', 'A2', 'x2', 'A1', 'A2'], ['A1', 'A2', 'x2', 'A2', 'A1', 'dummy', 'x1'], ['x1', 'A2', 'A1', 'dummy', 'x2', 'A1', 'A2'], ['A2', 'A1', 'x2', 'dummy', 'A1', 'A2', 'x1'], ['x1', 'dummy', 'A1', 'A2', 'x2', 'A2', 'A1'], ['A2', 'A1', 'x2', 'A2', 'A1', 'dummy', 'x1'], ['x1', 'A2', 'A1', 'dummy', 'x2', 'A2', 'A1']]
N poly ordering : [['x2', 'A1', 'A2', 'A1', 'A2', 'x1'], ['x1', 'x2', 'A1', 'A2', 'A1', 'A2'], ['A2', 'A1', 'x2', 'A1', 'A2', 'x1'], ['A1', 'A2', 'A2', 'A1', 'x2', 'x1'], ['x1', 'A2', 'A1', 'x2', 'A1', 'A2'], ['x1', 'A1', 'A2', 'A2', 'A1', 'x2'], ['x2', 'A1', 'A2', 'A2', 'A1', 'x1'], ['x1', 'x2', 'A1', 'A2', 'A2', 'A1'], ['A2', 'A1', 'x2', 'A2', 'A1', 'x1'], ['A2', 'A1', 'A2', 'A1', 'x2', 'x1'], ['x1', 'A2', 'A1', 'x2', 'A2', 'A1'], ['x1', 'A2', 'A1', 'A2', 'A1', 'x2']]
Poly ordering : [['x1', 'A2', 'A1', 'dummy', 'x2', 'A2', 'A1'], ['A2', 'A1', 'x2', 'A2', 'A1', 'dummy', 'x1'], ['A2', 'A1', 'x2', 'dummy', 'A1', 'A2', 'x1'], ['x1', 'A2', 'A1', 'dummy', 'x2', 'A1', 'A2']]
P diffusion chain : [['ZN', 'VDD', 'net_0', 'x2', 'VDD', 'net_2', 'x1', 'net_2'], ['net_2', 'x1', 'net_2', 'VDD', 'net_0', 'x2', 'VDD', 'ZN'], ['net_2', 'x1', 'net_2', 'VDD', 'x2', 'net_0', 'VDD', 'ZN'], ['ZN', 'VDD', 'net_0', 'x2', 'VDD', 'net_2', 'x1', 'net_2']]
N diffusion chain : [['ZN', 'VSS', 'net_1', 'x1', 'x1', 'VSS', 'x2', 'VSS'], ['VSS', 'net_1', 'x1', 'VSS', 'x2', 'VSS', 'VSS', 'ZN'], ['VSS', 'net_1', 'x1', 'VSS', 'VSS', 'x2', 'VSS', 'ZN'], ['ZN', 'VSS', 'net_1', 'x1', 'x1', 'VSS', 'x2', 'VSS']]
Diffusion sharing : [1, 1, 1, 1]
P Diffusion weight : [20, 20, 20, 20]
N Diffusion weight : [14, 16, 16, 14]
Total diffusion weight : [33, 35, 35, 33]
END

Cell Name : XNOR2_X1
P Vertex : ['ZN', 'VDD', 'net_0', 'x2', 'net_2', 'x1']
N Vertex : ['ZN', 'VSS', 'x2', 'net_1', 'x1']
Edge : ['x1', 'A1', 'A2', 'x2', 'dummy']
Tr_info : [[['ZN', 'x1', 'VDD'], ['net_0', 'A1', 'x2'], ['VDD', 'A2', 'net_0'], ['net_2', 'A1', 'x1'], ['net_2', 'A2', 'x1'], ['VDD', 'x2', 'net_2'], ['ZN', 'dummy', 'net_2']], [['ZN', 'x1', 'VSS'], ['VSS', 'A1', 'x2'], ['VSS', 'A2', 'x2'], ['net_1', 'A1', 'x1'], ['VSS', 'A2', 'net_1'], ['VSS', 'x2', 'x1']]]
P matrix = [[0, 1, 0, 0, 1, 0], [1, 0, 1, 0, 1, 0], [0, 1, 0, 1, 0, 0], [0, 0, 1, 0, 0, 0], [1, 1, 0, 0, 0, 2], [0, 0, 0, 0, 2, 0]]
N matrix = [[0, 1, 0, 0, 0], [1, 0, 2, 1, 1], [0, 2, 0, 0, 0], [0, 1, 0, 0, 1], [0, 1, 0, 1, 0]]
P odd degree count : 2
N odd degree count : 2
P start point : [1, 3]
N start point : [0, 1]
Is dummy need : False
P dummy count : 1
N dummy count : 0
P euler path candidates : [[3, 2, 1, 4, 5, 4, 0, 1], [1, 4, 5, 4, 0, 1, 2, 3], [3, 2, 1, 0, 4, 5, 4, 1], [1, 0, 4, 5, 4, 1, 2, 3], [3, 2, 1, 4, 5, 4, 0, 1], [1, 4, 5, 4, 0, 1, 2, 3], [3, 2, 1, 0, 4, 5, 4, 1], [1, 0, 4, 5, 4, 1, 2, 3]]
N euler path candidates : [[1, 4, 3, 1, 2, 1, 0], [0, 1, 4, 3, 1, 2, 1], [1, 3, 4, 1, 2, 1, 0], [1, 2, 1, 3, 4, 1, 0], [0, 1, 3, 4, 1, 2, 1], [0, 1, 2, 1, 3, 4, 1], [1, 4, 3, 1, 2, 1, 0], [0, 1, 4, 3, 1, 2, 1], [1, 3, 4, 1, 2, 1, 0], [1, 2, 1, 3, 4, 1, 0], [0, 1, 3, 4, 1, 2, 1], [0, 1, 2, 1, 3, 4, 1]]
P loop is : True
P loop number : [[1, 4], [1, 4]]
P loop count : [[2, 2], [2, 2]]
P loop point : [[[2, 7], [3, 5]], [[0, 5], [1, 3]]]
N loop is : True
N loop number : [[1], [1]]
N loop count : [[3], [3]]
N loop point : [[[0, 3, 5]], [[1, 4, 6]]]
P poly ordering : [['A1', 'A2', 'x2', 'A1', 'A2', 'dummy', 'x1'], ['x2', 'A1', 'A2', 'dummy', 'x1', 'A2', 'A1'], ['A1', 'A2', 'x1', 'dummy', 'A1', 'A2', 'x2'], ['x1', 'dummy', 'A1', 'A2', 'x2', 'A2', 'A1'], ['A1', 'A2', 'x2', 'A2', 'A1', 'dummy', 'x1'], ['x2', 'A2', 'A1', 'dummy', 'x1', 'A2', 'A1'], ['A1', 'A2', 'x1', 'dummy', 'A2', 'A1', 'x2'], ['x1', 'dummy', 'A2', 'A1', 'x2', 'A2', 'A1']]
N poly ordering : [['x2', 'A1', 'A2', 'A1', 'A2', 'x1'], ['x1', 'x2', 'A1', 'A2', 'A1', 'A2'], ['A2', 'A1', 'x2', 'A1', 'A2', 'x1'], ['A1', 'A2', 'A2', 'A1', 'x2', 'x1'], ['x1', 'A2', 'A1', 'x2', 'A1', 'A2'], ['x1', 'A1', 'A2', 'A2', 'A1', 'x2'], ['x2', 'A1', 'A2', 'A2', 'A1', 'x1'], ['x1', 'x2', 'A1', 'A2', 'A2', 'A1'], ['A2', 'A1', 'x2', 'A2', 'A1', 'x1'], ['A2', 'A1', 'A2', 'A1', 'x2', 'x1'], ['x1', 'A2', 'A1', 'x2', 'A2', 'A1'], ['x1', 'A2', 'A1', 'A2', 'A1', 'x2']]
Poly ordering : [['x1', 'dummy', 'A2', 'A1', 'x2', 'A2', 'A1']]
P diffusion chain : [['VDD', 'ZN', 'net_2', 'x1', 'net_2', 'VDD', 'net_0', 'x2']]
N diffusion chain : [['ZN', 'VSS', 'VSS', 'net_1', 'x1', 'VSS', 'x2', 'VSS']]
Diffusion sharing : [0]
P Diffusion weight : [20]
N Diffusion weight : [16]
Total diffusion weight : [36]
END

Cell Name : XNOR2_X1
P Vertex : ['ZN', 'VDD', 'net_0', 'x2', 'net_2', 'x1']
N Vertex : ['ZN', 'VSS', 'x2', 'net_1', 'x1']
Edge : ['x1', 'A1', 'A2', 'x2', 'dummy']
Tr_info : [[['ZN', 'x1', 'VDD'], ['net_0', 'A1', 'x2'], ['VDD', 'A2', 'net_0'], ['net_2', 'A1', 'x1'], ['net_2', 'A2', 'x1'], ['VDD', 'x2', 'net_2'], ['ZN', 'dummy', 'x2']], [['ZN', 'x1', 'VSS'], ['VSS', 'A1', 'x2'], ['VSS', 'A2', 'x2'], ['net_1', 'A1', 'x1'], ['VSS', 'A2', 'net_1'], ['VSS', 'x2', 'x1']]]
P matrix = [[0, 1, 0, 1, 0, 0], [1, 0, 1, 0, 1, 0], [0, 1, 0, 1, 0, 0], [1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 2], [0, 0, 0, 0, 2, 0]]
N matrix = [[0, 1, 0, 0, 0], [1, 0, 2, 1, 1], [0, 2, 0, 0, 0], [0, 1, 0, 0, 1], [0, 1, 0, 1, 0]]
P odd degree count : 2
N odd degree count : 2
P start point : [1, 4]
N start point : [0, 1]
Is dummy need : False
P dummy count : 1
N dummy count : 0
P euler path candidates : [[4, 5, 4, 1, 2, 3, 0, 1], [1, 2, 3, 0, 1, 4, 5, 4], [4, 5, 4, 1, 0, 3, 2, 1], [1, 0, 3, 2, 1, 4, 5, 4], [4, 5, 4, 1, 2, 3, 0, 1], [1, 2, 3, 0, 1, 4, 5, 4], [4, 5, 4, 1, 0, 3, 2, 1], [1, 0, 3, 2, 1, 4, 5, 4]]
N euler path candidates : [[1, 4, 3, 1, 2, 1, 0], [0, 1, 4, 3, 1, 2, 1], [1, 3, 4, 1, 2, 1, 0], [1, 2, 1, 3, 4, 1, 0], [0, 1, 3, 4, 1, 2, 1], [0, 1, 2, 1, 3, 4, 1], [1, 4, 3, 1, 2, 1, 0], [0, 1, 4, 3, 1, 2, 1], [1, 3, 4, 1, 2, 1, 0], [1, 2, 1, 3, 4, 1, 0], [0, 1, 3, 4, 1, 2, 1], [0, 1, 2, 1, 3, 4, 1]]
P loop is : True
P loop number : [[4, 1], [1, 4]]
P loop count : [[2, 2], [2, 2]]
P loop point : [[[0, 2], [3, 7]], [[0, 4], [5, 7]]]
N loop is : True
N loop number : [[1], [1]]
N loop count : [[3], [3]]
N loop point : [[[0, 3, 5]], [[1, 4, 6]]]
P poly ordering : [['A1', 'A2', 'x2', 'A2', 'A1', 'dummy', 'x1'], ['A2', 'A1', 'dummy', 'x1', 'x2', 'A1', 'A2'], ['A1', 'A2', 'x2', 'x1', 'dummy', 'A1', 'A2'], ['x1', 'dummy', 'A1', 'A2', 'x2', 'A1', 'A2'], ['A2', 'A1', 'x2', 'A2', 'A1', 'dummy', 'x1'], ['A2', 'A1', 'dummy', 'x1', 'x2', 'A2', 'A1'], ['A2', 'A1', 'x2', 'x1', 'dummy', 'A1', 'A2'], ['x1', 'dummy', 'A1', 'A2', 'x2', 'A2', 'A1']]
N poly ordering : [['x2', 'A1', 'A2', 'A1', 'A2', 'x1'], ['x1', 'x2', 'A1', 'A2', 'A1', 'A2'], ['A2', 'A1', 'x2', 'A1', 'A2', 'x1'], ['A1', 'A2', 'A2', 'A1', 'x2', 'x1'], ['x1', 'A2', 'A1', 'x2', 'A1', 'A2'], ['x1', 'A1', 'A2', 'A2', 'A1', 'x2'], ['x2', 'A1', 'A2', 'A2', 'A1', 'x1'], ['x1', 'x2', 'A1', 'A2', 'A2', 'A1'], ['A2', 'A1', 'x2', 'A2', 'A1', 'x1'], ['A2', 'A1', 'A2', 'A1', 'x2', 'x1'], ['x1', 'A2', 'A1', 'x2', 'A2', 'A1'], ['x1', 'A2', 'A1', 'A2', 'A1', 'x2']]
Poly ordering : [['A2', 'A1', 'x2', 'A2', 'A1', 'dummy', 'x1']]
P diffusion chain : [['net_2', 'x1', 'net_2', 'VDD', 'net_0', 'x2', 'ZN', 'VDD']]
N diffusion chain : [['VSS', 'net_1', 'x1', 'VSS', 'x2', 'VSS', 'VSS', 'ZN']]
Diffusion sharing : [0]
P Diffusion weight : [20]
N Diffusion weight : [16]
Total diffusion weight : [36]
END

